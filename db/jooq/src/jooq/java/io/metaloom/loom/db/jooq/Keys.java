/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq;


import io.metaloom.loom.db.jooq.tables.JooqAnnotation;
import io.metaloom.loom.db.jooq.tables.JooqAnnotationAsset;
import io.metaloom.loom.db.jooq.tables.JooqAnnotationComment;
import io.metaloom.loom.db.jooq.tables.JooqAnnotationReaction;
import io.metaloom.loom.db.jooq.tables.JooqAnnotationTag;
import io.metaloom.loom.db.jooq.tables.JooqAnnotationTask;
import io.metaloom.loom.db.jooq.tables.JooqAsset;
import io.metaloom.loom.db.jooq.tables.JooqAssetLocation;
import io.metaloom.loom.db.jooq.tables.JooqAssetReaction;
import io.metaloom.loom.db.jooq.tables.JooqAssetRemix;
import io.metaloom.loom.db.jooq.tables.JooqAssetTask;
import io.metaloom.loom.db.jooq.tables.JooqAssetUserMeta;
import io.metaloom.loom.db.jooq.tables.JooqBlacklist;
import io.metaloom.loom.db.jooq.tables.JooqCluster;
import io.metaloom.loom.db.jooq.tables.JooqCollection;
import io.metaloom.loom.db.jooq.tables.JooqCollectionAsset;
import io.metaloom.loom.db.jooq.tables.JooqCollectionCluster;
import io.metaloom.loom.db.jooq.tables.JooqComment;
import io.metaloom.loom.db.jooq.tables.JooqCommentReaction;
import io.metaloom.loom.db.jooq.tables.JooqCommentTask;
import io.metaloom.loom.db.jooq.tables.JooqEmbedding;
import io.metaloom.loom.db.jooq.tables.JooqEmbeddingCluster;
import io.metaloom.loom.db.jooq.tables.JooqFlywaySchemaHistory;
import io.metaloom.loom.db.jooq.tables.JooqGroup;
import io.metaloom.loom.db.jooq.tables.JooqLibrary;
import io.metaloom.loom.db.jooq.tables.JooqLibraryAsset;
import io.metaloom.loom.db.jooq.tables.JooqLibraryCollection;
import io.metaloom.loom.db.jooq.tables.JooqProject;
import io.metaloom.loom.db.jooq.tables.JooqProjectCollection;
import io.metaloom.loom.db.jooq.tables.JooqProjectLibrary;
import io.metaloom.loom.db.jooq.tables.JooqReaction;
import io.metaloom.loom.db.jooq.tables.JooqRole;
import io.metaloom.loom.db.jooq.tables.JooqRoleGroup;
import io.metaloom.loom.db.jooq.tables.JooqRolePermission;
import io.metaloom.loom.db.jooq.tables.JooqTag;
import io.metaloom.loom.db.jooq.tables.JooqTagAsset;
import io.metaloom.loom.db.jooq.tables.JooqTagCluster;
import io.metaloom.loom.db.jooq.tables.JooqTagCollection;
import io.metaloom.loom.db.jooq.tables.JooqTagUserMeta;
import io.metaloom.loom.db.jooq.tables.JooqTask;
import io.metaloom.loom.db.jooq.tables.JooqToken;
import io.metaloom.loom.db.jooq.tables.JooqTokenPermission;
import io.metaloom.loom.db.jooq.tables.JooqUser;
import io.metaloom.loom.db.jooq.tables.JooqUserGroup;
import io.metaloom.loom.db.jooq.tables.JooqUserPermission;
import io.metaloom.loom.db.jooq.tables.JooqVectorConfig;
import io.metaloom.loom.db.jooq.tables.JooqWebhook;
import io.metaloom.loom.db.jooq.tables.records.JooqAnnotationAssetRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAnnotationCommentRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAnnotationReactionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAnnotationRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAnnotationTagRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAnnotationTaskRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAssetLocationRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAssetReactionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAssetRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAssetRemixRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAssetTaskRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAssetUserMetaRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqBlacklistRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqClusterRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqCollectionAssetRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqCollectionClusterRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqCollectionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqCommentReactionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqCommentRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqCommentTaskRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqEmbeddingClusterRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqEmbeddingRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqFlywaySchemaHistoryRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqGroupRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqLibraryAssetRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqLibraryCollectionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqLibraryRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqProjectCollectionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqProjectLibraryRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqProjectRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqReactionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqRoleGroupRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqRolePermissionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqRoleRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTagAssetRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTagClusterRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTagCollectionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTagRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTagUserMetaRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTaskRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTokenPermissionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTokenRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqUserGroupRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqUserPermissionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqUserRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqVectorConfigRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqWebhookRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<JooqAnnotationRecord> ANNOTATION_PKEY = Internal.createUniqueKey(JooqAnnotation.ANNOTATION, DSL.name("annotation_pkey"), new TableField[] { JooqAnnotation.ANNOTATION.UUID }, true);
    public static final UniqueKey<JooqAnnotationAssetRecord> ANNOTATION_ASSET_PKEY = Internal.createUniqueKey(JooqAnnotationAsset.ANNOTATION_ASSET, DSL.name("annotation_asset_pkey"), new TableField[] { JooqAnnotationAsset.ANNOTATION_ASSET.ANNOTATION_UUID, JooqAnnotationAsset.ANNOTATION_ASSET.ASSET_UUID }, true);
    public static final UniqueKey<JooqAnnotationCommentRecord> ANNOTATION_COMMENT_PKEY = Internal.createUniqueKey(JooqAnnotationComment.ANNOTATION_COMMENT, DSL.name("annotation_comment_pkey"), new TableField[] { JooqAnnotationComment.ANNOTATION_COMMENT.ANNOTATION_UUID, JooqAnnotationComment.ANNOTATION_COMMENT.COMMENT_UUID }, true);
    public static final UniqueKey<JooqAnnotationReactionRecord> ANNOTATION_REACTION_PKEY = Internal.createUniqueKey(JooqAnnotationReaction.ANNOTATION_REACTION, DSL.name("annotation_reaction_pkey"), new TableField[] { JooqAnnotationReaction.ANNOTATION_REACTION.ANNOTATION_UUID, JooqAnnotationReaction.ANNOTATION_REACTION.REACTION_ANNOTATION_UUID }, true);
    public static final UniqueKey<JooqAnnotationTagRecord> ANNOTATION_TAG_PKEY = Internal.createUniqueKey(JooqAnnotationTag.ANNOTATION_TAG, DSL.name("annotation_tag_pkey"), new TableField[] { JooqAnnotationTag.ANNOTATION_TAG.ANNOTATION_UUID, JooqAnnotationTag.ANNOTATION_TAG.TAG_UUID }, true);
    public static final UniqueKey<JooqAnnotationTaskRecord> ANNOTATION_TASK_PKEY = Internal.createUniqueKey(JooqAnnotationTask.ANNOTATION_TASK, DSL.name("annotation_task_pkey"), new TableField[] { JooqAnnotationTask.ANNOTATION_TASK.ANNOTATION_UUID, JooqAnnotationTask.ANNOTATION_TASK.TASK_UUID }, true);
    public static final UniqueKey<JooqAssetRecord> ASSET_PKEY = Internal.createUniqueKey(JooqAsset.ASSET, DSL.name("asset_pkey"), new TableField[] { JooqAsset.ASSET.SHA512SUM }, true);
    public static final UniqueKey<JooqAssetLocationRecord> ASSET_LOCATION_PKEY = Internal.createUniqueKey(JooqAssetLocation.ASSET_LOCATION, DSL.name("asset_location_pkey"), new TableField[] { JooqAssetLocation.ASSET_LOCATION.UUID }, true);
    public static final UniqueKey<JooqAssetReactionRecord> ASSET_REACTION_PKEY = Internal.createUniqueKey(JooqAssetReaction.ASSET_REACTION, DSL.name("asset_reaction_pkey"), new TableField[] { JooqAssetReaction.ASSET_REACTION.ASSET_UUID, JooqAssetReaction.ASSET_REACTION.REACTION_UUID }, true);
    public static final UniqueKey<JooqAssetTaskRecord> ASSET_TASK_PKEY = Internal.createUniqueKey(JooqAssetTask.ASSET_TASK, DSL.name("asset_task_pkey"), new TableField[] { JooqAssetTask.ASSET_TASK.ASSET_UUID, JooqAssetTask.ASSET_TASK.TASK_UUID }, true);
    public static final UniqueKey<JooqAssetUserMetaRecord> ASSET_USER_META_PKEY = Internal.createUniqueKey(JooqAssetUserMeta.ASSET_USER_META, DSL.name("asset_user_meta_pkey"), new TableField[] { JooqAssetUserMeta.ASSET_USER_META.ASSET_UUID, JooqAssetUserMeta.ASSET_USER_META.USER_UUID }, true);
    public static final UniqueKey<JooqBlacklistRecord> BLACKLIST_PKEY = Internal.createUniqueKey(JooqBlacklist.BLACKLIST, DSL.name("blacklist_pkey"), new TableField[] { JooqBlacklist.BLACKLIST.UUID }, true);
    public static final UniqueKey<JooqClusterRecord> CLUSTER_PKEY = Internal.createUniqueKey(JooqCluster.CLUSTER, DSL.name("cluster_pkey"), new TableField[] { JooqCluster.CLUSTER.UUID }, true);
    public static final UniqueKey<JooqCollectionRecord> COLLECTION_NAME_KEY = Internal.createUniqueKey(JooqCollection.COLLECTION, DSL.name("collection_name_key"), new TableField[] { JooqCollection.COLLECTION.NAME }, true);
    public static final UniqueKey<JooqCollectionRecord> COLLECTION_PKEY = Internal.createUniqueKey(JooqCollection.COLLECTION, DSL.name("collection_pkey"), new TableField[] { JooqCollection.COLLECTION.UUID }, true);
    public static final UniqueKey<JooqCollectionAssetRecord> COLLECTION_ASSET_PKEY = Internal.createUniqueKey(JooqCollectionAsset.COLLECTION_ASSET, DSL.name("collection_asset_pkey"), new TableField[] { JooqCollectionAsset.COLLECTION_ASSET.COLLECTION_UUID, JooqCollectionAsset.COLLECTION_ASSET.ASSET_UUID }, true);
    public static final UniqueKey<JooqCollectionClusterRecord> COLLECTION_CLUSTER_PKEY = Internal.createUniqueKey(JooqCollectionCluster.COLLECTION_CLUSTER, DSL.name("collection_cluster_pkey"), new TableField[] { JooqCollectionCluster.COLLECTION_CLUSTER.COLLECTION_UUID, JooqCollectionCluster.COLLECTION_CLUSTER.CLUSTER_UUID }, true);
    public static final UniqueKey<JooqCommentRecord> COMMENT_PKEY = Internal.createUniqueKey(JooqComment.COMMENT, DSL.name("comment_pkey"), new TableField[] { JooqComment.COMMENT.UUID }, true);
    public static final UniqueKey<JooqCommentReactionRecord> COMMENT_REACTION_PKEY = Internal.createUniqueKey(JooqCommentReaction.COMMENT_REACTION, DSL.name("comment_reaction_pkey"), new TableField[] { JooqCommentReaction.COMMENT_REACTION.COMMENT_UUID, JooqCommentReaction.COMMENT_REACTION.REACTION_COMMENT_UUID }, true);
    public static final UniqueKey<JooqCommentTaskRecord> COMMENT_TASK_PKEY = Internal.createUniqueKey(JooqCommentTask.COMMENT_TASK, DSL.name("comment_task_pkey"), new TableField[] { JooqCommentTask.COMMENT_TASK.COMMENT_UUID, JooqCommentTask.COMMENT_TASK.TASK_UUID }, true);
    public static final UniqueKey<JooqEmbeddingRecord> EMBEDDING_PKEY = Internal.createUniqueKey(JooqEmbedding.EMBEDDING, DSL.name("embedding_pkey"), new TableField[] { JooqEmbedding.EMBEDDING.UUID }, true);
    public static final UniqueKey<JooqEmbeddingClusterRecord> EMBEDDING_CLUSTER_PKEY = Internal.createUniqueKey(JooqEmbeddingCluster.EMBEDDING_CLUSTER, DSL.name("embedding_cluster_pkey"), new TableField[] { JooqEmbeddingCluster.EMBEDDING_CLUSTER.EMBEDDING_UUID, JooqEmbeddingCluster.EMBEDDING_CLUSTER.CLUSTER_UUID }, true);
    public static final UniqueKey<JooqFlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(JooqFlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { JooqFlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<JooqGroupRecord> GROUP_NAME_KEY = Internal.createUniqueKey(JooqGroup.GROUP, DSL.name("group_name_key"), new TableField[] { JooqGroup.GROUP.NAME }, true);
    public static final UniqueKey<JooqGroupRecord> GROUP_PKEY = Internal.createUniqueKey(JooqGroup.GROUP, DSL.name("group_pkey"), new TableField[] { JooqGroup.GROUP.UUID }, true);
    public static final UniqueKey<JooqLibraryRecord> LIBRARY_PKEY = Internal.createUniqueKey(JooqLibrary.LIBRARY, DSL.name("library_pkey"), new TableField[] { JooqLibrary.LIBRARY.UUID }, true);
    public static final UniqueKey<JooqLibraryAssetRecord> LIBRARY_ASSET_PKEY = Internal.createUniqueKey(JooqLibraryAsset.LIBRARY_ASSET, DSL.name("library_asset_pkey"), new TableField[] { JooqLibraryAsset.LIBRARY_ASSET.LIBRARY_UUID, JooqLibraryAsset.LIBRARY_ASSET.ASSET_UUID }, true);
    public static final UniqueKey<JooqLibraryCollectionRecord> LIBRARY_COLLECTION_PKEY = Internal.createUniqueKey(JooqLibraryCollection.LIBRARY_COLLECTION, DSL.name("library_collection_pkey"), new TableField[] { JooqLibraryCollection.LIBRARY_COLLECTION.LIBRARY_UUID, JooqLibraryCollection.LIBRARY_COLLECTION.COLLECTION_UUID }, true);
    public static final UniqueKey<JooqProjectRecord> PROJECT_PKEY = Internal.createUniqueKey(JooqProject.PROJECT, DSL.name("project_pkey"), new TableField[] { JooqProject.PROJECT.UUID }, true);
    public static final UniqueKey<JooqProjectCollectionRecord> PROJECT_COLLECTION_PKEY = Internal.createUniqueKey(JooqProjectCollection.PROJECT_COLLECTION, DSL.name("project_collection_pkey"), new TableField[] { JooqProjectCollection.PROJECT_COLLECTION.PROJECT_UUID, JooqProjectCollection.PROJECT_COLLECTION.COLLECTION_UUID }, true);
    public static final UniqueKey<JooqProjectLibraryRecord> PROJECT_LIBRARY_PKEY = Internal.createUniqueKey(JooqProjectLibrary.PROJECT_LIBRARY, DSL.name("project_library_pkey"), new TableField[] { JooqProjectLibrary.PROJECT_LIBRARY.PROJECT_UUID, JooqProjectLibrary.PROJECT_LIBRARY.LIBRARY_UUID }, true);
    public static final UniqueKey<JooqReactionRecord> REACTION_PKEY = Internal.createUniqueKey(JooqReaction.REACTION, DSL.name("reaction_pkey"), new TableField[] { JooqReaction.REACTION.UUID }, true);
    public static final UniqueKey<JooqRoleRecord> ROLE_NAME_KEY = Internal.createUniqueKey(JooqRole.ROLE, DSL.name("role_name_key"), new TableField[] { JooqRole.ROLE.NAME }, true);
    public static final UniqueKey<JooqRoleRecord> ROLE_PKEY = Internal.createUniqueKey(JooqRole.ROLE, DSL.name("role_pkey"), new TableField[] { JooqRole.ROLE.UUID }, true);
    public static final UniqueKey<JooqRoleGroupRecord> ROLE_GROUP_PKEY = Internal.createUniqueKey(JooqRoleGroup.ROLE_GROUP, DSL.name("role_group_pkey"), new TableField[] { JooqRoleGroup.ROLE_GROUP.GROUP_UUID, JooqRoleGroup.ROLE_GROUP.ROLE_UUID }, true);
    public static final UniqueKey<JooqRolePermissionRecord> ROLE_PERMISSION_PKEY = Internal.createUniqueKey(JooqRolePermission.ROLE_PERMISSION, DSL.name("role_permission_pkey"), new TableField[] { JooqRolePermission.ROLE_PERMISSION.ROLE_UUID, JooqRolePermission.ROLE_PERMISSION.PERMISSION }, true);
    public static final UniqueKey<JooqTagRecord> TAG_PKEY = Internal.createUniqueKey(JooqTag.TAG, DSL.name("tag_pkey"), new TableField[] { JooqTag.TAG.UUID }, true);
    public static final UniqueKey<JooqTagAssetRecord> TAG_ASSET_PKEY = Internal.createUniqueKey(JooqTagAsset.TAG_ASSET, DSL.name("tag_asset_pkey"), new TableField[] { JooqTagAsset.TAG_ASSET.TAG_UUID, JooqTagAsset.TAG_ASSET.ASSET_UUID }, true);
    public static final UniqueKey<JooqTagClusterRecord> TAG_CLUSTER_PKEY = Internal.createUniqueKey(JooqTagCluster.TAG_CLUSTER, DSL.name("tag_cluster_pkey"), new TableField[] { JooqTagCluster.TAG_CLUSTER.TAG_UUID, JooqTagCluster.TAG_CLUSTER.CLUSTER_UUID }, true);
    public static final UniqueKey<JooqTagCollectionRecord> TAG_COLLECTION_PKEY = Internal.createUniqueKey(JooqTagCollection.TAG_COLLECTION, DSL.name("tag_collection_pkey"), new TableField[] { JooqTagCollection.TAG_COLLECTION.TAG_UUID, JooqTagCollection.TAG_COLLECTION.COLLECTION_UUID }, true);
    public static final UniqueKey<JooqTagUserMetaRecord> TAG_USER_META_PKEY = Internal.createUniqueKey(JooqTagUserMeta.TAG_USER_META, DSL.name("tag_user_meta_pkey"), new TableField[] { JooqTagUserMeta.TAG_USER_META.TAG_UUID, JooqTagUserMeta.TAG_USER_META.USER_UUID }, true);
    public static final UniqueKey<JooqTaskRecord> TASK_PKEY = Internal.createUniqueKey(JooqTask.TASK, DSL.name("task_pkey"), new TableField[] { JooqTask.TASK.UUID }, true);
    public static final UniqueKey<JooqTokenRecord> TOKEN_PKEY = Internal.createUniqueKey(JooqToken.TOKEN, DSL.name("token_pkey"), new TableField[] { JooqToken.TOKEN.UUID }, true);
    public static final UniqueKey<JooqTokenPermissionRecord> TOKEN_PERMISSION_PKEY = Internal.createUniqueKey(JooqTokenPermission.TOKEN_PERMISSION, DSL.name("token_permission_pkey"), new TableField[] { JooqTokenPermission.TOKEN_PERMISSION.TOKEN_UUID }, true);
    public static final UniqueKey<JooqUserRecord> USER_PKEY = Internal.createUniqueKey(JooqUser.USER, DSL.name("user_pkey"), new TableField[] { JooqUser.USER.UUID }, true);
    public static final UniqueKey<JooqUserRecord> USER_USERNAME_KEY = Internal.createUniqueKey(JooqUser.USER, DSL.name("user_username_key"), new TableField[] { JooqUser.USER.USERNAME }, true);
    public static final UniqueKey<JooqUserGroupRecord> USER_GROUP_PKEY = Internal.createUniqueKey(JooqUserGroup.USER_GROUP, DSL.name("user_group_pkey"), new TableField[] { JooqUserGroup.USER_GROUP.USER_UUID, JooqUserGroup.USER_GROUP.GROUP_UUID }, true);
    public static final UniqueKey<JooqUserPermissionRecord> USER_PERMISSION_PKEY = Internal.createUniqueKey(JooqUserPermission.USER_PERMISSION, DSL.name("user_permission_pkey"), new TableField[] { JooqUserPermission.USER_PERMISSION.USER_UUID }, true);
    public static final UniqueKey<JooqVectorConfigRecord> VECTOR_CONFIG_NAME_KEY = Internal.createUniqueKey(JooqVectorConfig.VECTOR_CONFIG, DSL.name("vector_config_name_key"), new TableField[] { JooqVectorConfig.VECTOR_CONFIG.NAME }, true);
    public static final UniqueKey<JooqWebhookRecord> WEBHOOK_PKEY = Internal.createUniqueKey(JooqWebhook.WEBHOOK, DSL.name("webhook_pkey"), new TableField[] { JooqWebhook.WEBHOOK.UUID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<JooqAnnotationRecord, JooqUserRecord> ANNOTATION__ANNOTATION_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqAnnotation.ANNOTATION, DSL.name("annotation_creator_uuid_fkey"), new TableField[] { JooqAnnotation.ANNOTATION.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqAnnotationRecord, JooqUserRecord> ANNOTATION__ANNOTATION_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqAnnotation.ANNOTATION, DSL.name("annotation_editor_uuid_fkey"), new TableField[] { JooqAnnotation.ANNOTATION.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqAnnotationAssetRecord, JooqAnnotationRecord> ANNOTATION_ASSET__ANNOTATION_ASSET_ANNOTATION_UUID_FKEY = Internal.createForeignKey(JooqAnnotationAsset.ANNOTATION_ASSET, DSL.name("annotation_asset_annotation_uuid_fkey"), new TableField[] { JooqAnnotationAsset.ANNOTATION_ASSET.ANNOTATION_UUID }, Keys.ANNOTATION_PKEY, new TableField[] { JooqAnnotation.ANNOTATION.UUID }, true);
    public static final ForeignKey<JooqAnnotationCommentRecord, JooqAnnotationRecord> ANNOTATION_COMMENT__ANNOTATION_COMMENT_ANNOTATION_UUID_FKEY = Internal.createForeignKey(JooqAnnotationComment.ANNOTATION_COMMENT, DSL.name("annotation_comment_annotation_uuid_fkey"), new TableField[] { JooqAnnotationComment.ANNOTATION_COMMENT.ANNOTATION_UUID }, Keys.ANNOTATION_PKEY, new TableField[] { JooqAnnotation.ANNOTATION.UUID }, true);
    public static final ForeignKey<JooqAnnotationCommentRecord, JooqCommentRecord> ANNOTATION_COMMENT__ANNOTATION_COMMENT_COMMENT_UUID_FKEY = Internal.createForeignKey(JooqAnnotationComment.ANNOTATION_COMMENT, DSL.name("annotation_comment_comment_uuid_fkey"), new TableField[] { JooqAnnotationComment.ANNOTATION_COMMENT.COMMENT_UUID }, Keys.COMMENT_PKEY, new TableField[] { JooqComment.COMMENT.UUID }, true);
    public static final ForeignKey<JooqAnnotationReactionRecord, JooqAnnotationRecord> ANNOTATION_REACTION__ANNOTATION_REACTION_ANNOTATION_UUID_FKEY = Internal.createForeignKey(JooqAnnotationReaction.ANNOTATION_REACTION, DSL.name("annotation_reaction_annotation_uuid_fkey"), new TableField[] { JooqAnnotationReaction.ANNOTATION_REACTION.ANNOTATION_UUID }, Keys.ANNOTATION_PKEY, new TableField[] { JooqAnnotation.ANNOTATION.UUID }, true);
    public static final ForeignKey<JooqAnnotationReactionRecord, JooqReactionRecord> ANNOTATION_REACTION__ANNOTATION_REACTION_REACTION_ANNOTATION_UUID_FKEY = Internal.createForeignKey(JooqAnnotationReaction.ANNOTATION_REACTION, DSL.name("annotation_reaction_reaction_annotation_uuid_fkey"), new TableField[] { JooqAnnotationReaction.ANNOTATION_REACTION.REACTION_ANNOTATION_UUID }, Keys.REACTION_PKEY, new TableField[] { JooqReaction.REACTION.UUID }, true);
    public static final ForeignKey<JooqAnnotationTagRecord, JooqAnnotationRecord> ANNOTATION_TAG__ANNOTATION_TAG_ANNOTATION_UUID_FKEY = Internal.createForeignKey(JooqAnnotationTag.ANNOTATION_TAG, DSL.name("annotation_tag_annotation_uuid_fkey"), new TableField[] { JooqAnnotationTag.ANNOTATION_TAG.ANNOTATION_UUID }, Keys.ANNOTATION_PKEY, new TableField[] { JooqAnnotation.ANNOTATION.UUID }, true);
    public static final ForeignKey<JooqAnnotationTagRecord, JooqTagRecord> ANNOTATION_TAG__ANNOTATION_TAG_TAG_UUID_FKEY = Internal.createForeignKey(JooqAnnotationTag.ANNOTATION_TAG, DSL.name("annotation_tag_tag_uuid_fkey"), new TableField[] { JooqAnnotationTag.ANNOTATION_TAG.TAG_UUID }, Keys.TAG_PKEY, new TableField[] { JooqTag.TAG.UUID }, true);
    public static final ForeignKey<JooqAnnotationTaskRecord, JooqAnnotationRecord> ANNOTATION_TASK__ANNOTATION_TASK_ANNOTATION_UUID_FKEY = Internal.createForeignKey(JooqAnnotationTask.ANNOTATION_TASK, DSL.name("annotation_task_annotation_uuid_fkey"), new TableField[] { JooqAnnotationTask.ANNOTATION_TASK.ANNOTATION_UUID }, Keys.ANNOTATION_PKEY, new TableField[] { JooqAnnotation.ANNOTATION.UUID }, true);
    public static final ForeignKey<JooqAnnotationTaskRecord, JooqTaskRecord> ANNOTATION_TASK__ANNOTATION_TASK_TASK_UUID_FKEY = Internal.createForeignKey(JooqAnnotationTask.ANNOTATION_TASK, DSL.name("annotation_task_task_uuid_fkey"), new TableField[] { JooqAnnotationTask.ANNOTATION_TASK.TASK_UUID }, Keys.TASK_PKEY, new TableField[] { JooqTask.TASK.UUID }, true);
    public static final ForeignKey<JooqAssetRecord, JooqUserRecord> ASSET__ASSET_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqAsset.ASSET, DSL.name("asset_creator_uuid_fkey"), new TableField[] { JooqAsset.ASSET.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqAssetRecord, JooqUserRecord> ASSET__ASSET_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqAsset.ASSET, DSL.name("asset_editor_uuid_fkey"), new TableField[] { JooqAsset.ASSET.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqAssetLocationRecord, JooqUserRecord> ASSET_LOCATION__ASSET_LOCATION_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqAssetLocation.ASSET_LOCATION, DSL.name("asset_location_creator_uuid_fkey"), new TableField[] { JooqAssetLocation.ASSET_LOCATION.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqAssetLocationRecord, JooqUserRecord> ASSET_LOCATION__ASSET_LOCATION_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqAssetLocation.ASSET_LOCATION, DSL.name("asset_location_editor_uuid_fkey"), new TableField[] { JooqAssetLocation.ASSET_LOCATION.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqAssetLocationRecord, JooqUserRecord> ASSET_LOCATION__ASSET_LOCATION_LOCKED_BY_UUID_FKEY = Internal.createForeignKey(JooqAssetLocation.ASSET_LOCATION, DSL.name("asset_location_locked_by_uuid_fkey"), new TableField[] { JooqAssetLocation.ASSET_LOCATION.LOCKED_BY_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqAssetReactionRecord, JooqReactionRecord> ASSET_REACTION__ASSET_REACTION_REACTION_UUID_FKEY = Internal.createForeignKey(JooqAssetReaction.ASSET_REACTION, DSL.name("asset_reaction_reaction_uuid_fkey"), new TableField[] { JooqAssetReaction.ASSET_REACTION.REACTION_UUID }, Keys.REACTION_PKEY, new TableField[] { JooqReaction.REACTION.UUID }, true);
    public static final ForeignKey<JooqAssetRemixRecord, JooqUserRecord> ASSET_REMIX__ASSET_REMIX_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqAssetRemix.ASSET_REMIX, DSL.name("asset_remix_creator_uuid_fkey"), new TableField[] { JooqAssetRemix.ASSET_REMIX.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqAssetTaskRecord, JooqTaskRecord> ASSET_TASK__ASSET_TASK_TASK_UUID_FKEY = Internal.createForeignKey(JooqAssetTask.ASSET_TASK, DSL.name("asset_task_task_uuid_fkey"), new TableField[] { JooqAssetTask.ASSET_TASK.TASK_UUID }, Keys.TASK_PKEY, new TableField[] { JooqTask.TASK.UUID }, true);
    public static final ForeignKey<JooqAssetUserMetaRecord, JooqUserRecord> ASSET_USER_META__ASSET_USER_META_USER_UUID_FKEY = Internal.createForeignKey(JooqAssetUserMeta.ASSET_USER_META, DSL.name("asset_user_meta_user_uuid_fkey"), new TableField[] { JooqAssetUserMeta.ASSET_USER_META.USER_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqBlacklistRecord, JooqUserRecord> BLACKLIST__BLACKLIST_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqBlacklist.BLACKLIST, DSL.name("blacklist_creator_uuid_fkey"), new TableField[] { JooqBlacklist.BLACKLIST.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqBlacklistRecord, JooqUserRecord> BLACKLIST__BLACKLIST_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqBlacklist.BLACKLIST, DSL.name("blacklist_editor_uuid_fkey"), new TableField[] { JooqBlacklist.BLACKLIST.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqClusterRecord, JooqUserRecord> CLUSTER__CLUSTER_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqCluster.CLUSTER, DSL.name("cluster_creator_uuid_fkey"), new TableField[] { JooqCluster.CLUSTER.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqClusterRecord, JooqUserRecord> CLUSTER__CLUSTER_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqCluster.CLUSTER, DSL.name("cluster_editor_uuid_fkey"), new TableField[] { JooqCluster.CLUSTER.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqCollectionRecord, JooqUserRecord> COLLECTION__COLLECTION_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqCollection.COLLECTION, DSL.name("collection_creator_uuid_fkey"), new TableField[] { JooqCollection.COLLECTION.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqCollectionRecord, JooqUserRecord> COLLECTION__COLLECTION_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqCollection.COLLECTION, DSL.name("collection_editor_uuid_fkey"), new TableField[] { JooqCollection.COLLECTION.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqCollectionRecord, JooqCollectionRecord> COLLECTION__COLLECTION_PARENT_COLLECTION_UUID_FKEY = Internal.createForeignKey(JooqCollection.COLLECTION, DSL.name("collection_parent_collection_uuid_fkey"), new TableField[] { JooqCollection.COLLECTION.PARENT_COLLECTION_UUID }, Keys.COLLECTION_PKEY, new TableField[] { JooqCollection.COLLECTION.UUID }, true);
    public static final ForeignKey<JooqCollectionRecord, JooqCollectionRecord> COLLECTION__COLLECTION_PARENT_COLLECTION_UUID_FKEY1 = Internal.createForeignKey(JooqCollection.COLLECTION, DSL.name("collection_parent_collection_uuid_fkey1"), new TableField[] { JooqCollection.COLLECTION.PARENT_COLLECTION_UUID }, Keys.COLLECTION_PKEY, new TableField[] { JooqCollection.COLLECTION.UUID }, true);
    public static final ForeignKey<JooqCollectionAssetRecord, JooqCollectionRecord> COLLECTION_ASSET__COLLECTION_ASSET_COLLECTION_UUID_FKEY = Internal.createForeignKey(JooqCollectionAsset.COLLECTION_ASSET, DSL.name("collection_asset_collection_uuid_fkey"), new TableField[] { JooqCollectionAsset.COLLECTION_ASSET.COLLECTION_UUID }, Keys.COLLECTION_PKEY, new TableField[] { JooqCollection.COLLECTION.UUID }, true);
    public static final ForeignKey<JooqCollectionClusterRecord, JooqClusterRecord> COLLECTION_CLUSTER__COLLECTION_CLUSTER_CLUSTER_UUID_FKEY = Internal.createForeignKey(JooqCollectionCluster.COLLECTION_CLUSTER, DSL.name("collection_cluster_cluster_uuid_fkey"), new TableField[] { JooqCollectionCluster.COLLECTION_CLUSTER.CLUSTER_UUID }, Keys.CLUSTER_PKEY, new TableField[] { JooqCluster.CLUSTER.UUID }, true);
    public static final ForeignKey<JooqCollectionClusterRecord, JooqCollectionRecord> COLLECTION_CLUSTER__COLLECTION_CLUSTER_COLLECTION_UUID_FKEY = Internal.createForeignKey(JooqCollectionCluster.COLLECTION_CLUSTER, DSL.name("collection_cluster_collection_uuid_fkey"), new TableField[] { JooqCollectionCluster.COLLECTION_CLUSTER.COLLECTION_UUID }, Keys.COLLECTION_PKEY, new TableField[] { JooqCollection.COLLECTION.UUID }, true);
    public static final ForeignKey<JooqCommentRecord, JooqCommentRecord> COMMENT__COMMENT_PARENT_UUID_FKEY = Internal.createForeignKey(JooqComment.COMMENT, DSL.name("comment_parent_uuid_fkey"), new TableField[] { JooqComment.COMMENT.PARENT_UUID }, Keys.COMMENT_PKEY, new TableField[] { JooqComment.COMMENT.UUID }, true);
    public static final ForeignKey<JooqCommentRecord, JooqUserRecord> COMMENT__COMMENT_USER_UUID_FKEY = Internal.createForeignKey(JooqComment.COMMENT, DSL.name("comment_user_uuid_fkey"), new TableField[] { JooqComment.COMMENT.USER_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqCommentReactionRecord, JooqCommentRecord> COMMENT_REACTION__COMMENT_REACTION_COMMENT_UUID_FKEY = Internal.createForeignKey(JooqCommentReaction.COMMENT_REACTION, DSL.name("comment_reaction_comment_uuid_fkey"), new TableField[] { JooqCommentReaction.COMMENT_REACTION.COMMENT_UUID }, Keys.COMMENT_PKEY, new TableField[] { JooqComment.COMMENT.UUID }, true);
    public static final ForeignKey<JooqCommentReactionRecord, JooqCommentRecord> COMMENT_REACTION__COMMENT_REACTION_REACTION_COMMENT_UUID_FKEY = Internal.createForeignKey(JooqCommentReaction.COMMENT_REACTION, DSL.name("comment_reaction_reaction_comment_uuid_fkey"), new TableField[] { JooqCommentReaction.COMMENT_REACTION.REACTION_COMMENT_UUID }, Keys.COMMENT_PKEY, new TableField[] { JooqComment.COMMENT.UUID }, true);
    public static final ForeignKey<JooqCommentTaskRecord, JooqCommentRecord> COMMENT_TASK__COMMENT_TASK_COMMENT_UUID_FKEY = Internal.createForeignKey(JooqCommentTask.COMMENT_TASK, DSL.name("comment_task_comment_uuid_fkey"), new TableField[] { JooqCommentTask.COMMENT_TASK.COMMENT_UUID }, Keys.COMMENT_PKEY, new TableField[] { JooqComment.COMMENT.UUID }, true);
    public static final ForeignKey<JooqCommentTaskRecord, JooqTaskRecord> COMMENT_TASK__COMMENT_TASK_TASK_UUID_FKEY = Internal.createForeignKey(JooqCommentTask.COMMENT_TASK, DSL.name("comment_task_task_uuid_fkey"), new TableField[] { JooqCommentTask.COMMENT_TASK.TASK_UUID }, Keys.TASK_PKEY, new TableField[] { JooqTask.TASK.UUID }, true);
    public static final ForeignKey<JooqEmbeddingRecord, JooqUserRecord> EMBEDDING__EMBEDDING_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqEmbedding.EMBEDDING, DSL.name("embedding_creator_uuid_fkey"), new TableField[] { JooqEmbedding.EMBEDDING.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqEmbeddingRecord, JooqUserRecord> EMBEDDING__EMBEDDING_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqEmbedding.EMBEDDING, DSL.name("embedding_editor_uuid_fkey"), new TableField[] { JooqEmbedding.EMBEDDING.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqEmbeddingClusterRecord, JooqClusterRecord> EMBEDDING_CLUSTER__EMBEDDING_CLUSTER_CLUSTER_UUID_FKEY = Internal.createForeignKey(JooqEmbeddingCluster.EMBEDDING_CLUSTER, DSL.name("embedding_cluster_cluster_uuid_fkey"), new TableField[] { JooqEmbeddingCluster.EMBEDDING_CLUSTER.CLUSTER_UUID }, Keys.CLUSTER_PKEY, new TableField[] { JooqCluster.CLUSTER.UUID }, true);
    public static final ForeignKey<JooqEmbeddingClusterRecord, JooqEmbeddingRecord> EMBEDDING_CLUSTER__EMBEDDING_CLUSTER_EMBEDDING_UUID_FKEY = Internal.createForeignKey(JooqEmbeddingCluster.EMBEDDING_CLUSTER, DSL.name("embedding_cluster_embedding_uuid_fkey"), new TableField[] { JooqEmbeddingCluster.EMBEDDING_CLUSTER.EMBEDDING_UUID }, Keys.EMBEDDING_PKEY, new TableField[] { JooqEmbedding.EMBEDDING.UUID }, true);
    public static final ForeignKey<JooqGroupRecord, JooqUserRecord> GROUP__GROUP_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqGroup.GROUP, DSL.name("group_creator_uuid_fkey"), new TableField[] { JooqGroup.GROUP.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqGroupRecord, JooqUserRecord> GROUP__GROUP_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqGroup.GROUP, DSL.name("group_editor_uuid_fkey"), new TableField[] { JooqGroup.GROUP.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqLibraryRecord, JooqUserRecord> LIBRARY__LIBRARY_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqLibrary.LIBRARY, DSL.name("library_creator_uuid_fkey"), new TableField[] { JooqLibrary.LIBRARY.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqLibraryRecord, JooqUserRecord> LIBRARY__LIBRARY_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqLibrary.LIBRARY, DSL.name("library_editor_uuid_fkey"), new TableField[] { JooqLibrary.LIBRARY.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqLibraryAssetRecord, JooqLibraryRecord> LIBRARY_ASSET__LIBRARY_ASSET_LIBRARY_UUID_FKEY = Internal.createForeignKey(JooqLibraryAsset.LIBRARY_ASSET, DSL.name("library_asset_library_uuid_fkey"), new TableField[] { JooqLibraryAsset.LIBRARY_ASSET.LIBRARY_UUID }, Keys.LIBRARY_PKEY, new TableField[] { JooqLibrary.LIBRARY.UUID }, true);
    public static final ForeignKey<JooqLibraryCollectionRecord, JooqCollectionRecord> LIBRARY_COLLECTION__LIBRARY_COLLECTION_COLLECTION_UUID_FKEY = Internal.createForeignKey(JooqLibraryCollection.LIBRARY_COLLECTION, DSL.name("library_collection_collection_uuid_fkey"), new TableField[] { JooqLibraryCollection.LIBRARY_COLLECTION.COLLECTION_UUID }, Keys.COLLECTION_PKEY, new TableField[] { JooqCollection.COLLECTION.UUID }, true);
    public static final ForeignKey<JooqLibraryCollectionRecord, JooqLibraryRecord> LIBRARY_COLLECTION__LIBRARY_COLLECTION_LIBRARY_UUID_FKEY = Internal.createForeignKey(JooqLibraryCollection.LIBRARY_COLLECTION, DSL.name("library_collection_library_uuid_fkey"), new TableField[] { JooqLibraryCollection.LIBRARY_COLLECTION.LIBRARY_UUID }, Keys.LIBRARY_PKEY, new TableField[] { JooqLibrary.LIBRARY.UUID }, true);
    public static final ForeignKey<JooqProjectRecord, JooqUserRecord> PROJECT__PROJECT_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqProject.PROJECT, DSL.name("project_creator_uuid_fkey"), new TableField[] { JooqProject.PROJECT.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqProjectRecord, JooqUserRecord> PROJECT__PROJECT_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqProject.PROJECT, DSL.name("project_editor_uuid_fkey"), new TableField[] { JooqProject.PROJECT.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqProjectCollectionRecord, JooqCollectionRecord> PROJECT_COLLECTION__PROJECT_COLLECTION_COLLECTION_UUID_FKEY = Internal.createForeignKey(JooqProjectCollection.PROJECT_COLLECTION, DSL.name("project_collection_collection_uuid_fkey"), new TableField[] { JooqProjectCollection.PROJECT_COLLECTION.COLLECTION_UUID }, Keys.COLLECTION_PKEY, new TableField[] { JooqCollection.COLLECTION.UUID }, true);
    public static final ForeignKey<JooqProjectCollectionRecord, JooqProjectRecord> PROJECT_COLLECTION__PROJECT_COLLECTION_PROJECT_UUID_FKEY = Internal.createForeignKey(JooqProjectCollection.PROJECT_COLLECTION, DSL.name("project_collection_project_uuid_fkey"), new TableField[] { JooqProjectCollection.PROJECT_COLLECTION.PROJECT_UUID }, Keys.PROJECT_PKEY, new TableField[] { JooqProject.PROJECT.UUID }, true);
    public static final ForeignKey<JooqProjectLibraryRecord, JooqLibraryRecord> PROJECT_LIBRARY__PROJECT_LIBRARY_LIBRARY_UUID_FKEY = Internal.createForeignKey(JooqProjectLibrary.PROJECT_LIBRARY, DSL.name("project_library_library_uuid_fkey"), new TableField[] { JooqProjectLibrary.PROJECT_LIBRARY.LIBRARY_UUID }, Keys.LIBRARY_PKEY, new TableField[] { JooqLibrary.LIBRARY.UUID }, true);
    public static final ForeignKey<JooqProjectLibraryRecord, JooqProjectRecord> PROJECT_LIBRARY__PROJECT_LIBRARY_PROJECT_UUID_FKEY = Internal.createForeignKey(JooqProjectLibrary.PROJECT_LIBRARY, DSL.name("project_library_project_uuid_fkey"), new TableField[] { JooqProjectLibrary.PROJECT_LIBRARY.PROJECT_UUID }, Keys.PROJECT_PKEY, new TableField[] { JooqProject.PROJECT.UUID }, true);
    public static final ForeignKey<JooqReactionRecord, JooqUserRecord> REACTION__REACTION_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqReaction.REACTION, DSL.name("reaction_creator_uuid_fkey"), new TableField[] { JooqReaction.REACTION.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqReactionRecord, JooqUserRecord> REACTION__REACTION_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqReaction.REACTION, DSL.name("reaction_editor_uuid_fkey"), new TableField[] { JooqReaction.REACTION.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqRoleRecord, JooqUserRecord> ROLE__ROLE_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqRole.ROLE, DSL.name("role_creator_uuid_fkey"), new TableField[] { JooqRole.ROLE.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqRoleRecord, JooqUserRecord> ROLE__ROLE_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqRole.ROLE, DSL.name("role_editor_uuid_fkey"), new TableField[] { JooqRole.ROLE.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqRoleGroupRecord, JooqGroupRecord> ROLE_GROUP__ROLE_GROUP_GROUP_UUID_FKEY = Internal.createForeignKey(JooqRoleGroup.ROLE_GROUP, DSL.name("role_group_group_uuid_fkey"), new TableField[] { JooqRoleGroup.ROLE_GROUP.GROUP_UUID }, Keys.GROUP_PKEY, new TableField[] { JooqGroup.GROUP.UUID }, true);
    public static final ForeignKey<JooqRoleGroupRecord, JooqRoleRecord> ROLE_GROUP__ROLE_GROUP_ROLE_UUID_FKEY = Internal.createForeignKey(JooqRoleGroup.ROLE_GROUP, DSL.name("role_group_role_uuid_fkey"), new TableField[] { JooqRoleGroup.ROLE_GROUP.ROLE_UUID }, Keys.ROLE_PKEY, new TableField[] { JooqRole.ROLE.UUID }, true);
    public static final ForeignKey<JooqRolePermissionRecord, JooqRoleRecord> ROLE_PERMISSION__ROLE_PERMISSION_ROLE_UUID_FKEY = Internal.createForeignKey(JooqRolePermission.ROLE_PERMISSION, DSL.name("role_permission_role_uuid_fkey"), new TableField[] { JooqRolePermission.ROLE_PERMISSION.ROLE_UUID }, Keys.ROLE_PKEY, new TableField[] { JooqRole.ROLE.UUID }, true);
    public static final ForeignKey<JooqTagRecord, JooqUserRecord> TAG__TAG_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqTag.TAG, DSL.name("tag_creator_uuid_fkey"), new TableField[] { JooqTag.TAG.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqTagRecord, JooqUserRecord> TAG__TAG_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqTag.TAG, DSL.name("tag_editor_uuid_fkey"), new TableField[] { JooqTag.TAG.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqTagAssetRecord, JooqTagRecord> TAG_ASSET__TAG_ASSET_TAG_UUID_FKEY = Internal.createForeignKey(JooqTagAsset.TAG_ASSET, DSL.name("tag_asset_tag_uuid_fkey"), new TableField[] { JooqTagAsset.TAG_ASSET.TAG_UUID }, Keys.TAG_PKEY, new TableField[] { JooqTag.TAG.UUID }, true);
    public static final ForeignKey<JooqTagClusterRecord, JooqClusterRecord> TAG_CLUSTER__TAG_CLUSTER_CLUSTER_UUID_FKEY = Internal.createForeignKey(JooqTagCluster.TAG_CLUSTER, DSL.name("tag_cluster_cluster_uuid_fkey"), new TableField[] { JooqTagCluster.TAG_CLUSTER.CLUSTER_UUID }, Keys.CLUSTER_PKEY, new TableField[] { JooqCluster.CLUSTER.UUID }, true);
    public static final ForeignKey<JooqTagClusterRecord, JooqTagRecord> TAG_CLUSTER__TAG_CLUSTER_TAG_UUID_FKEY = Internal.createForeignKey(JooqTagCluster.TAG_CLUSTER, DSL.name("tag_cluster_tag_uuid_fkey"), new TableField[] { JooqTagCluster.TAG_CLUSTER.TAG_UUID }, Keys.TAG_PKEY, new TableField[] { JooqTag.TAG.UUID }, true);
    public static final ForeignKey<JooqTagCollectionRecord, JooqCollectionRecord> TAG_COLLECTION__TAG_COLLECTION_COLLECTION_UUID_FKEY = Internal.createForeignKey(JooqTagCollection.TAG_COLLECTION, DSL.name("tag_collection_collection_uuid_fkey"), new TableField[] { JooqTagCollection.TAG_COLLECTION.COLLECTION_UUID }, Keys.COLLECTION_PKEY, new TableField[] { JooqCollection.COLLECTION.UUID }, true);
    public static final ForeignKey<JooqTagCollectionRecord, JooqTagRecord> TAG_COLLECTION__TAG_COLLECTION_TAG_UUID_FKEY = Internal.createForeignKey(JooqTagCollection.TAG_COLLECTION, DSL.name("tag_collection_tag_uuid_fkey"), new TableField[] { JooqTagCollection.TAG_COLLECTION.TAG_UUID }, Keys.TAG_PKEY, new TableField[] { JooqTag.TAG.UUID }, true);
    public static final ForeignKey<JooqTagUserMetaRecord, JooqTagRecord> TAG_USER_META__TAG_USER_META_TAG_UUID_FKEY = Internal.createForeignKey(JooqTagUserMeta.TAG_USER_META, DSL.name("tag_user_meta_tag_uuid_fkey"), new TableField[] { JooqTagUserMeta.TAG_USER_META.TAG_UUID }, Keys.TAG_PKEY, new TableField[] { JooqTag.TAG.UUID }, true);
    public static final ForeignKey<JooqTagUserMetaRecord, JooqUserRecord> TAG_USER_META__TAG_USER_META_USER_UUID_FKEY = Internal.createForeignKey(JooqTagUserMeta.TAG_USER_META, DSL.name("tag_user_meta_user_uuid_fkey"), new TableField[] { JooqTagUserMeta.TAG_USER_META.USER_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqTaskRecord, JooqUserRecord> TASK__TASK_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqTask.TASK, DSL.name("task_creator_uuid_fkey"), new TableField[] { JooqTask.TASK.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqTaskRecord, JooqUserRecord> TASK__TASK_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqTask.TASK, DSL.name("task_editor_uuid_fkey"), new TableField[] { JooqTask.TASK.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqTokenRecord, JooqUserRecord> TOKEN__TOKEN_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqToken.TOKEN, DSL.name("token_creator_uuid_fkey"), new TableField[] { JooqToken.TOKEN.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqTokenPermissionRecord, JooqTokenRecord> TOKEN_PERMISSION__TOKEN_PERMISSION_TOKEN_UUID_FKEY = Internal.createForeignKey(JooqTokenPermission.TOKEN_PERMISSION, DSL.name("token_permission_token_uuid_fkey"), new TableField[] { JooqTokenPermission.TOKEN_PERMISSION.TOKEN_UUID }, Keys.TOKEN_PKEY, new TableField[] { JooqToken.TOKEN.UUID }, true);
    public static final ForeignKey<JooqUserRecord, JooqUserRecord> USER__USER_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqUser.USER, DSL.name("user_creator_uuid_fkey"), new TableField[] { JooqUser.USER.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqUserRecord, JooqUserRecord> USER__USER_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqUser.USER, DSL.name("user_editor_uuid_fkey"), new TableField[] { JooqUser.USER.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqUserGroupRecord, JooqGroupRecord> USER_GROUP__USER_GROUP_GROUP_UUID_FKEY = Internal.createForeignKey(JooqUserGroup.USER_GROUP, DSL.name("user_group_group_uuid_fkey"), new TableField[] { JooqUserGroup.USER_GROUP.GROUP_UUID }, Keys.GROUP_PKEY, new TableField[] { JooqGroup.GROUP.UUID }, true);
    public static final ForeignKey<JooqUserGroupRecord, JooqUserRecord> USER_GROUP__USER_GROUP_USER_UUID_FKEY = Internal.createForeignKey(JooqUserGroup.USER_GROUP, DSL.name("user_group_user_uuid_fkey"), new TableField[] { JooqUserGroup.USER_GROUP.USER_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqUserPermissionRecord, JooqUserRecord> USER_PERMISSION__USER_PERMISSION_USER_UUID_FKEY = Internal.createForeignKey(JooqUserPermission.USER_PERMISSION, DSL.name("user_permission_user_uuid_fkey"), new TableField[] { JooqUserPermission.USER_PERMISSION.USER_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqWebhookRecord, JooqUserRecord> WEBHOOK__WEBHOOK_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqWebhook.WEBHOOK, DSL.name("webhook_creator_uuid_fkey"), new TableField[] { JooqWebhook.WEBHOOK.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqWebhookRecord, JooqUserRecord> WEBHOOK__WEBHOOK_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqWebhook.WEBHOOK, DSL.name("webhook_editor_uuid_fkey"), new TableField[] { JooqWebhook.WEBHOOK.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
}
