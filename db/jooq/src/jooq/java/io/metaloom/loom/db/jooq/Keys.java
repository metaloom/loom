/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq;


import io.metaloom.loom.db.jooq.tables.JooqAsset;
import io.metaloom.loom.db.jooq.tables.JooqAssetBinarie;
import io.metaloom.loom.db.jooq.tables.JooqAssetTimeline;
import io.metaloom.loom.db.jooq.tables.JooqAssetTimelineTag;
import io.metaloom.loom.db.jooq.tables.JooqAssetUserMeta;
import io.metaloom.loom.db.jooq.tables.JooqContent;
import io.metaloom.loom.db.jooq.tables.JooqContentUserMeta;
import io.metaloom.loom.db.jooq.tables.JooqExtension;
import io.metaloom.loom.db.jooq.tables.JooqFace;
import io.metaloom.loom.db.jooq.tables.JooqField;
import io.metaloom.loom.db.jooq.tables.JooqFieldAsset;
import io.metaloom.loom.db.jooq.tables.JooqFieldContent;
import io.metaloom.loom.db.jooq.tables.JooqFieldReference;
import io.metaloom.loom.db.jooq.tables.JooqFlywaySchemaHistory;
import io.metaloom.loom.db.jooq.tables.JooqGroup;
import io.metaloom.loom.db.jooq.tables.JooqLanguage;
import io.metaloom.loom.db.jooq.tables.JooqModel;
import io.metaloom.loom.db.jooq.tables.JooqModelVersion;
import io.metaloom.loom.db.jooq.tables.JooqNamespace;
import io.metaloom.loom.db.jooq.tables.JooqRole;
import io.metaloom.loom.db.jooq.tables.JooqRoleGroup;
import io.metaloom.loom.db.jooq.tables.JooqRolePermission;
import io.metaloom.loom.db.jooq.tables.JooqTag;
import io.metaloom.loom.db.jooq.tables.JooqTagAsset;
import io.metaloom.loom.db.jooq.tables.JooqTagContent;
import io.metaloom.loom.db.jooq.tables.JooqTagNamespace;
import io.metaloom.loom.db.jooq.tables.JooqTagUserMeta;
import io.metaloom.loom.db.jooq.tables.JooqTokenPermission;
import io.metaloom.loom.db.jooq.tables.JooqUser;
import io.metaloom.loom.db.jooq.tables.JooqUserGroup;
import io.metaloom.loom.db.jooq.tables.JooqUserPermission;
import io.metaloom.loom.db.jooq.tables.JooqUserToken;
import io.metaloom.loom.db.jooq.tables.JooqWebhook;
import io.metaloom.loom.db.jooq.tables.records.JooqAssetBinarieRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAssetRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAssetTimelineRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAssetTimelineTagRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqAssetUserMetaRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqContentRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqContentUserMetaRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqExtensionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqFaceRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqFieldAssetRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqFieldContentRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqFieldRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqFieldReferenceRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqFlywaySchemaHistoryRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqGroupRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqLanguageRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqModelRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqModelVersionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqNamespaceRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqRoleGroupRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqRolePermissionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqRoleRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTagAssetRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTagContentRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTagNamespaceRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTagRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTagUserMetaRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqTokenPermissionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqUserGroupRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqUserPermissionRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqUserRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqUserTokenRecord;
import io.metaloom.loom.db.jooq.tables.records.JooqWebhookRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<JooqAssetRecord> ASSET_PKEY = Internal.createUniqueKey(JooqAsset.ASSET, DSL.name("asset_pkey"), new TableField[] { JooqAsset.ASSET.UUID }, true);
    public static final UniqueKey<JooqAssetBinarieRecord> ASSET_BINARIE_PKEY = Internal.createUniqueKey(JooqAssetBinarie.ASSET_BINARIE, DSL.name("asset_binarie_pkey"), new TableField[] { JooqAssetBinarie.ASSET_BINARIE.UUID }, true);
    public static final UniqueKey<JooqAssetTimelineRecord> ASSET_TIMELINE_PKEY = Internal.createUniqueKey(JooqAssetTimeline.ASSET_TIMELINE, DSL.name("asset_timeline_pkey"), new TableField[] { JooqAssetTimeline.ASSET_TIMELINE.UUID }, true);
    public static final UniqueKey<JooqAssetUserMetaRecord> ASSET_USER_META_PKEY = Internal.createUniqueKey(JooqAssetUserMeta.ASSET_USER_META, DSL.name("asset_user_meta_pkey"), new TableField[] { JooqAssetUserMeta.ASSET_USER_META.ASSET_UUID, JooqAssetUserMeta.ASSET_USER_META.USER_UUID }, true);
    public static final UniqueKey<JooqContentRecord> CONTENT_PKEY = Internal.createUniqueKey(JooqContent.CONTENT, DSL.name("content_pkey"), new TableField[] { JooqContent.CONTENT.UUID }, true);
    public static final UniqueKey<JooqContentUserMetaRecord> CONTENT_USER_META_PKEY = Internal.createUniqueKey(JooqContentUserMeta.CONTENT_USER_META, DSL.name("content_user_meta_pkey"), new TableField[] { JooqContentUserMeta.CONTENT_USER_META.CONTENT_UUID, JooqContentUserMeta.CONTENT_USER_META.USER_UUID }, true);
    public static final UniqueKey<JooqExtensionRecord> EXTENSION_PKEY = Internal.createUniqueKey(JooqExtension.EXTENSION, DSL.name("extension_pkey"), new TableField[] { JooqExtension.EXTENSION.UUID }, true);
    public static final UniqueKey<JooqFaceRecord> FACE_PKEY = Internal.createUniqueKey(JooqFace.FACE, DSL.name("face_pkey"), new TableField[] { JooqFace.FACE.UUID }, true);
    public static final UniqueKey<JooqFaceRecord> FACE_SOURCE_KEY = Internal.createUniqueKey(JooqFace.FACE, DSL.name("face_source_key"), new TableField[] { JooqFace.FACE.SOURCE }, true);
    public static final UniqueKey<JooqFieldRecord> FIELD_PKEY = Internal.createUniqueKey(JooqField.FIELD, DSL.name("field_pkey"), new TableField[] { JooqField.FIELD.UUID }, true);
    public static final UniqueKey<JooqFieldAssetRecord> FIELD_ASSET_PKEY = Internal.createUniqueKey(JooqFieldAsset.FIELD_ASSET, DSL.name("field_asset_pkey"), new TableField[] { JooqFieldAsset.FIELD_ASSET.FIELD_UUID, JooqFieldAsset.FIELD_ASSET.ASSET_UUID }, true);
    public static final UniqueKey<JooqFieldContentRecord> FIELD_CONTENT_WEBROOT_PATH_INFO_KEY = Internal.createUniqueKey(JooqFieldContent.FIELD_CONTENT, DSL.name("field_content_webroot_path_info_key"), new TableField[] { JooqFieldContent.FIELD_CONTENT.WEBROOT_PATH_INFO }, true);
    public static final UniqueKey<JooqFieldReferenceRecord> FIELD_REFERENCE_PKEY = Internal.createUniqueKey(JooqFieldReference.FIELD_REFERENCE, DSL.name("field_reference_pkey"), new TableField[] { JooqFieldReference.FIELD_REFERENCE.SOURCE_UUID, JooqFieldReference.FIELD_REFERENCE.TARGET_UUID }, true);
    public static final UniqueKey<JooqFlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(JooqFlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { JooqFlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<JooqGroupRecord> GROUP_NAME_KEY = Internal.createUniqueKey(JooqGroup.GROUP, DSL.name("group_name_key"), new TableField[] { JooqGroup.GROUP.NAME }, true);
    public static final UniqueKey<JooqGroupRecord> GROUP_PKEY = Internal.createUniqueKey(JooqGroup.GROUP, DSL.name("group_pkey"), new TableField[] { JooqGroup.GROUP.UUID }, true);
    public static final UniqueKey<JooqLanguageRecord> LANGUAGE_PKEY = Internal.createUniqueKey(JooqLanguage.LANGUAGE, DSL.name("language_pkey"), new TableField[] { JooqLanguage.LANGUAGE.UUID }, true);
    public static final UniqueKey<JooqLanguageRecord> LANGUAGE_TAG_KEY = Internal.createUniqueKey(JooqLanguage.LANGUAGE, DSL.name("language_tag_key"), new TableField[] { JooqLanguage.LANGUAGE.TAG }, true);
    public static final UniqueKey<JooqModelRecord> MODEL_NAME_KEY = Internal.createUniqueKey(JooqModel.MODEL, DSL.name("model_name_key"), new TableField[] { JooqModel.MODEL.NAME }, true);
    public static final UniqueKey<JooqModelRecord> MODEL_PKEY = Internal.createUniqueKey(JooqModel.MODEL, DSL.name("model_pkey"), new TableField[] { JooqModel.MODEL.UUID }, true);
    public static final UniqueKey<JooqModelVersionRecord> MODEL_VERSION_PKEY = Internal.createUniqueKey(JooqModelVersion.MODEL_VERSION, DSL.name("model_version_pkey"), new TableField[] { JooqModelVersion.MODEL_VERSION.UUID }, true);
    public static final UniqueKey<JooqNamespaceRecord> NAMESPACE_NAME_KEY = Internal.createUniqueKey(JooqNamespace.NAMESPACE, DSL.name("namespace_name_key"), new TableField[] { JooqNamespace.NAMESPACE.NAME }, true);
    public static final UniqueKey<JooqNamespaceRecord> NAMESPACE_PKEY = Internal.createUniqueKey(JooqNamespace.NAMESPACE, DSL.name("namespace_pkey"), new TableField[] { JooqNamespace.NAMESPACE.UUID }, true);
    public static final UniqueKey<JooqRoleRecord> ROLE_NAME_KEY = Internal.createUniqueKey(JooqRole.ROLE, DSL.name("role_name_key"), new TableField[] { JooqRole.ROLE.NAME }, true);
    public static final UniqueKey<JooqRoleRecord> ROLE_PKEY = Internal.createUniqueKey(JooqRole.ROLE, DSL.name("role_pkey"), new TableField[] { JooqRole.ROLE.UUID }, true);
    public static final UniqueKey<JooqRoleGroupRecord> ROLE_GROUP_PKEY = Internal.createUniqueKey(JooqRoleGroup.ROLE_GROUP, DSL.name("role_group_pkey"), new TableField[] { JooqRoleGroup.ROLE_GROUP.GROUP_UUID, JooqRoleGroup.ROLE_GROUP.ROLE_UUID }, true);
    public static final UniqueKey<JooqRolePermissionRecord> ROLE_PERMISSION_PKEY = Internal.createUniqueKey(JooqRolePermission.ROLE_PERMISSION, DSL.name("role_permission_pkey"), new TableField[] { JooqRolePermission.ROLE_PERMISSION.ROLE_UUID, JooqRolePermission.ROLE_PERMISSION.RESOURCE }, true);
    public static final UniqueKey<JooqTagRecord> TAG_PKEY = Internal.createUniqueKey(JooqTag.TAG, DSL.name("tag_pkey"), new TableField[] { JooqTag.TAG.UUID }, true);
    public static final UniqueKey<JooqTagAssetRecord> TAG_ASSET_PKEY = Internal.createUniqueKey(JooqTagAsset.TAG_ASSET, DSL.name("tag_asset_pkey"), new TableField[] { JooqTagAsset.TAG_ASSET.TAG_UUID, JooqTagAsset.TAG_ASSET.ASSET_UUID }, true);
    public static final UniqueKey<JooqTagContentRecord> TAG_CONTENT_PKEY = Internal.createUniqueKey(JooqTagContent.TAG_CONTENT, DSL.name("tag_content_pkey"), new TableField[] { JooqTagContent.TAG_CONTENT.TAG_UUID, JooqTagContent.TAG_CONTENT.CONTENT_UUID }, true);
    public static final UniqueKey<JooqTagNamespaceRecord> TAG_NAMESPACE_PKEY = Internal.createUniqueKey(JooqTagNamespace.TAG_NAMESPACE, DSL.name("tag_namespace_pkey"), new TableField[] { JooqTagNamespace.TAG_NAMESPACE.TAG_UUID, JooqTagNamespace.TAG_NAMESPACE.NAMESPACE_UUID }, true);
    public static final UniqueKey<JooqTokenPermissionRecord> TOKEN_PERMISSION_PKEY = Internal.createUniqueKey(JooqTokenPermission.TOKEN_PERMISSION, DSL.name("token_permission_pkey"), new TableField[] { JooqTokenPermission.TOKEN_PERMISSION.TOKEN_UUID, JooqTokenPermission.TOKEN_PERMISSION.RESOURCE }, true);
    public static final UniqueKey<JooqUserRecord> USER_PKEY = Internal.createUniqueKey(JooqUser.USER, DSL.name("user_pkey"), new TableField[] { JooqUser.USER.UUID }, true);
    public static final UniqueKey<JooqUserRecord> USER_USERNAME_KEY = Internal.createUniqueKey(JooqUser.USER, DSL.name("user_username_key"), new TableField[] { JooqUser.USER.USERNAME }, true);
    public static final UniqueKey<JooqUserGroupRecord> USER_GROUP_PKEY = Internal.createUniqueKey(JooqUserGroup.USER_GROUP, DSL.name("user_group_pkey"), new TableField[] { JooqUserGroup.USER_GROUP.USER_UUID, JooqUserGroup.USER_GROUP.GROUP_UUID }, true);
    public static final UniqueKey<JooqUserPermissionRecord> USER_PERMISSION_PKEY = Internal.createUniqueKey(JooqUserPermission.USER_PERMISSION, DSL.name("user_permission_pkey"), new TableField[] { JooqUserPermission.USER_PERMISSION.USER_UUID, JooqUserPermission.USER_PERMISSION.RESOURCE }, true);
    public static final UniqueKey<JooqUserTokenRecord> USER_TOKEN_PKEY = Internal.createUniqueKey(JooqUserToken.USER_TOKEN, DSL.name("user_token_pkey"), new TableField[] { JooqUserToken.USER_TOKEN.UUID }, true);
    public static final UniqueKey<JooqWebhookRecord> WEBHOOK_PKEY = Internal.createUniqueKey(JooqWebhook.WEBHOOK, DSL.name("webhook_pkey"), new TableField[] { JooqWebhook.WEBHOOK.UUID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<JooqAssetRecord, JooqAssetBinarieRecord> ASSET__ASSET_ASSET_BINARIES_UUID_FKEY = Internal.createForeignKey(JooqAsset.ASSET, DSL.name("asset_asset_binaries_uuid_fkey"), new TableField[] { JooqAsset.ASSET.ASSET_BINARIES_UUID }, Keys.ASSET_BINARIE_PKEY, new TableField[] { JooqAssetBinarie.ASSET_BINARIE.UUID }, true);
    public static final ForeignKey<JooqAssetRecord, JooqUserRecord> ASSET__ASSET_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqAsset.ASSET, DSL.name("asset_creator_uuid_fkey"), new TableField[] { JooqAsset.ASSET.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqAssetRecord, JooqUserRecord> ASSET__ASSET_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqAsset.ASSET, DSL.name("asset_editor_uuid_fkey"), new TableField[] { JooqAsset.ASSET.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqAssetRecord, JooqNamespaceRecord> ASSET__ASSET_NAMESPACE_UUID_FKEY = Internal.createForeignKey(JooqAsset.ASSET, DSL.name("asset_namespace_uuid_fkey"), new TableField[] { JooqAsset.ASSET.NAMESPACE_UUID }, Keys.NAMESPACE_PKEY, new TableField[] { JooqNamespace.NAMESPACE.UUID }, true);
    public static final ForeignKey<JooqAssetTimelineRecord, JooqAssetRecord> ASSET_TIMELINE__ASSET_TIMELINE_ASSET_UUID_FKEY = Internal.createForeignKey(JooqAssetTimeline.ASSET_TIMELINE, DSL.name("asset_timeline_asset_uuid_fkey"), new TableField[] { JooqAssetTimeline.ASSET_TIMELINE.ASSET_UUID }, Keys.ASSET_PKEY, new TableField[] { JooqAsset.ASSET.UUID }, true);
    public static final ForeignKey<JooqAssetTimelineTagRecord, JooqAssetTimelineRecord> ASSET_TIMELINE_TAG__ASSET_TIMELINE_TAG_ASSETTIMELINE_UUID_FKEY = Internal.createForeignKey(JooqAssetTimelineTag.ASSET_TIMELINE_TAG, DSL.name("asset_timeline_tag_assettimeline_uuid_fkey"), new TableField[] { JooqAssetTimelineTag.ASSET_TIMELINE_TAG.ASSETTIMELINE_UUID }, Keys.ASSET_TIMELINE_PKEY, new TableField[] { JooqAssetTimeline.ASSET_TIMELINE.UUID }, true);
    public static final ForeignKey<JooqAssetTimelineTagRecord, JooqTagRecord> ASSET_TIMELINE_TAG__ASSET_TIMELINE_TAG_TAG_UUID_FKEY = Internal.createForeignKey(JooqAssetTimelineTag.ASSET_TIMELINE_TAG, DSL.name("asset_timeline_tag_tag_uuid_fkey"), new TableField[] { JooqAssetTimelineTag.ASSET_TIMELINE_TAG.TAG_UUID }, Keys.TAG_PKEY, new TableField[] { JooqTag.TAG.UUID }, true);
    public static final ForeignKey<JooqAssetUserMetaRecord, JooqAssetRecord> ASSET_USER_META__ASSET_USER_META_ASSET_UUID_FKEY = Internal.createForeignKey(JooqAssetUserMeta.ASSET_USER_META, DSL.name("asset_user_meta_asset_uuid_fkey"), new TableField[] { JooqAssetUserMeta.ASSET_USER_META.ASSET_UUID }, Keys.ASSET_PKEY, new TableField[] { JooqAsset.ASSET.UUID }, true);
    public static final ForeignKey<JooqAssetUserMetaRecord, JooqUserRecord> ASSET_USER_META__ASSET_USER_META_USER_UUID_FKEY = Internal.createForeignKey(JooqAssetUserMeta.ASSET_USER_META, DSL.name("asset_user_meta_user_uuid_fkey"), new TableField[] { JooqAssetUserMeta.ASSET_USER_META.USER_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqContentRecord, JooqUserRecord> CONTENT__CONTENT_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqContent.CONTENT, DSL.name("content_creator_uuid_fkey"), new TableField[] { JooqContent.CONTENT.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqContentRecord, JooqModelRecord> CONTENT__CONTENT_MODEL_UUID_FKEY = Internal.createForeignKey(JooqContent.CONTENT, DSL.name("content_model_uuid_fkey"), new TableField[] { JooqContent.CONTENT.MODEL_UUID }, Keys.MODEL_PKEY, new TableField[] { JooqModel.MODEL.UUID }, true);
    public static final ForeignKey<JooqContentRecord, JooqNamespaceRecord> CONTENT__CONTENT_NAMESPACE_UUID_FKEY = Internal.createForeignKey(JooqContent.CONTENT, DSL.name("content_namespace_uuid_fkey"), new TableField[] { JooqContent.CONTENT.NAMESPACE_UUID }, Keys.NAMESPACE_PKEY, new TableField[] { JooqNamespace.NAMESPACE.UUID }, true);
    public static final ForeignKey<JooqContentRecord, JooqContentRecord> CONTENT__CONTENT_PARENT_FKEY = Internal.createForeignKey(JooqContent.CONTENT, DSL.name("content_parent_fkey"), new TableField[] { JooqContent.CONTENT.PARENT }, Keys.CONTENT_PKEY, new TableField[] { JooqContent.CONTENT.UUID }, true);
    public static final ForeignKey<JooqContentUserMetaRecord, JooqTagRecord> CONTENT_USER_META__CONTENT_USER_META_CONTENT_UUID_FKEY = Internal.createForeignKey(JooqContentUserMeta.CONTENT_USER_META, DSL.name("content_user_meta_content_uuid_fkey"), new TableField[] { JooqContentUserMeta.CONTENT_USER_META.CONTENT_UUID }, Keys.TAG_PKEY, new TableField[] { JooqTag.TAG.UUID }, true);
    public static final ForeignKey<JooqContentUserMetaRecord, JooqUserRecord> CONTENT_USER_META__CONTENT_USER_META_USER_UUID_FKEY = Internal.createForeignKey(JooqContentUserMeta.CONTENT_USER_META, DSL.name("content_user_meta_user_uuid_fkey"), new TableField[] { JooqContentUserMeta.CONTENT_USER_META.USER_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqExtensionRecord, JooqUserRecord> EXTENSION__EXTENSION_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqExtension.EXTENSION, DSL.name("extension_creator_uuid_fkey"), new TableField[] { JooqExtension.EXTENSION.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqExtensionRecord, JooqUserRecord> EXTENSION__EXTENSION_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqExtension.EXTENSION, DSL.name("extension_editor_uuid_fkey"), new TableField[] { JooqExtension.EXTENSION.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqFieldRecord, JooqNamespaceRecord> FIELD__FIELD_CONTENT_UUID_FKEY = Internal.createForeignKey(JooqField.FIELD, DSL.name("field_content_uuid_fkey"), new TableField[] { JooqField.FIELD.CONTENT_UUID }, Keys.NAMESPACE_PKEY, new TableField[] { JooqNamespace.NAMESPACE.UUID }, true);
    public static final ForeignKey<JooqFieldRecord, JooqUserRecord> FIELD__FIELD_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqField.FIELD, DSL.name("field_editor_uuid_fkey"), new TableField[] { JooqField.FIELD.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqFieldRecord, JooqLanguageRecord> FIELD__FIELD_LANGUAGE_UUID_FKEY = Internal.createForeignKey(JooqField.FIELD, DSL.name("field_language_uuid_fkey"), new TableField[] { JooqField.FIELD.LANGUAGE_UUID }, Keys.LANGUAGE_PKEY, new TableField[] { JooqLanguage.LANGUAGE.UUID }, true);
    public static final ForeignKey<JooqFieldRecord, JooqModelVersionRecord> FIELD__FIELD_MODELVERSION_UUID_FKEY = Internal.createForeignKey(JooqField.FIELD, DSL.name("field_modelversion_uuid_fkey"), new TableField[] { JooqField.FIELD.MODELVERSION_UUID }, Keys.MODEL_VERSION_PKEY, new TableField[] { JooqModelVersion.MODEL_VERSION.UUID }, true);
    public static final ForeignKey<JooqFieldAssetRecord, JooqAssetRecord> FIELD_ASSET__FIELD_ASSET_ASSET_UUID_FKEY = Internal.createForeignKey(JooqFieldAsset.FIELD_ASSET, DSL.name("field_asset_asset_uuid_fkey"), new TableField[] { JooqFieldAsset.FIELD_ASSET.ASSET_UUID }, Keys.ASSET_PKEY, new TableField[] { JooqAsset.ASSET.UUID }, true);
    public static final ForeignKey<JooqFieldAssetRecord, JooqFieldRecord> FIELD_ASSET__FIELD_ASSET_FIELD_UUID_FKEY = Internal.createForeignKey(JooqFieldAsset.FIELD_ASSET, DSL.name("field_asset_field_uuid_fkey"), new TableField[] { JooqFieldAsset.FIELD_ASSET.FIELD_UUID }, Keys.FIELD_PKEY, new TableField[] { JooqField.FIELD.UUID }, true);
    public static final ForeignKey<JooqFieldContentRecord, JooqContentRecord> FIELD_CONTENT__FIELD_CONTENT_CONTENT_UUID_FKEY = Internal.createForeignKey(JooqFieldContent.FIELD_CONTENT, DSL.name("field_content_content_uuid_fkey"), new TableField[] { JooqFieldContent.FIELD_CONTENT.CONTENT_UUID }, Keys.CONTENT_PKEY, new TableField[] { JooqContent.CONTENT.UUID }, true);
    public static final ForeignKey<JooqFieldContentRecord, JooqFieldRecord> FIELD_CONTENT__FIELD_CONTENT_FIELDS_UUID_FKEY = Internal.createForeignKey(JooqFieldContent.FIELD_CONTENT, DSL.name("field_content_fields_uuid_fkey"), new TableField[] { JooqFieldContent.FIELD_CONTENT.FIELDS_UUID }, Keys.FIELD_PKEY, new TableField[] { JooqField.FIELD.UUID }, true);
    public static final ForeignKey<JooqFieldReferenceRecord, JooqFieldRecord> FIELD_REFERENCE__FIELD_REFERENCE_SOURCE_UUID_FKEY = Internal.createForeignKey(JooqFieldReference.FIELD_REFERENCE, DSL.name("field_reference_source_uuid_fkey"), new TableField[] { JooqFieldReference.FIELD_REFERENCE.SOURCE_UUID }, Keys.FIELD_PKEY, new TableField[] { JooqField.FIELD.UUID }, true);
    public static final ForeignKey<JooqFieldReferenceRecord, JooqFieldRecord> FIELD_REFERENCE__FIELD_REFERENCE_TARGET_UUID_FKEY = Internal.createForeignKey(JooqFieldReference.FIELD_REFERENCE, DSL.name("field_reference_target_uuid_fkey"), new TableField[] { JooqFieldReference.FIELD_REFERENCE.TARGET_UUID }, Keys.FIELD_PKEY, new TableField[] { JooqField.FIELD.UUID }, true);
    public static final ForeignKey<JooqGroupRecord, JooqUserRecord> GROUP__GROUP_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqGroup.GROUP, DSL.name("group_creator_uuid_fkey"), new TableField[] { JooqGroup.GROUP.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqGroupRecord, JooqUserRecord> GROUP__GROUP_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqGroup.GROUP, DSL.name("group_editor_uuid_fkey"), new TableField[] { JooqGroup.GROUP.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqModelRecord, JooqUserRecord> MODEL__MODEL_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqModel.MODEL, DSL.name("model_creator_uuid_fkey"), new TableField[] { JooqModel.MODEL.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqModelRecord, JooqUserRecord> MODEL__MODEL_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqModel.MODEL, DSL.name("model_editor_uuid_fkey"), new TableField[] { JooqModel.MODEL.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqModelRecord, JooqModelVersionRecord> MODEL__MODEL_LATEST_VERSION_UUID_FKEY = Internal.createForeignKey(JooqModel.MODEL, DSL.name("model_latest_version_uuid_fkey"), new TableField[] { JooqModel.MODEL.LATEST_VERSION_UUID }, Keys.MODEL_VERSION_PKEY, new TableField[] { JooqModelVersion.MODEL_VERSION.UUID }, true);
    public static final ForeignKey<JooqModelVersionRecord, JooqModelRecord> MODEL_VERSION__MODEL_VERSION_MODEL_UUID_FKEY = Internal.createForeignKey(JooqModelVersion.MODEL_VERSION, DSL.name("model_version_model_uuid_fkey"), new TableField[] { JooqModelVersion.MODEL_VERSION.MODEL_UUID }, Keys.MODEL_PKEY, new TableField[] { JooqModel.MODEL.UUID }, true);
    public static final ForeignKey<JooqModelVersionRecord, JooqModelVersionRecord> MODEL_VERSION__MODEL_VERSION_NEXT_VERSION_UUID_FKEY = Internal.createForeignKey(JooqModelVersion.MODEL_VERSION, DSL.name("model_version_next_version_uuid_fkey"), new TableField[] { JooqModelVersion.MODEL_VERSION.NEXT_VERSION_UUID }, Keys.MODEL_VERSION_PKEY, new TableField[] { JooqModelVersion.MODEL_VERSION.UUID }, true);
    public static final ForeignKey<JooqModelVersionRecord, JooqModelVersionRecord> MODEL_VERSION__MODEL_VERSION_PREV_VERSION_UUID_FKEY = Internal.createForeignKey(JooqModelVersion.MODEL_VERSION, DSL.name("model_version_prev_version_uuid_fkey"), new TableField[] { JooqModelVersion.MODEL_VERSION.PREV_VERSION_UUID }, Keys.MODEL_VERSION_PKEY, new TableField[] { JooqModelVersion.MODEL_VERSION.UUID }, true);
    public static final ForeignKey<JooqNamespaceRecord, JooqUserRecord> NAMESPACE__NAMESPACE_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqNamespace.NAMESPACE, DSL.name("namespace_creator_uuid_fkey"), new TableField[] { JooqNamespace.NAMESPACE.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqNamespaceRecord, JooqUserRecord> NAMESPACE__NAMESPACE_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqNamespace.NAMESPACE, DSL.name("namespace_editor_uuid_fkey"), new TableField[] { JooqNamespace.NAMESPACE.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqNamespaceRecord, JooqContentRecord> NAMESPACE__NAMESPACE_ROOT_CONTENT_UUID_FKEY = Internal.createForeignKey(JooqNamespace.NAMESPACE, DSL.name("namespace_root_content_uuid_fkey"), new TableField[] { JooqNamespace.NAMESPACE.ROOT_CONTENT_UUID }, Keys.CONTENT_PKEY, new TableField[] { JooqContent.CONTENT.UUID }, true);
    public static final ForeignKey<JooqRoleRecord, JooqUserRecord> ROLE__ROLE_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqRole.ROLE, DSL.name("role_creator_uuid_fkey"), new TableField[] { JooqRole.ROLE.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqRoleRecord, JooqUserRecord> ROLE__ROLE_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqRole.ROLE, DSL.name("role_editor_uuid_fkey"), new TableField[] { JooqRole.ROLE.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqRoleGroupRecord, JooqGroupRecord> ROLE_GROUP__ROLE_GROUP_GROUP_UUID_FKEY = Internal.createForeignKey(JooqRoleGroup.ROLE_GROUP, DSL.name("role_group_group_uuid_fkey"), new TableField[] { JooqRoleGroup.ROLE_GROUP.GROUP_UUID }, Keys.GROUP_PKEY, new TableField[] { JooqGroup.GROUP.UUID }, true);
    public static final ForeignKey<JooqRoleGroupRecord, JooqRoleRecord> ROLE_GROUP__ROLE_GROUP_ROLE_UUID_FKEY = Internal.createForeignKey(JooqRoleGroup.ROLE_GROUP, DSL.name("role_group_role_uuid_fkey"), new TableField[] { JooqRoleGroup.ROLE_GROUP.ROLE_UUID }, Keys.ROLE_PKEY, new TableField[] { JooqRole.ROLE.UUID }, true);
    public static final ForeignKey<JooqRolePermissionRecord, JooqRoleRecord> ROLE_PERMISSION__ROLE_PERMISSION_ROLE_UUID_FKEY = Internal.createForeignKey(JooqRolePermission.ROLE_PERMISSION, DSL.name("role_permission_role_uuid_fkey"), new TableField[] { JooqRolePermission.ROLE_PERMISSION.ROLE_UUID }, Keys.ROLE_PKEY, new TableField[] { JooqRole.ROLE.UUID }, true);
    public static final ForeignKey<JooqTagRecord, JooqUserRecord> TAG__TAG_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqTag.TAG, DSL.name("tag_creator_uuid_fkey"), new TableField[] { JooqTag.TAG.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqTagRecord, JooqUserRecord> TAG__TAG_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqTag.TAG, DSL.name("tag_editor_uuid_fkey"), new TableField[] { JooqTag.TAG.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqTagRecord, JooqNamespaceRecord> TAG__TAG_NAMESPACE_UUID_FKEY = Internal.createForeignKey(JooqTag.TAG, DSL.name("tag_namespace_uuid_fkey"), new TableField[] { JooqTag.TAG.NAMESPACE_UUID }, Keys.NAMESPACE_PKEY, new TableField[] { JooqNamespace.NAMESPACE.UUID }, true);
    public static final ForeignKey<JooqTagContentRecord, JooqContentRecord> TAG_CONTENT__TAG_CONTENT_CONTENT_UUID_FKEY = Internal.createForeignKey(JooqTagContent.TAG_CONTENT, DSL.name("tag_content_content_uuid_fkey"), new TableField[] { JooqTagContent.TAG_CONTENT.CONTENT_UUID }, Keys.CONTENT_PKEY, new TableField[] { JooqContent.CONTENT.UUID }, true);
    public static final ForeignKey<JooqTagContentRecord, JooqTagRecord> TAG_CONTENT__TAG_CONTENT_TAG_UUID_FKEY = Internal.createForeignKey(JooqTagContent.TAG_CONTENT, DSL.name("tag_content_tag_uuid_fkey"), new TableField[] { JooqTagContent.TAG_CONTENT.TAG_UUID }, Keys.TAG_PKEY, new TableField[] { JooqTag.TAG.UUID }, true);
    public static final ForeignKey<JooqTagNamespaceRecord, JooqNamespaceRecord> TAG_NAMESPACE__TAG_NAMESPACE_NAMESPACE_UUID_FKEY = Internal.createForeignKey(JooqTagNamespace.TAG_NAMESPACE, DSL.name("tag_namespace_namespace_uuid_fkey"), new TableField[] { JooqTagNamespace.TAG_NAMESPACE.NAMESPACE_UUID }, Keys.NAMESPACE_PKEY, new TableField[] { JooqNamespace.NAMESPACE.UUID }, true);
    public static final ForeignKey<JooqTagNamespaceRecord, JooqTagRecord> TAG_NAMESPACE__TAG_NAMESPACE_TAG_UUID_FKEY = Internal.createForeignKey(JooqTagNamespace.TAG_NAMESPACE, DSL.name("tag_namespace_tag_uuid_fkey"), new TableField[] { JooqTagNamespace.TAG_NAMESPACE.TAG_UUID }, Keys.TAG_PKEY, new TableField[] { JooqTag.TAG.UUID }, true);
    public static final ForeignKey<JooqTagUserMetaRecord, JooqTagRecord> TAG_USER_META__TAG_USER_META_TAG_UUID_FKEY = Internal.createForeignKey(JooqTagUserMeta.TAG_USER_META, DSL.name("tag_user_meta_tag_uuid_fkey"), new TableField[] { JooqTagUserMeta.TAG_USER_META.TAG_UUID }, Keys.TAG_PKEY, new TableField[] { JooqTag.TAG.UUID }, true);
    public static final ForeignKey<JooqTagUserMetaRecord, JooqUserRecord> TAG_USER_META__TAG_USER_META_USER_UUID_FKEY = Internal.createForeignKey(JooqTagUserMeta.TAG_USER_META, DSL.name("tag_user_meta_user_uuid_fkey"), new TableField[] { JooqTagUserMeta.TAG_USER_META.USER_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqUserRecord, JooqUserRecord> USER__USER_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqUser.USER, DSL.name("user_creator_uuid_fkey"), new TableField[] { JooqUser.USER.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqUserRecord, JooqUserRecord> USER__USER_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqUser.USER, DSL.name("user_editor_uuid_fkey"), new TableField[] { JooqUser.USER.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqUserGroupRecord, JooqGroupRecord> USER_GROUP__USER_GROUP_GROUP_UUID_FKEY = Internal.createForeignKey(JooqUserGroup.USER_GROUP, DSL.name("user_group_group_uuid_fkey"), new TableField[] { JooqUserGroup.USER_GROUP.GROUP_UUID }, Keys.GROUP_PKEY, new TableField[] { JooqGroup.GROUP.UUID }, true);
    public static final ForeignKey<JooqUserGroupRecord, JooqUserRecord> USER_GROUP__USER_GROUP_USER_UUID_FKEY = Internal.createForeignKey(JooqUserGroup.USER_GROUP, DSL.name("user_group_user_uuid_fkey"), new TableField[] { JooqUserGroup.USER_GROUP.USER_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqUserTokenRecord, JooqUserRecord> USER_TOKEN__USER_TOKEN_USER_UUID_FKEY = Internal.createForeignKey(JooqUserToken.USER_TOKEN, DSL.name("user_token_user_uuid_fkey"), new TableField[] { JooqUserToken.USER_TOKEN.USER_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqWebhookRecord, JooqUserRecord> WEBHOOK__WEBHOOK_CREATOR_UUID_FKEY = Internal.createForeignKey(JooqWebhook.WEBHOOK, DSL.name("webhook_creator_uuid_fkey"), new TableField[] { JooqWebhook.WEBHOOK.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
    public static final ForeignKey<JooqWebhookRecord, JooqUserRecord> WEBHOOK__WEBHOOK_EDITOR_UUID_FKEY = Internal.createForeignKey(JooqWebhook.WEBHOOK, DSL.name("webhook_editor_uuid_fkey"), new TableField[] { JooqWebhook.WEBHOOK.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { JooqUser.USER.UUID }, true);
}
