/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq;


import io.metaloom.loom.db.jooq.tables.AssetBinaries;
import io.metaloom.loom.db.jooq.tables.AssetTimeline;
import io.metaloom.loom.db.jooq.tables.AssetTimelineTag;
import io.metaloom.loom.db.jooq.tables.AssetUserMeta;
import io.metaloom.loom.db.jooq.tables.Assets;
import io.metaloom.loom.db.jooq.tables.ContentUserMeta;
import io.metaloom.loom.db.jooq.tables.Contents;
import io.metaloom.loom.db.jooq.tables.Extensions;
import io.metaloom.loom.db.jooq.tables.FieldAsset;
import io.metaloom.loom.db.jooq.tables.FieldContent;
import io.metaloom.loom.db.jooq.tables.FieldReference;
import io.metaloom.loom.db.jooq.tables.Fields;
import io.metaloom.loom.db.jooq.tables.Groups;
import io.metaloom.loom.db.jooq.tables.Languages;
import io.metaloom.loom.db.jooq.tables.Loom;
import io.metaloom.loom.db.jooq.tables.ModelVersion;
import io.metaloom.loom.db.jooq.tables.Models;
import io.metaloom.loom.db.jooq.tables.Namespaces;
import io.metaloom.loom.db.jooq.tables.RoleGroup;
import io.metaloom.loom.db.jooq.tables.RolePermission;
import io.metaloom.loom.db.jooq.tables.Roles;
import io.metaloom.loom.db.jooq.tables.SchemaVersion;
import io.metaloom.loom.db.jooq.tables.TagAsset;
import io.metaloom.loom.db.jooq.tables.TagContent;
import io.metaloom.loom.db.jooq.tables.TagNamespace;
import io.metaloom.loom.db.jooq.tables.TagUserMeta;
import io.metaloom.loom.db.jooq.tables.Tags;
import io.metaloom.loom.db.jooq.tables.UserToken;
import io.metaloom.loom.db.jooq.tables.Users;
import io.metaloom.loom.db.jooq.tables.UsersGroups;
import io.metaloom.loom.db.jooq.tables.Webhooks;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * This table stores the immutable asset information
     */
    public final AssetBinaries ASSET_BINARIES = AssetBinaries.ASSET_BINARIES;

    /**
     * This table contains asset timeline entries
     */
    public final AssetTimeline ASSET_TIMELINE = AssetTimeline.ASSET_TIMELINE;

    /**
     * The table <code>public.asset_timeline_tag</code>.
     */
    public final AssetTimelineTag ASSET_TIMELINE_TAG = AssetTimelineTag.ASSET_TIMELINE_TAG;

    /**
     * The table <code>public.asset_user_meta</code>.
     */
    public final AssetUserMeta ASSET_USER_META = AssetUserMeta.ASSET_USER_META;

    /**
     * The table <code>public.assets</code>.
     */
    public final Assets ASSETS = Assets.ASSETS;

    /**
     * The table <code>public.content_user_meta</code>.
     */
    public final ContentUserMeta CONTENT_USER_META = ContentUserMeta.CONTENT_USER_META;

    /**
     * The table <code>public.contents</code>.
     */
    public final Contents CONTENTS = Contents.CONTENTS;

    /**
     * Table which lists the registered extensions
     */
    public final Extensions EXTENSIONS = Extensions.EXTENSIONS;

    /**
     * Crosstable which tracks the used assets in a fields record
     */
    public final FieldAsset FIELD_ASSET = FieldAsset.FIELD_ASSET;

    /**
     * Crosstable that tracks all fields for a content
     */
    public final FieldContent FIELD_CONTENT = FieldContent.FIELD_CONTENT;

    /**
     * This table is mainly used to lookup foreign references to contents
     */
    public final FieldReference FIELD_REFERENCE = FieldReference.FIELD_REFERENCE;

    /**
     * Table which stores the actual fields content as JSON
     */
    public final Fields FIELDS = Fields.FIELDS;

    /**
     * The table <code>public.groups</code>.
     */
    public final Groups GROUPS = Groups.GROUPS;

    /**
     * Table which stores the languages for loom
     */
    public final Languages LANGUAGES = Languages.LANGUAGES;

    /**
     * The table <code>public.loom</code>.
     */
    public final Loom LOOM = Loom.LOOM;

    /**
     * The table <code>public.model_version</code>.
     */
    public final ModelVersion MODEL_VERSION = ModelVersion.MODEL_VERSION;

    /**
     * The table <code>public.models</code>.
     */
    public final Models MODELS = Models.MODELS;

    /**
     * The table <code>public.namespaces</code>.
     */
    public final Namespaces NAMESPACES = Namespaces.NAMESPACES;

    /**
     * The table <code>public.role_group</code>.
     */
    public final RoleGroup ROLE_GROUP = RoleGroup.ROLE_GROUP;

    /**
     * The table <code>public.role_permission</code>.
     */
    public final RolePermission ROLE_PERMISSION = RolePermission.ROLE_PERMISSION;

    /**
     * The table <code>public.roles</code>.
     */
    public final Roles ROLES = Roles.ROLES;

    /**
     * The table <code>public.schema_version</code>.
     */
    public final SchemaVersion SCHEMA_VERSION = SchemaVersion.SCHEMA_VERSION;

    /**
     * The table <code>public.tag_asset</code>.
     */
    public final TagAsset TAG_ASSET = TagAsset.TAG_ASSET;

    /**
     * The table <code>public.tag_content</code>.
     */
    public final TagContent TAG_CONTENT = TagContent.TAG_CONTENT;

    /**
     * Table used to taggings on namespaces
     */
    public final TagNamespace TAG_NAMESPACE = TagNamespace.TAG_NAMESPACE;

    /**
     * The table <code>public.tag_user_meta</code>.
     */
    public final TagUserMeta TAG_USER_META = TagUserMeta.TAG_USER_META;

    /**
     * The table <code>public.tags</code>.
     */
    public final Tags TAGS = Tags.TAGS;

    /**
     * The table <code>public.user_token</code>.
     */
    public final UserToken USER_TOKEN = UserToken.USER_TOKEN;

    /**
     * The table <code>public.users</code>.
     */
    public final Users USERS = Users.USERS;

    /**
     * The table <code>public.users_groups</code>.
     */
    public final UsersGroups USERS_GROUPS = UsersGroups.USERS_GROUPS;

    /**
     * Table which stores the registered webhooks
     */
    public final Webhooks WEBHOOKS = Webhooks.WEBHOOKS;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            AssetBinaries.ASSET_BINARIES,
            AssetTimeline.ASSET_TIMELINE,
            AssetTimelineTag.ASSET_TIMELINE_TAG,
            AssetUserMeta.ASSET_USER_META,
            Assets.ASSETS,
            ContentUserMeta.CONTENT_USER_META,
            Contents.CONTENTS,
            Extensions.EXTENSIONS,
            FieldAsset.FIELD_ASSET,
            FieldContent.FIELD_CONTENT,
            FieldReference.FIELD_REFERENCE,
            Fields.FIELDS,
            Groups.GROUPS,
            Languages.LANGUAGES,
            Loom.LOOM,
            ModelVersion.MODEL_VERSION,
            Models.MODELS,
            Namespaces.NAMESPACES,
            RoleGroup.ROLE_GROUP,
            RolePermission.ROLE_PERMISSION,
            Roles.ROLES,
            SchemaVersion.SCHEMA_VERSION,
            TagAsset.TAG_ASSET,
            TagContent.TAG_CONTENT,
            TagNamespace.TAG_NAMESPACE,
            TagUserMeta.TAG_USER_META,
            Tags.TAGS,
            UserToken.USER_TOKEN,
            Users.USERS,
            UsersGroups.USERS_GROUPS,
            Webhooks.WEBHOOKS
        );
    }
}
