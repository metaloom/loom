/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq;


import io.metaloom.loom.db.jooq.tables.AssetBinaries;
import io.metaloom.loom.db.jooq.tables.AssetTimeline;
import io.metaloom.loom.db.jooq.tables.AssetTimelineTag;
import io.metaloom.loom.db.jooq.tables.AssetUserMeta;
import io.metaloom.loom.db.jooq.tables.Assets;
import io.metaloom.loom.db.jooq.tables.ContentUserMeta;
import io.metaloom.loom.db.jooq.tables.Contents;
import io.metaloom.loom.db.jooq.tables.Extensions;
import io.metaloom.loom.db.jooq.tables.FieldAsset;
import io.metaloom.loom.db.jooq.tables.FieldContent;
import io.metaloom.loom.db.jooq.tables.FieldReference;
import io.metaloom.loom.db.jooq.tables.Fields;
import io.metaloom.loom.db.jooq.tables.Groups;
import io.metaloom.loom.db.jooq.tables.Languages;
import io.metaloom.loom.db.jooq.tables.Loom;
import io.metaloom.loom.db.jooq.tables.ModelVersion;
import io.metaloom.loom.db.jooq.tables.Models;
import io.metaloom.loom.db.jooq.tables.Namespaces;
import io.metaloom.loom.db.jooq.tables.RoleGroup;
import io.metaloom.loom.db.jooq.tables.RolePermission;
import io.metaloom.loom.db.jooq.tables.Roles;
import io.metaloom.loom.db.jooq.tables.SchemaVersion;
import io.metaloom.loom.db.jooq.tables.TagAsset;
import io.metaloom.loom.db.jooq.tables.TagContent;
import io.metaloom.loom.db.jooq.tables.TagNamespace;
import io.metaloom.loom.db.jooq.tables.TagUserMeta;
import io.metaloom.loom.db.jooq.tables.Tags;
import io.metaloom.loom.db.jooq.tables.UserToken;
import io.metaloom.loom.db.jooq.tables.Users;
import io.metaloom.loom.db.jooq.tables.UsersGroups;
import io.metaloom.loom.db.jooq.tables.Webhooks;


/**
 * Convenience access to all tables in public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * This table stores the immutable asset information
     */
    public static final AssetBinaries ASSET_BINARIES = AssetBinaries.ASSET_BINARIES;

    /**
     * This table contains asset timeline entries
     */
    public static final AssetTimeline ASSET_TIMELINE = AssetTimeline.ASSET_TIMELINE;

    /**
     * The table <code>public.asset_timeline_tag</code>.
     */
    public static final AssetTimelineTag ASSET_TIMELINE_TAG = AssetTimelineTag.ASSET_TIMELINE_TAG;

    /**
     * The table <code>public.asset_user_meta</code>.
     */
    public static final AssetUserMeta ASSET_USER_META = AssetUserMeta.ASSET_USER_META;

    /**
     * The table <code>public.assets</code>.
     */
    public static final Assets ASSETS = Assets.ASSETS;

    /**
     * The table <code>public.content_user_meta</code>.
     */
    public static final ContentUserMeta CONTENT_USER_META = ContentUserMeta.CONTENT_USER_META;

    /**
     * The table <code>public.contents</code>.
     */
    public static final Contents CONTENTS = Contents.CONTENTS;

    /**
     * Table which lists the registered extensions
     */
    public static final Extensions EXTENSIONS = Extensions.EXTENSIONS;

    /**
     * Crosstable which tracks the used assets in a fields record
     */
    public static final FieldAsset FIELD_ASSET = FieldAsset.FIELD_ASSET;

    /**
     * Crosstable that tracks all fields for a content
     */
    public static final FieldContent FIELD_CONTENT = FieldContent.FIELD_CONTENT;

    /**
     * This table is mainly used to lookup foreign references to contents
     */
    public static final FieldReference FIELD_REFERENCE = FieldReference.FIELD_REFERENCE;

    /**
     * Table which stores the actual fields content as JSON
     */
    public static final Fields FIELDS = Fields.FIELDS;

    /**
     * The table <code>public.groups</code>.
     */
    public static final Groups GROUPS = Groups.GROUPS;

    /**
     * Table which stores the languages for loom
     */
    public static final Languages LANGUAGES = Languages.LANGUAGES;

    /**
     * The table <code>public.loom</code>.
     */
    public static final Loom LOOM = Loom.LOOM;

    /**
     * The table <code>public.model_version</code>.
     */
    public static final ModelVersion MODEL_VERSION = ModelVersion.MODEL_VERSION;

    /**
     * The table <code>public.models</code>.
     */
    public static final Models MODELS = Models.MODELS;

    /**
     * The table <code>public.namespaces</code>.
     */
    public static final Namespaces NAMESPACES = Namespaces.NAMESPACES;

    /**
     * The table <code>public.role_group</code>.
     */
    public static final RoleGroup ROLE_GROUP = RoleGroup.ROLE_GROUP;

    /**
     * The table <code>public.role_permission</code>.
     */
    public static final RolePermission ROLE_PERMISSION = RolePermission.ROLE_PERMISSION;

    /**
     * The table <code>public.roles</code>.
     */
    public static final Roles ROLES = Roles.ROLES;

    /**
     * The table <code>public.schema_version</code>.
     */
    public static final SchemaVersion SCHEMA_VERSION = SchemaVersion.SCHEMA_VERSION;

    /**
     * The table <code>public.tag_asset</code>.
     */
    public static final TagAsset TAG_ASSET = TagAsset.TAG_ASSET;

    /**
     * The table <code>public.tag_content</code>.
     */
    public static final TagContent TAG_CONTENT = TagContent.TAG_CONTENT;

    /**
     * Table used to taggings on namespaces
     */
    public static final TagNamespace TAG_NAMESPACE = TagNamespace.TAG_NAMESPACE;

    /**
     * The table <code>public.tag_user_meta</code>.
     */
    public static final TagUserMeta TAG_USER_META = TagUserMeta.TAG_USER_META;

    /**
     * The table <code>public.tags</code>.
     */
    public static final Tags TAGS = Tags.TAGS;

    /**
     * The table <code>public.user_token</code>.
     */
    public static final UserToken USER_TOKEN = UserToken.USER_TOKEN;

    /**
     * The table <code>public.users</code>.
     */
    public static final Users USERS = Users.USERS;

    /**
     * The table <code>public.users_groups</code>.
     */
    public static final UsersGroups USERS_GROUPS = UsersGroups.USERS_GROUPS;

    /**
     * Table which stores the registered webhooks
     */
    public static final Webhooks WEBHOOKS = Webhooks.WEBHOOKS;
}
