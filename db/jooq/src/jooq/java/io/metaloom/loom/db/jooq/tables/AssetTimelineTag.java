/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables;


import io.metaloom.loom.db.jooq.Keys;
import io.metaloom.loom.db.jooq.Public;
import io.metaloom.loom.db.jooq.tables.records.AssetTimelineTagRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssetTimelineTag extends TableImpl<AssetTimelineTagRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.asset_timeline_tag</code>
     */
    public static final AssetTimelineTag ASSET_TIMELINE_TAG = new AssetTimelineTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssetTimelineTagRecord> getRecordType() {
        return AssetTimelineTagRecord.class;
    }

    /**
     * The column <code>public.asset_timeline_tag.assettimeline_uuid</code>.
     */
    public final TableField<AssetTimelineTagRecord, UUID> ASSETTIMELINE_UUID = createField(DSL.name("assettimeline_uuid"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.asset_timeline_tag.tag_uuid</code>.
     */
    public final TableField<AssetTimelineTagRecord, UUID> TAG_UUID = createField(DSL.name("tag_uuid"), SQLDataType.UUID.nullable(false), this, "");

    private AssetTimelineTag(Name alias, Table<AssetTimelineTagRecord> aliased) {
        this(alias, aliased, null);
    }

    private AssetTimelineTag(Name alias, Table<AssetTimelineTagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.asset_timeline_tag</code> table reference
     */
    public AssetTimelineTag(String alias) {
        this(DSL.name(alias), ASSET_TIMELINE_TAG);
    }

    /**
     * Create an aliased <code>public.asset_timeline_tag</code> table reference
     */
    public AssetTimelineTag(Name alias) {
        this(alias, ASSET_TIMELINE_TAG);
    }

    /**
     * Create a <code>public.asset_timeline_tag</code> table reference
     */
    public AssetTimelineTag() {
        this(DSL.name("asset_timeline_tag"), null);
    }

    public <O extends Record> AssetTimelineTag(Table<O> child, ForeignKey<O, AssetTimelineTagRecord> key) {
        super(child, key, ASSET_TIMELINE_TAG);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<ForeignKey<AssetTimelineTagRecord, ?>> getReferences() {
        return Arrays.asList(Keys.ASSET_TIMELINE_TAG__ASSET_TIMELINE_TAG_ASSETTIMELINE_UUID_FKEY, Keys.ASSET_TIMELINE_TAG__ASSET_TIMELINE_TAG_TAG_UUID_FKEY);
    }

    private transient AssetTimeline _assetTimeline;
    private transient Tags _tags;

    public AssetTimeline assetTimeline() {
        if (_assetTimeline == null)
            _assetTimeline = new AssetTimeline(this, Keys.ASSET_TIMELINE_TAG__ASSET_TIMELINE_TAG_ASSETTIMELINE_UUID_FKEY);

        return _assetTimeline;
    }

    public Tags tags() {
        if (_tags == null)
            _tags = new Tags(this, Keys.ASSET_TIMELINE_TAG__ASSET_TIMELINE_TAG_TAG_UUID_FKEY);

        return _tags;
    }

    @Override
    public AssetTimelineTag as(String alias) {
        return new AssetTimelineTag(DSL.name(alias), this);
    }

    @Override
    public AssetTimelineTag as(Name alias) {
        return new AssetTimelineTag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AssetTimelineTag rename(String name) {
        return new AssetTimelineTag(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AssetTimelineTag rename(Name name) {
        return new AssetTimelineTag(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
