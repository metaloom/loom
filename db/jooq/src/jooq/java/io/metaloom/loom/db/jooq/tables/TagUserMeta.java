/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables;


import io.metaloom.loom.db.jooq.Keys;
import io.metaloom.loom.db.jooq.Public;
import io.metaloom.loom.db.jooq.tables.records.TagUserMetaRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TagUserMeta extends TableImpl<TagUserMetaRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.tag_user_meta</code>
     */
    public static final TagUserMeta TAG_USER_META = new TagUserMeta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TagUserMetaRecord> getRecordType() {
        return TagUserMetaRecord.class;
    }

    /**
     * The column <code>public.tag_user_meta.tag_uuid</code>.
     */
    public final TableField<TagUserMetaRecord, UUID> TAG_UUID = createField(DSL.name("tag_uuid"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.tag_user_meta.user_uuid</code>.
     */
    public final TableField<TagUserMetaRecord, UUID> USER_UUID = createField(DSL.name("user_uuid"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.tag_user_meta.rating</code>. Rating of the tag by
     * the user
     */
    public final TableField<TagUserMetaRecord, Integer> RATING = createField(DSL.name("rating"), SQLDataType.INTEGER.nullable(false), this, "Rating of the tag by the user");

    /**
     * The column <code>public.tag_user_meta.meta</code>. Custom meta properties
     */
    public final TableField<TagUserMetaRecord, JSONB> META = createField(DSL.name("meta"), SQLDataType.JSONB, this, "Custom meta properties");

    private TagUserMeta(Name alias, Table<TagUserMetaRecord> aliased) {
        this(alias, aliased, null);
    }

    private TagUserMeta(Name alias, Table<TagUserMetaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.tag_user_meta</code> table reference
     */
    public TagUserMeta(String alias) {
        this(DSL.name(alias), TAG_USER_META);
    }

    /**
     * Create an aliased <code>public.tag_user_meta</code> table reference
     */
    public TagUserMeta(Name alias) {
        this(alias, TAG_USER_META);
    }

    /**
     * Create a <code>public.tag_user_meta</code> table reference
     */
    public TagUserMeta() {
        this(DSL.name("tag_user_meta"), null);
    }

    public <O extends Record> TagUserMeta(Table<O> child, ForeignKey<O, TagUserMetaRecord> key) {
        super(child, key, TAG_USER_META);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<ForeignKey<TagUserMetaRecord, ?>> getReferences() {
        return Arrays.asList(Keys.TAG_USER_META__TAG_USER_META_TAG_UUID_FKEY, Keys.TAG_USER_META__TAG_USER_META_USER_UUID_FKEY);
    }

    private transient Tag _tag;
    private transient User _user;

    public Tag tag() {
        if (_tag == null)
            _tag = new Tag(this, Keys.TAG_USER_META__TAG_USER_META_TAG_UUID_FKEY);

        return _tag;
    }

    public User user() {
        if (_user == null)
            _user = new User(this, Keys.TAG_USER_META__TAG_USER_META_USER_UUID_FKEY);

        return _user;
    }

    @Override
    public TagUserMeta as(String alias) {
        return new TagUserMeta(DSL.name(alias), this);
    }

    @Override
    public TagUserMeta as(Name alias) {
        return new TagUserMeta(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TagUserMeta rename(String name) {
        return new TagUserMeta(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TagUserMeta rename(Name name) {
        return new TagUserMeta(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, UUID, Integer, JSONB> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
