/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.enums.LoomExtensionType;
import io.metaloom.loom.db.jooq.tables.Extension;
import io.metaloom.loom.db.jooq.tables.records.ExtensionRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;


/**
 * Table which lists the registered extensions
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExtensionDao extends DAOImpl<ExtensionRecord, io.metaloom.loom.db.jooq.tables.pojos.Extension, UUID> {

    /**
     * Create a new ExtensionDao without any configuration
     */
    public ExtensionDao() {
        super(Extension.EXTENSION, io.metaloom.loom.db.jooq.tables.pojos.Extension.class);
    }

    /**
     * Create a new ExtensionDao with an attached configuration
     */
    public ExtensionDao(Configuration configuration) {
        super(Extension.EXTENSION, io.metaloom.loom.db.jooq.tables.pojos.Extension.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.Extension object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchRangeOfUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Extension.EXTENSION.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchByUuid(UUID... values) {
        return fetch(Extension.EXTENSION.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.Extension fetchOneByUuid(UUID value) {
        return fetchOne(Extension.EXTENSION.UUID, value);
    }

    /**
     * Fetch records that have <code>url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchRangeOfUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(Extension.EXTENSION.URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchByUrl(String... values) {
        return fetch(Extension.EXTENSION.URL, values);
    }

    /**
     * Fetch records that have <code>kind BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchRangeOfKind(LoomExtensionType lowerInclusive, LoomExtensionType upperInclusive) {
        return fetchRange(Extension.EXTENSION.KIND, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>kind IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchByKind(LoomExtensionType... values) {
        return fetch(Extension.EXTENSION.KIND, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Extension.EXTENSION.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchByStatus(String... values) {
        return fetch(Extension.EXTENSION.STATUS, values);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchRangeOfMeta(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(Extension.EXTENSION.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchByMeta(JSONB... values) {
        return fetch(Extension.EXTENSION.META, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchRangeOfCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Extension.EXTENSION.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchByCreated(LocalDateTime... values) {
        return fetch(Extension.EXTENSION.CREATED, values);
    }

    /**
     * Fetch records that have <code>creator_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchRangeOfCreatorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Extension.EXTENSION.CREATOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchByCreatorUuid(UUID... values) {
        return fetch(Extension.EXTENSION.CREATOR_UUID, values);
    }

    /**
     * Fetch records that have <code>edited BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchRangeOfEdited(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Extension.EXTENSION.EDITED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edited IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchByEdited(LocalDateTime... values) {
        return fetch(Extension.EXTENSION.EDITED, values);
    }

    /**
     * Fetch records that have <code>editor_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchRangeOfEditorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Extension.EXTENSION.EDITOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>editor_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Extension> fetchByEditorUuid(UUID... values) {
        return fetch(Extension.EXTENSION.EDITOR_UUID, values);
    }
}
