/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqAnnotationTag;
import io.metaloom.loom.db.jooq.tables.records.JooqAnnotationTagRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqAnnotationTagDao extends DAOImpl<JooqAnnotationTagRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqAnnotationTag, Record2<UUID, UUID>> {

    /**
     * Create a new JooqAnnotationTagDao without any configuration
     */
    public JooqAnnotationTagDao() {
        super(JooqAnnotationTag.ANNOTATION_TAG, io.metaloom.loom.db.jooq.tables.pojos.JooqAnnotationTag.class);
    }

    /**
     * Create a new JooqAnnotationTagDao with an attached configuration
     */
    public JooqAnnotationTagDao(Configuration configuration) {
        super(JooqAnnotationTag.ANNOTATION_TAG, io.metaloom.loom.db.jooq.tables.pojos.JooqAnnotationTag.class, configuration);
    }

    @Override
    public Record2<UUID, UUID> getId(io.metaloom.loom.db.jooq.tables.pojos.JooqAnnotationTag object) {
        return compositeKeyRecord(object.getAnnotationUuid(), object.getTagUuid());
    }

    /**
     * Fetch records that have <code>annotation_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAnnotationTag> fetchRangeOfJooqAnnotationUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqAnnotationTag.ANNOTATION_TAG.ANNOTATION_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>annotation_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAnnotationTag> fetchByJooqAnnotationUuid(UUID... values) {
        return fetch(JooqAnnotationTag.ANNOTATION_TAG.ANNOTATION_UUID, values);
    }

    /**
     * Fetch records that have <code>tag_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAnnotationTag> fetchRangeOfJooqTagUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqAnnotationTag.ANNOTATION_TAG.TAG_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tag_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAnnotationTag> fetchByJooqTagUuid(UUID... values) {
        return fetch(JooqAnnotationTag.ANNOTATION_TAG.TAG_UUID, values);
    }
}
