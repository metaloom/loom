/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqAsset;
import io.metaloom.loom.db.jooq.tables.records.JooqAssetRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * Assets keep track of media that has been found by the scanner. Multiple
 * assets may share the same binary thus the properties will be decoupled from
 * binary.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqAssetDao extends DAOImpl<JooqAssetRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqAsset, UUID> {

    /**
     * Create a new JooqAssetDao without any configuration
     */
    public JooqAssetDao() {
        super(JooqAsset.ASSET, io.metaloom.loom.db.jooq.tables.pojos.JooqAsset.class);
    }

    /**
     * Create a new JooqAssetDao with an attached configuration
     */
    public JooqAssetDao(Configuration configuration) {
        super(JooqAsset.ASSET, io.metaloom.loom.db.jooq.tables.pojos.JooqAsset.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.JooqAsset object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqAsset.ASSET.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqUuid(UUID... values) {
        return fetch(JooqAsset.ASSET.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.JooqAsset fetchOneByJooqUuid(UUID value) {
        return fetchOne(JooqAsset.ASSET.UUID, value);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchOptionalByJooqUuid(UUID value) {
        return fetchOptional(JooqAsset.ASSET.UUID, value);
    }

    /**
     * Fetch records that have <code>binary_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqBinaryUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqAsset.ASSET.BINARY_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>binary_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqBinaryUuid(UUID... values) {
        return fetch(JooqAsset.ASSET.BINARY_UUID, values);
    }

    /**
     * Fetch records that have <code>path BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqPath(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqAsset.ASSET.PATH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>path IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqPath(String... values) {
        return fetch(JooqAsset.ASSET.PATH, values);
    }

    /**
     * Fetch records that have <code>filekey_inode BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqFilekeyInode(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JooqAsset.ASSET.FILEKEY_INODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>filekey_inode IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqFilekeyInode(Integer... values) {
        return fetch(JooqAsset.ASSET.FILEKEY_INODE, values);
    }

    /**
     * Fetch records that have <code>filekey_stdev BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqFilekeyStdev(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JooqAsset.ASSET.FILEKEY_STDEV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>filekey_stdev IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqFilekeyStdev(Integer... values) {
        return fetch(JooqAsset.ASSET.FILEKEY_STDEV, values);
    }

    /**
     * Fetch records that have <code>filekey_edate_nano BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqFilekeyEdateNano(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JooqAsset.ASSET.FILEKEY_EDATE_NANO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>filekey_edate_nano IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqFilekeyEdateNano(Integer... values) {
        return fetch(JooqAsset.ASSET.FILEKEY_EDATE_NANO, values);
    }

    /**
     * Fetch records that have <code>filekey_edate BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqFilekeyEdate(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JooqAsset.ASSET.FILEKEY_EDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>filekey_edate IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqFilekeyEdate(Integer... values) {
        return fetch(JooqAsset.ASSET.FILEKEY_EDATE, values);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqMeta(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqAsset.ASSET.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqMeta(String... values) {
        return fetch(JooqAsset.ASSET.META, values);
    }

    /**
     * Fetch records that have <code>mime_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqMimeType(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqAsset.ASSET.MIME_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mime_type IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqMimeType(String... values) {
        return fetch(JooqAsset.ASSET.MIME_TYPE, values);
    }

    /**
     * Fetch records that have <code>license BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqLicense(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqAsset.ASSET.LICENSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>license IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqLicense(String... values) {
        return fetch(JooqAsset.ASSET.LICENSE, values);
    }

    /**
     * Fetch records that have <code>state BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqState(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqAsset.ASSET.STATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqState(String... values) {
        return fetch(JooqAsset.ASSET.STATE, values);
    }

    /**
     * Fetch records that have <code>locked_by_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqLockedByUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqAsset.ASSET.LOCKED_BY_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>locked_by_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqLockedByUuid(UUID... values) {
        return fetch(JooqAsset.ASSET.LOCKED_BY_UUID, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqAsset.ASSET.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqCreated(LocalDateTime... values) {
        return fetch(JooqAsset.ASSET.CREATED, values);
    }

    /**
     * Fetch records that have <code>creator_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqCreatorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqAsset.ASSET.CREATOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqCreatorUuid(UUID... values) {
        return fetch(JooqAsset.ASSET.CREATOR_UUID, values);
    }

    /**
     * Fetch records that have <code>edited BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqEdited(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqAsset.ASSET.EDITED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edited IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqEdited(LocalDateTime... values) {
        return fetch(JooqAsset.ASSET.EDITED, values);
    }

    /**
     * Fetch records that have <code>editor_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchRangeOfJooqEditorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqAsset.ASSET.EDITOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>editor_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAsset> fetchByJooqEditorUuid(UUID... values) {
        return fetch(JooqAsset.ASSET.EDITOR_UUID, values);
    }
}
