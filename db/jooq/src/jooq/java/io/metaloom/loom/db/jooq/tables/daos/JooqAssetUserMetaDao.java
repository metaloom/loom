/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqAssetUserMeta;
import io.metaloom.loom.db.jooq.tables.records.JooqAssetUserMetaRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * Stores user specific metadata that can be added to assets
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqAssetUserMetaDao extends DAOImpl<JooqAssetUserMetaRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqAssetUserMeta, Record2<UUID, UUID>> {

    /**
     * Create a new JooqAssetUserMetaDao without any configuration
     */
    public JooqAssetUserMetaDao() {
        super(JooqAssetUserMeta.ASSET_USER_META, io.metaloom.loom.db.jooq.tables.pojos.JooqAssetUserMeta.class);
    }

    /**
     * Create a new JooqAssetUserMetaDao with an attached configuration
     */
    public JooqAssetUserMetaDao(Configuration configuration) {
        super(JooqAssetUserMeta.ASSET_USER_META, io.metaloom.loom.db.jooq.tables.pojos.JooqAssetUserMeta.class, configuration);
    }

    @Override
    public Record2<UUID, UUID> getId(io.metaloom.loom.db.jooq.tables.pojos.JooqAssetUserMeta object) {
        return compositeKeyRecord(object.getAssetUuid(), object.getUserUuid());
    }

    /**
     * Fetch records that have <code>asset_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAssetUserMeta> fetchRangeOfJooqAssetUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqAssetUserMeta.ASSET_USER_META.ASSET_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>asset_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAssetUserMeta> fetchByJooqAssetUuid(UUID... values) {
        return fetch(JooqAssetUserMeta.ASSET_USER_META.ASSET_UUID, values);
    }

    /**
     * Fetch records that have <code>user_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAssetUserMeta> fetchRangeOfJooqUserUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqAssetUserMeta.ASSET_USER_META.USER_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAssetUserMeta> fetchByJooqUserUuid(UUID... values) {
        return fetch(JooqAssetUserMeta.ASSET_USER_META.USER_UUID, values);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAssetUserMeta> fetchRangeOfJooqMeta(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqAssetUserMeta.ASSET_USER_META.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqAssetUserMeta> fetchByJooqMeta(String... values) {
        return fetch(JooqAssetUserMeta.ASSET_USER_META.META, values);
    }
}
