/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqCommentAnnotaion;
import io.metaloom.loom.db.jooq.tables.records.JooqCommentAnnotaionRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqCommentAnnotaionDao extends DAOImpl<JooqCommentAnnotaionRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqCommentAnnotaion, Record2<UUID, UUID>> {

    /**
     * Create a new JooqCommentAnnotaionDao without any configuration
     */
    public JooqCommentAnnotaionDao() {
        super(JooqCommentAnnotaion.COMMENT_ANNOTAION, io.metaloom.loom.db.jooq.tables.pojos.JooqCommentAnnotaion.class);
    }

    /**
     * Create a new JooqCommentAnnotaionDao with an attached configuration
     */
    public JooqCommentAnnotaionDao(Configuration configuration) {
        super(JooqCommentAnnotaion.COMMENT_ANNOTAION, io.metaloom.loom.db.jooq.tables.pojos.JooqCommentAnnotaion.class, configuration);
    }

    @Override
    public Record2<UUID, UUID> getId(io.metaloom.loom.db.jooq.tables.pojos.JooqCommentAnnotaion object) {
        return compositeKeyRecord(object.getCommentUuid(), object.getAnnotationUuid());
    }

    /**
     * Fetch records that have <code>comment_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqCommentAnnotaion> fetchRangeOfJooqCommentUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqCommentAnnotaion.COMMENT_ANNOTAION.COMMENT_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comment_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqCommentAnnotaion> fetchByJooqCommentUuid(UUID... values) {
        return fetch(JooqCommentAnnotaion.COMMENT_ANNOTAION.COMMENT_UUID, values);
    }

    /**
     * Fetch records that have <code>annotation_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqCommentAnnotaion> fetchRangeOfJooqAnnotationUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqCommentAnnotaion.COMMENT_ANNOTAION.ANNOTATION_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>annotation_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqCommentAnnotaion> fetchByJooqAnnotationUuid(UUID... values) {
        return fetch(JooqCommentAnnotaion.COMMENT_ANNOTAION.ANNOTATION_UUID, values);
    }
}
