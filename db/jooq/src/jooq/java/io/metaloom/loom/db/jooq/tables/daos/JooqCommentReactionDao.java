/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqCommentReaction;
import io.metaloom.loom.db.jooq.tables.records.JooqCommentReactionRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqCommentReactionDao extends DAOImpl<JooqCommentReactionRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqCommentReaction, Record2<UUID, UUID>> {

    /**
     * Create a new JooqCommentReactionDao without any configuration
     */
    public JooqCommentReactionDao() {
        super(JooqCommentReaction.COMMENT_REACTION, io.metaloom.loom.db.jooq.tables.pojos.JooqCommentReaction.class);
    }

    /**
     * Create a new JooqCommentReactionDao with an attached configuration
     */
    public JooqCommentReactionDao(Configuration configuration) {
        super(JooqCommentReaction.COMMENT_REACTION, io.metaloom.loom.db.jooq.tables.pojos.JooqCommentReaction.class, configuration);
    }

    @Override
    public Record2<UUID, UUID> getId(io.metaloom.loom.db.jooq.tables.pojos.JooqCommentReaction object) {
        return compositeKeyRecord(object.getCommentUuid(), object.getReactionCommentUuid());
    }

    /**
     * Fetch records that have <code>comment_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqCommentReaction> fetchRangeOfJooqCommentUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqCommentReaction.COMMENT_REACTION.COMMENT_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comment_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqCommentReaction> fetchByJooqCommentUuid(UUID... values) {
        return fetch(JooqCommentReaction.COMMENT_REACTION.COMMENT_UUID, values);
    }

    /**
     * Fetch records that have <code>reaction_comment_uuid BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqCommentReaction> fetchRangeOfJooqReactionCommentUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqCommentReaction.COMMENT_REACTION.REACTION_COMMENT_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reaction_comment_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqCommentReaction> fetchByJooqReactionCommentUuid(UUID... values) {
        return fetch(JooqCommentReaction.COMMENT_REACTION.REACTION_COMMENT_UUID, values);
    }
}
