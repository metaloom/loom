/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqContent;
import io.metaloom.loom.db.jooq.tables.records.JooqContentRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqContentDao extends DAOImpl<JooqContentRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqContent, UUID> {

    /**
     * Create a new JooqContentDao without any configuration
     */
    public JooqContentDao() {
        super(JooqContent.CONTENT, io.metaloom.loom.db.jooq.tables.pojos.JooqContent.class);
    }

    /**
     * Create a new JooqContentDao with an attached configuration
     */
    public JooqContentDao(Configuration configuration) {
        super(JooqContent.CONTENT, io.metaloom.loom.db.jooq.tables.pojos.JooqContent.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.JooqContent object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchRangeOfJooqUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqContent.CONTENT.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchByJooqUuid(UUID... values) {
        return fetch(JooqContent.CONTENT.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.JooqContent fetchOneByJooqUuid(UUID value) {
        return fetchOne(JooqContent.CONTENT.UUID, value);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchOptionalByJooqUuid(UUID value) {
        return fetchOptional(JooqContent.CONTENT.UUID, value);
    }

    /**
     * Fetch records that have <code>namespace_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchRangeOfJooqNamespaceUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqContent.CONTENT.NAMESPACE_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>namespace_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchByJooqNamespaceUuid(UUID... values) {
        return fetch(JooqContent.CONTENT.NAMESPACE_UUID, values);
    }

    /**
     * Fetch records that have <code>parent BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchRangeOfJooqParent(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqContent.CONTENT.PARENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>parent IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchByJooqParent(UUID... values) {
        return fetch(JooqContent.CONTENT.PARENT, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchRangeOfJooqCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqContent.CONTENT.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchByJooqCreated(LocalDateTime... values) {
        return fetch(JooqContent.CONTENT.CREATED, values);
    }

    /**
     * Fetch records that have <code>creator_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchRangeOfJooqCreatorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqContent.CONTENT.CREATOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchByJooqCreatorUuid(UUID... values) {
        return fetch(JooqContent.CONTENT.CREATOR_UUID, values);
    }

    /**
     * Fetch records that have <code>edited BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchRangeOfJooqEdited(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqContent.CONTENT.EDITED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edited IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchByJooqEdited(LocalDateTime... values) {
        return fetch(JooqContent.CONTENT.EDITED, values);
    }

    /**
     * Fetch records that have <code>editor_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchRangeOfJooqEditorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqContent.CONTENT.EDITOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>editor_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchByJooqEditorUuid(UUID... values) {
        return fetch(JooqContent.CONTENT.EDITOR_UUID, values);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchRangeOfJooqMeta(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(JooqContent.CONTENT.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchByJooqMeta(JSONB... values) {
        return fetch(JooqContent.CONTENT.META, values);
    }

    /**
     * Fetch records that have <code>model_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchRangeOfJooqModelUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqContent.CONTENT.MODEL_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqContent> fetchByJooqModelUuid(UUID... values) {
        return fetch(JooqContent.CONTENT.MODEL_UUID, values);
    }
}
