/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqEmbeddingCluster;
import io.metaloom.loom.db.jooq.tables.records.JooqEmbeddingClusterRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * List embeddings for clusters
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqEmbeddingClusterDao extends DAOImpl<JooqEmbeddingClusterRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqEmbeddingCluster, Record2<UUID, UUID>> {

    /**
     * Create a new JooqEmbeddingClusterDao without any configuration
     */
    public JooqEmbeddingClusterDao() {
        super(JooqEmbeddingCluster.EMBEDDING_CLUSTER, io.metaloom.loom.db.jooq.tables.pojos.JooqEmbeddingCluster.class);
    }

    /**
     * Create a new JooqEmbeddingClusterDao with an attached configuration
     */
    public JooqEmbeddingClusterDao(Configuration configuration) {
        super(JooqEmbeddingCluster.EMBEDDING_CLUSTER, io.metaloom.loom.db.jooq.tables.pojos.JooqEmbeddingCluster.class, configuration);
    }

    @Override
    public Record2<UUID, UUID> getId(io.metaloom.loom.db.jooq.tables.pojos.JooqEmbeddingCluster object) {
        return compositeKeyRecord(object.getEmbeddingUuid(), object.getClusterUuid());
    }

    /**
     * Fetch records that have <code>embedding_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqEmbeddingCluster> fetchRangeOfJooqEmbeddingUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqEmbeddingCluster.EMBEDDING_CLUSTER.EMBEDDING_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>embedding_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqEmbeddingCluster> fetchByJooqEmbeddingUuid(UUID... values) {
        return fetch(JooqEmbeddingCluster.EMBEDDING_CLUSTER.EMBEDDING_UUID, values);
    }

    /**
     * Fetch records that have <code>cluster_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqEmbeddingCluster> fetchRangeOfJooqClusterUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqEmbeddingCluster.EMBEDDING_CLUSTER.CLUSTER_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cluster_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqEmbeddingCluster> fetchByJooqClusterUuid(UUID... values) {
        return fetch(JooqEmbeddingCluster.EMBEDDING_CLUSTER.CLUSTER_UUID, values);
    }
}
