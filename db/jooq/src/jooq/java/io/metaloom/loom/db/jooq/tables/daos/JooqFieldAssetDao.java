/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.FieldAsset;
import io.metaloom.loom.db.jooq.tables.pojos.JooqFieldAsset;
import io.metaloom.loom.db.jooq.tables.records.FieldAssetRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * Crosstable which tracks the used assets in a fields record
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqFieldAssetDao extends DAOImpl<FieldAssetRecord, JooqFieldAsset, Record2<UUID, UUID>> {

    /**
     * Create a new JooqFieldAssetDao without any configuration
     */
    public JooqFieldAssetDao() {
        super(FieldAsset.FIELD_ASSET, JooqFieldAsset.class);
    }

    /**
     * Create a new JooqFieldAssetDao with an attached configuration
     */
    public JooqFieldAssetDao(Configuration configuration) {
        super(FieldAsset.FIELD_ASSET, JooqFieldAsset.class, configuration);
    }

    @Override
    public Record2<UUID, UUID> getId(JooqFieldAsset object) {
        return compositeKeyRecord(object.getFieldUuid(), object.getAssetUuid());
    }

    /**
     * Fetch records that have <code>field_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqFieldAsset> fetchRangeOfFieldUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(FieldAsset.FIELD_ASSET.FIELD_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>field_uuid IN (values)</code>
     */
    public List<JooqFieldAsset> fetchByFieldUuid(UUID... values) {
        return fetch(FieldAsset.FIELD_ASSET.FIELD_UUID, values);
    }

    /**
     * Fetch records that have <code>asset_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqFieldAsset> fetchRangeOfAssetUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(FieldAsset.FIELD_ASSET.ASSET_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>asset_uuid IN (values)</code>
     */
    public List<JooqFieldAsset> fetchByAssetUuid(UUID... values) {
        return fetch(FieldAsset.FIELD_ASSET.ASSET_UUID, values);
    }

    /**
     * Fetch records that have <code>field_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqFieldAsset> fetchRangeOfFieldName(String lowerInclusive, String upperInclusive) {
        return fetchRange(FieldAsset.FIELD_ASSET.FIELD_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>field_name IN (values)</code>
     */
    public List<JooqFieldAsset> fetchByFieldName(String... values) {
        return fetch(FieldAsset.FIELD_ASSET.FIELD_NAME, values);
    }
}
