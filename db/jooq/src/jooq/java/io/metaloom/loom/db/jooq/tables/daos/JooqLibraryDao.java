/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqLibrary;
import io.metaloom.loom.db.jooq.tables.records.JooqLibraryRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqLibraryDao extends DAOImpl<JooqLibraryRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary, UUID> {

    /**
     * Create a new JooqLibraryDao without any configuration
     */
    public JooqLibraryDao() {
        super(JooqLibrary.LIBRARY, io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary.class);
    }

    /**
     * Create a new JooqLibraryDao with an attached configuration
     */
    public JooqLibraryDao(Configuration configuration) {
        super(JooqLibrary.LIBRARY, io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchRangeOfJooqUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqLibrary.LIBRARY.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchByJooqUuid(UUID... values) {
        return fetch(JooqLibrary.LIBRARY.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary fetchOneByJooqUuid(UUID value) {
        return fetchOne(JooqLibrary.LIBRARY.UUID, value);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchOptionalByJooqUuid(UUID value) {
        return fetchOptional(JooqLibrary.LIBRARY.UUID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchRangeOfJooqName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqLibrary.LIBRARY.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchByJooqName(String... values) {
        return fetch(JooqLibrary.LIBRARY.NAME, values);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchRangeOfJooqMeta(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(JooqLibrary.LIBRARY.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchByJooqMeta(JSONB... values) {
        return fetch(JooqLibrary.LIBRARY.META, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchRangeOfJooqDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqLibrary.LIBRARY.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchByJooqDescription(String... values) {
        return fetch(JooqLibrary.LIBRARY.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchRangeOfJooqCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqLibrary.LIBRARY.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchByJooqCreated(LocalDateTime... values) {
        return fetch(JooqLibrary.LIBRARY.CREATED, values);
    }

    /**
     * Fetch records that have <code>creator_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchRangeOfJooqCreatorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqLibrary.LIBRARY.CREATOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchByJooqCreatorUuid(UUID... values) {
        return fetch(JooqLibrary.LIBRARY.CREATOR_UUID, values);
    }

    /**
     * Fetch records that have <code>edited BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchRangeOfJooqEdited(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqLibrary.LIBRARY.EDITED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edited IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchByJooqEdited(LocalDateTime... values) {
        return fetch(JooqLibrary.LIBRARY.EDITED, values);
    }

    /**
     * Fetch records that have <code>editor_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchRangeOfJooqEditorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqLibrary.LIBRARY.EDITOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>editor_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqLibrary> fetchByJooqEditorUuid(UUID... values) {
        return fetch(JooqLibrary.LIBRARY.EDITOR_UUID, values);
    }
}
