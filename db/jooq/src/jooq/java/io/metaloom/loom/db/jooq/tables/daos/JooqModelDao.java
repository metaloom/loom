/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqModel;
import io.metaloom.loom.db.jooq.tables.records.JooqModelRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqModelDao extends DAOImpl<JooqModelRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqModel, UUID> {

    /**
     * Create a new JooqModelDao without any configuration
     */
    public JooqModelDao() {
        super(JooqModel.MODEL, io.metaloom.loom.db.jooq.tables.pojos.JooqModel.class);
    }

    /**
     * Create a new JooqModelDao with an attached configuration
     */
    public JooqModelDao(Configuration configuration) {
        super(JooqModel.MODEL, io.metaloom.loom.db.jooq.tables.pojos.JooqModel.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.JooqModel object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchRangeOfJooqUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqModel.MODEL.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchByJooqUuid(UUID... values) {
        return fetch(JooqModel.MODEL.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.JooqModel fetchOneByJooqUuid(UUID value) {
        return fetchOne(JooqModel.MODEL.UUID, value);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchOptionalByJooqUuid(UUID value) {
        return fetchOptional(JooqModel.MODEL.UUID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchRangeOfJooqName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqModel.MODEL.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchByJooqName(String... values) {
        return fetch(JooqModel.MODEL.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.JooqModel fetchOneByJooqName(String value) {
        return fetchOne(JooqModel.MODEL.NAME, value);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchOptionalByJooqName(String value) {
        return fetchOptional(JooqModel.MODEL.NAME, value);
    }

    /**
     * Fetch records that have <code>latest_version_uuid BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchRangeOfJooqLatestVersionUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqModel.MODEL.LATEST_VERSION_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>latest_version_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchByJooqLatestVersionUuid(UUID... values) {
        return fetch(JooqModel.MODEL.LATEST_VERSION_UUID, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchRangeOfJooqCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqModel.MODEL.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchByJooqCreated(LocalDateTime... values) {
        return fetch(JooqModel.MODEL.CREATED, values);
    }

    /**
     * Fetch records that have <code>creator_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchRangeOfJooqCreatorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqModel.MODEL.CREATOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchByJooqCreatorUuid(UUID... values) {
        return fetch(JooqModel.MODEL.CREATOR_UUID, values);
    }

    /**
     * Fetch records that have <code>edited BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchRangeOfJooqEdited(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqModel.MODEL.EDITED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edited IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchByJooqEdited(LocalDateTime... values) {
        return fetch(JooqModel.MODEL.EDITED, values);
    }

    /**
     * Fetch records that have <code>editor_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchRangeOfJooqEditorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqModel.MODEL.EDITOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>editor_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqModel> fetchByJooqEditorUuid(UUID... values) {
        return fetch(JooqModel.MODEL.EDITOR_UUID, values);
    }
}
