/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.Namespace;
import io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace;
import io.metaloom.loom.db.jooq.tables.records.NamespaceRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqNamespaceDao extends DAOImpl<NamespaceRecord, JooqNamespace, UUID> {

    /**
     * Create a new JooqNamespaceDao without any configuration
     */
    public JooqNamespaceDao() {
        super(Namespace.NAMESPACE, JooqNamespace.class);
    }

    /**
     * Create a new JooqNamespaceDao with an attached configuration
     */
    public JooqNamespaceDao(Configuration configuration) {
        super(Namespace.NAMESPACE, JooqNamespace.class, configuration);
    }

    @Override
    public UUID getId(JooqNamespace object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqNamespace> fetchRangeOfUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<JooqNamespace> fetchByUuid(UUID... values) {
        return fetch(Namespace.NAMESPACE.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public JooqNamespace fetchOneByUuid(UUID value) {
        return fetchOne(Namespace.NAMESPACE.UUID, value);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public Optional<JooqNamespace> fetchOptionalByUuid(UUID value) {
        return fetchOptional(Namespace.NAMESPACE.UUID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqNamespace> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<JooqNamespace> fetchByName(String... values) {
        return fetch(Namespace.NAMESPACE.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public JooqNamespace fetchOneByName(String value) {
        return fetchOne(Namespace.NAMESPACE.NAME, value);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public Optional<JooqNamespace> fetchOptionalByName(String value) {
        return fetchOptional(Namespace.NAMESPACE.NAME, value);
    }

    /**
     * Fetch records that have <code>root_content_uuid BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<JooqNamespace> fetchRangeOfRootContentUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.ROOT_CONTENT_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>root_content_uuid IN (values)</code>
     */
    public List<JooqNamespace> fetchByRootContentUuid(UUID... values) {
        return fetch(Namespace.NAMESPACE.ROOT_CONTENT_UUID, values);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqNamespace> fetchRangeOfMeta(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<JooqNamespace> fetchByMeta(JSONB... values) {
        return fetch(Namespace.NAMESPACE.META, values);
    }

    /**
     * Fetch records that have <code>path_prefix BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqNamespace> fetchRangeOfPathPrefix(String lowerInclusive, String upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.PATH_PREFIX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>path_prefix IN (values)</code>
     */
    public List<JooqNamespace> fetchByPathPrefix(String... values) {
        return fetch(Namespace.NAMESPACE.PATH_PREFIX, values);
    }

    /**
     * Fetch records that have <code>model_filter BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqNamespace> fetchRangeOfModelFilter(String lowerInclusive, String upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.MODEL_FILTER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model_filter IN (values)</code>
     */
    public List<JooqNamespace> fetchByModelFilter(String... values) {
        return fetch(Namespace.NAMESPACE.MODEL_FILTER, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqNamespace> fetchRangeOfCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<JooqNamespace> fetchByCreated(LocalDateTime... values) {
        return fetch(Namespace.NAMESPACE.CREATED, values);
    }

    /**
     * Fetch records that have <code>creator_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqNamespace> fetchRangeOfCreatorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.CREATOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_uuid IN (values)</code>
     */
    public List<JooqNamespace> fetchByCreatorUuid(UUID... values) {
        return fetch(Namespace.NAMESPACE.CREATOR_UUID, values);
    }

    /**
     * Fetch records that have <code>edited BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqNamespace> fetchRangeOfEdited(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.EDITED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edited IN (values)</code>
     */
    public List<JooqNamespace> fetchByEdited(LocalDateTime... values) {
        return fetch(Namespace.NAMESPACE.EDITED, values);
    }

    /**
     * Fetch records that have <code>editor_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqNamespace> fetchRangeOfEditorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.EDITOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>editor_uuid IN (values)</code>
     */
    public List<JooqNamespace> fetchByEditorUuid(UUID... values) {
        return fetch(Namespace.NAMESPACE.EDITOR_UUID, values);
    }
}
