/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqNamespace;
import io.metaloom.loom.db.jooq.tables.records.JooqNamespaceRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqNamespaceDao extends DAOImpl<JooqNamespaceRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace, UUID> {

    /**
     * Create a new JooqNamespaceDao without any configuration
     */
    public JooqNamespaceDao() {
        super(JooqNamespace.NAMESPACE, io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace.class);
    }

    /**
     * Create a new JooqNamespaceDao with an attached configuration
     */
    public JooqNamespaceDao(Configuration configuration) {
        super(JooqNamespace.NAMESPACE, io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchRangeOfJooqUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqNamespace.NAMESPACE.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchByJooqUuid(UUID... values) {
        return fetch(JooqNamespace.NAMESPACE.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace fetchOneByJooqUuid(UUID value) {
        return fetchOne(JooqNamespace.NAMESPACE.UUID, value);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchOptionalByJooqUuid(UUID value) {
        return fetchOptional(JooqNamespace.NAMESPACE.UUID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchRangeOfJooqName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqNamespace.NAMESPACE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchByJooqName(String... values) {
        return fetch(JooqNamespace.NAMESPACE.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace fetchOneByJooqName(String value) {
        return fetchOne(JooqNamespace.NAMESPACE.NAME, value);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchOptionalByJooqName(String value) {
        return fetchOptional(JooqNamespace.NAMESPACE.NAME, value);
    }

    /**
     * Fetch records that have <code>root_content_uuid BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchRangeOfJooqRootContentUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqNamespace.NAMESPACE.ROOT_CONTENT_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>root_content_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchByJooqRootContentUuid(UUID... values) {
        return fetch(JooqNamespace.NAMESPACE.ROOT_CONTENT_UUID, values);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchRangeOfJooqMeta(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(JooqNamespace.NAMESPACE.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchByJooqMeta(JSONB... values) {
        return fetch(JooqNamespace.NAMESPACE.META, values);
    }

    /**
     * Fetch records that have <code>path_prefix BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchRangeOfJooqPathPrefix(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqNamespace.NAMESPACE.PATH_PREFIX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>path_prefix IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchByJooqPathPrefix(String... values) {
        return fetch(JooqNamespace.NAMESPACE.PATH_PREFIX, values);
    }

    /**
     * Fetch records that have <code>model_filter BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchRangeOfJooqModelFilter(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqNamespace.NAMESPACE.MODEL_FILTER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model_filter IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchByJooqModelFilter(String... values) {
        return fetch(JooqNamespace.NAMESPACE.MODEL_FILTER, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchRangeOfJooqCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqNamespace.NAMESPACE.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchByJooqCreated(LocalDateTime... values) {
        return fetch(JooqNamespace.NAMESPACE.CREATED, values);
    }

    /**
     * Fetch records that have <code>creator_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchRangeOfJooqCreatorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqNamespace.NAMESPACE.CREATOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchByJooqCreatorUuid(UUID... values) {
        return fetch(JooqNamespace.NAMESPACE.CREATOR_UUID, values);
    }

    /**
     * Fetch records that have <code>edited BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchRangeOfJooqEdited(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqNamespace.NAMESPACE.EDITED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edited IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchByJooqEdited(LocalDateTime... values) {
        return fetch(JooqNamespace.NAMESPACE.EDITED, values);
    }

    /**
     * Fetch records that have <code>editor_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchRangeOfJooqEditorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqNamespace.NAMESPACE.EDITOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>editor_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqNamespace> fetchByJooqEditorUuid(UUID... values) {
        return fetch(JooqNamespace.NAMESPACE.EDITOR_UUID, values);
    }
}
