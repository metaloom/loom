/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqReaction;
import io.metaloom.loom.db.jooq.tables.records.JooqReactionRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;


/**
 * Stores social reactions on multiple elements
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqReactionDao extends DAOImpl<JooqReactionRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqReaction, UUID> {

    /**
     * Create a new JooqReactionDao without any configuration
     */
    public JooqReactionDao() {
        super(JooqReaction.REACTION, io.metaloom.loom.db.jooq.tables.pojos.JooqReaction.class);
    }

    /**
     * Create a new JooqReactionDao with an attached configuration
     */
    public JooqReactionDao(Configuration configuration) {
        super(JooqReaction.REACTION, io.metaloom.loom.db.jooq.tables.pojos.JooqReaction.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.JooqReaction object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchRangeOfJooqUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqReaction.REACTION.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchByJooqUuid(UUID... values) {
        return fetch(JooqReaction.REACTION.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.JooqReaction fetchOneByJooqUuid(UUID value) {
        return fetchOne(JooqReaction.REACTION.UUID, value);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchOptionalByJooqUuid(UUID value) {
        return fetchOptional(JooqReaction.REACTION.UUID, value);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchRangeOfJooqType(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqReaction.REACTION.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchByJooqType(String... values) {
        return fetch(JooqReaction.REACTION.TYPE, values);
    }

    /**
     * Fetch records that have <code>rating BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchRangeOfJooqRating(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JooqReaction.REACTION.RATING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rating IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchByJooqRating(Integer... values) {
        return fetch(JooqReaction.REACTION.RATING, values);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchRangeOfJooqMeta(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(JooqReaction.REACTION.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchByJooqMeta(JSONB... values) {
        return fetch(JooqReaction.REACTION.META, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchRangeOfJooqCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqReaction.REACTION.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchByJooqCreated(LocalDateTime... values) {
        return fetch(JooqReaction.REACTION.CREATED, values);
    }

    /**
     * Fetch records that have <code>creator_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchRangeOfJooqCreatorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqReaction.REACTION.CREATOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchByJooqCreatorUuid(UUID... values) {
        return fetch(JooqReaction.REACTION.CREATOR_UUID, values);
    }

    /**
     * Fetch records that have <code>edited BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchRangeOfJooqEdited(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqReaction.REACTION.EDITED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edited IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchByJooqEdited(LocalDateTime... values) {
        return fetch(JooqReaction.REACTION.EDITED, values);
    }

    /**
     * Fetch records that have <code>editor_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchRangeOfJooqEditorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqReaction.REACTION.EDITOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>editor_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchByJooqEditorUuid(UUID... values) {
        return fetch(JooqReaction.REACTION.EDITOR_UUID, values);
    }

    /**
     * Fetch records that have <code>asset_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchRangeOfJooqAssetUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqReaction.REACTION.ASSET_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>asset_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchByJooqAssetUuid(UUID... values) {
        return fetch(JooqReaction.REACTION.ASSET_UUID, values);
    }

    /**
     * Fetch records that have <code>comment_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchRangeOfJooqCommentUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqReaction.REACTION.COMMENT_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comment_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchByJooqCommentUuid(UUID... values) {
        return fetch(JooqReaction.REACTION.COMMENT_UUID, values);
    }

    /**
     * Fetch records that have <code>annotation_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchRangeOfJooqAnnotationUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqReaction.REACTION.ANNOTATION_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>annotation_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqReaction> fetchByJooqAnnotationUuid(UUID... values) {
        return fetch(JooqReaction.REACTION.ANNOTATION_UUID, values);
    }
}
