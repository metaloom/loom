/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqRoleGroup;
import io.metaloom.loom.db.jooq.tables.records.JooqRoleGroupRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqRoleGroupDao extends DAOImpl<JooqRoleGroupRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqRoleGroup, Record2<UUID, UUID>> {

    /**
     * Create a new JooqRoleGroupDao without any configuration
     */
    public JooqRoleGroupDao() {
        super(JooqRoleGroup.ROLE_GROUP, io.metaloom.loom.db.jooq.tables.pojos.JooqRoleGroup.class);
    }

    /**
     * Create a new JooqRoleGroupDao with an attached configuration
     */
    public JooqRoleGroupDao(Configuration configuration) {
        super(JooqRoleGroup.ROLE_GROUP, io.metaloom.loom.db.jooq.tables.pojos.JooqRoleGroup.class, configuration);
    }

    @Override
    public Record2<UUID, UUID> getId(io.metaloom.loom.db.jooq.tables.pojos.JooqRoleGroup object) {
        return compositeKeyRecord(object.getGroupUuid(), object.getRoleUuid());
    }

    /**
     * Fetch records that have <code>group_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqRoleGroup> fetchRangeOfJooqGroupUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqRoleGroup.ROLE_GROUP.GROUP_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>group_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqRoleGroup> fetchByJooqGroupUuid(UUID... values) {
        return fetch(JooqRoleGroup.ROLE_GROUP.GROUP_UUID, values);
    }

    /**
     * Fetch records that have <code>role_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqRoleGroup> fetchRangeOfJooqRoleUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqRoleGroup.ROLE_GROUP.ROLE_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqRoleGroup> fetchByJooqRoleUuid(UUID... values) {
        return fetch(JooqRoleGroup.ROLE_GROUP.ROLE_UUID, values);
    }
}
