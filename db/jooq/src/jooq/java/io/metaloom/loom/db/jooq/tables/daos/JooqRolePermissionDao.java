/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.RolePermission;
import io.metaloom.loom.db.jooq.tables.pojos.JooqRolePermission;
import io.metaloom.loom.db.jooq.tables.records.RolePermissionRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqRolePermissionDao extends DAOImpl<RolePermissionRecord, JooqRolePermission, Record2<UUID, UUID>> {

    /**
     * Create a new JooqRolePermissionDao without any configuration
     */
    public JooqRolePermissionDao() {
        super(RolePermission.ROLE_PERMISSION, JooqRolePermission.class);
    }

    /**
     * Create a new JooqRolePermissionDao with an attached configuration
     */
    public JooqRolePermissionDao(Configuration configuration) {
        super(RolePermission.ROLE_PERMISSION, JooqRolePermission.class, configuration);
    }

    @Override
    public Record2<UUID, UUID> getId(JooqRolePermission object) {
        return compositeKeyRecord(object.getRoleUuid(), object.getElementUuid());
    }

    /**
     * Fetch records that have <code>role_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqRolePermission> fetchRangeOfRoleUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(RolePermission.ROLE_PERMISSION.ROLE_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_uuid IN (values)</code>
     */
    public List<JooqRolePermission> fetchByRoleUuid(UUID... values) {
        return fetch(RolePermission.ROLE_PERMISSION.ROLE_UUID, values);
    }

    /**
     * Fetch records that have <code>element_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqRolePermission> fetchRangeOfElementUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(RolePermission.ROLE_PERMISSION.ELEMENT_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>element_uuid IN (values)</code>
     */
    public List<JooqRolePermission> fetchByElementUuid(UUID... values) {
        return fetch(RolePermission.ROLE_PERMISSION.ELEMENT_UUID, values);
    }

    /**
     * Fetch records that have <code>create_perm BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqRolePermission> fetchRangeOfCreatePerm(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(RolePermission.ROLE_PERMISSION.CREATE_PERM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_perm IN (values)</code>
     */
    public List<JooqRolePermission> fetchByCreatePerm(Boolean... values) {
        return fetch(RolePermission.ROLE_PERMISSION.CREATE_PERM, values);
    }

    /**
     * Fetch records that have <code>read_perm BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqRolePermission> fetchRangeOfReadPerm(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(RolePermission.ROLE_PERMISSION.READ_PERM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>read_perm IN (values)</code>
     */
    public List<JooqRolePermission> fetchByReadPerm(Boolean... values) {
        return fetch(RolePermission.ROLE_PERMISSION.READ_PERM, values);
    }

    /**
     * Fetch records that have <code>delete_perm BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqRolePermission> fetchRangeOfDeletePerm(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(RolePermission.ROLE_PERMISSION.DELETE_PERM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>delete_perm IN (values)</code>
     */
    public List<JooqRolePermission> fetchByDeletePerm(Boolean... values) {
        return fetch(RolePermission.ROLE_PERMISSION.DELETE_PERM, values);
    }

    /**
     * Fetch records that have <code>update_perm BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqRolePermission> fetchRangeOfUpdatePerm(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(RolePermission.ROLE_PERMISSION.UPDATE_PERM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_perm IN (values)</code>
     */
    public List<JooqRolePermission> fetchByUpdatePerm(Boolean... values) {
        return fetch(RolePermission.ROLE_PERMISSION.UPDATE_PERM, values);
    }

    /**
     * Fetch records that have <code>read_publish_perm BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<JooqRolePermission> fetchRangeOfReadPublishPerm(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(RolePermission.ROLE_PERMISSION.READ_PUBLISH_PERM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>read_publish_perm IN (values)</code>
     */
    public List<JooqRolePermission> fetchByReadPublishPerm(Boolean... values) {
        return fetch(RolePermission.ROLE_PERMISSION.READ_PUBLISH_PERM, values);
    }

    /**
     * Fetch records that have <code>publish_perm BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqRolePermission> fetchRangeOfPublishPerm(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(RolePermission.ROLE_PERMISSION.PUBLISH_PERM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>publish_perm IN (values)</code>
     */
    public List<JooqRolePermission> fetchByPublishPerm(Boolean... values) {
        return fetch(RolePermission.ROLE_PERMISSION.PUBLISH_PERM, values);
    }
}
