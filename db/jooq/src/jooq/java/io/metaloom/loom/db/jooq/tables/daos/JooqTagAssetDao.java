/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.TagAsset;
import io.metaloom.loom.db.jooq.tables.pojos.JooqTagAsset;
import io.metaloom.loom.db.jooq.tables.records.TagAssetRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqTagAssetDao extends DAOImpl<TagAssetRecord, JooqTagAsset, Record2<UUID, UUID>> {

    /**
     * Create a new JooqTagAssetDao without any configuration
     */
    public JooqTagAssetDao() {
        super(TagAsset.TAG_ASSET, JooqTagAsset.class);
    }

    /**
     * Create a new JooqTagAssetDao with an attached configuration
     */
    public JooqTagAssetDao(Configuration configuration) {
        super(TagAsset.TAG_ASSET, JooqTagAsset.class, configuration);
    }

    @Override
    public Record2<UUID, UUID> getId(JooqTagAsset object) {
        return compositeKeyRecord(object.getTagUuid(), object.getAssetUuid());
    }

    /**
     * Fetch records that have <code>tag_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqTagAsset> fetchRangeOfTagUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(TagAsset.TAG_ASSET.TAG_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tag_uuid IN (values)</code>
     */
    public List<JooqTagAsset> fetchByTagUuid(UUID... values) {
        return fetch(TagAsset.TAG_ASSET.TAG_UUID, values);
    }

    /**
     * Fetch records that have <code>asset_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqTagAsset> fetchRangeOfAssetUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(TagAsset.TAG_ASSET.ASSET_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>asset_uuid IN (values)</code>
     */
    public List<JooqTagAsset> fetchByAssetUuid(UUID... values) {
        return fetch(TagAsset.TAG_ASSET.ASSET_UUID, values);
    }
}
