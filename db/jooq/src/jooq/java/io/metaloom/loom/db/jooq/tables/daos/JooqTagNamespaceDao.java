/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqTagNamespace;
import io.metaloom.loom.db.jooq.tables.records.JooqTagNamespaceRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * Table used to taggings on namespaces
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqTagNamespaceDao extends DAOImpl<JooqTagNamespaceRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqTagNamespace, Record2<UUID, UUID>> {

    /**
     * Create a new JooqTagNamespaceDao without any configuration
     */
    public JooqTagNamespaceDao() {
        super(JooqTagNamespace.TAG_NAMESPACE, io.metaloom.loom.db.jooq.tables.pojos.JooqTagNamespace.class);
    }

    /**
     * Create a new JooqTagNamespaceDao with an attached configuration
     */
    public JooqTagNamespaceDao(Configuration configuration) {
        super(JooqTagNamespace.TAG_NAMESPACE, io.metaloom.loom.db.jooq.tables.pojos.JooqTagNamespace.class, configuration);
    }

    @Override
    public Record2<UUID, UUID> getId(io.metaloom.loom.db.jooq.tables.pojos.JooqTagNamespace object) {
        return compositeKeyRecord(object.getTagUuid(), object.getNamespaceUuid());
    }

    /**
     * Fetch records that have <code>tag_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTagNamespace> fetchRangeOfJooqTagUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqTagNamespace.TAG_NAMESPACE.TAG_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tag_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTagNamespace> fetchByJooqTagUuid(UUID... values) {
        return fetch(JooqTagNamespace.TAG_NAMESPACE.TAG_UUID, values);
    }

    /**
     * Fetch records that have <code>namespace_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTagNamespace> fetchRangeOfJooqNamespaceUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqTagNamespace.TAG_NAMESPACE.NAMESPACE_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>namespace_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTagNamespace> fetchByJooqNamespaceUuid(UUID... values) {
        return fetch(JooqTagNamespace.TAG_NAMESPACE.NAMESPACE_UUID, values);
    }
}
