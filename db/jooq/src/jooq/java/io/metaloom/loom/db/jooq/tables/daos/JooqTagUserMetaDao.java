/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqTagUserMeta;
import io.metaloom.loom.db.jooq.tables.records.JooqTagUserMetaRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqTagUserMetaDao extends DAOImpl<JooqTagUserMetaRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqTagUserMeta, Record2<UUID, UUID>> {

    /**
     * Create a new JooqTagUserMetaDao without any configuration
     */
    public JooqTagUserMetaDao() {
        super(JooqTagUserMeta.TAG_USER_META, io.metaloom.loom.db.jooq.tables.pojos.JooqTagUserMeta.class);
    }

    /**
     * Create a new JooqTagUserMetaDao with an attached configuration
     */
    public JooqTagUserMetaDao(Configuration configuration) {
        super(JooqTagUserMeta.TAG_USER_META, io.metaloom.loom.db.jooq.tables.pojos.JooqTagUserMeta.class, configuration);
    }

    @Override
    public Record2<UUID, UUID> getId(io.metaloom.loom.db.jooq.tables.pojos.JooqTagUserMeta object) {
        return compositeKeyRecord(object.getTagUuid(), object.getUserUuid());
    }

    /**
     * Fetch records that have <code>tag_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTagUserMeta> fetchRangeOfJooqTagUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqTagUserMeta.TAG_USER_META.TAG_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tag_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTagUserMeta> fetchByJooqTagUuid(UUID... values) {
        return fetch(JooqTagUserMeta.TAG_USER_META.TAG_UUID, values);
    }

    /**
     * Fetch records that have <code>user_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTagUserMeta> fetchRangeOfJooqUserUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqTagUserMeta.TAG_USER_META.USER_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTagUserMeta> fetchByJooqUserUuid(UUID... values) {
        return fetch(JooqTagUserMeta.TAG_USER_META.USER_UUID, values);
    }

    /**
     * Fetch records that have <code>rating BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTagUserMeta> fetchRangeOfJooqRating(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JooqTagUserMeta.TAG_USER_META.RATING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rating IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTagUserMeta> fetchByJooqRating(Integer... values) {
        return fetch(JooqTagUserMeta.TAG_USER_META.RATING, values);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTagUserMeta> fetchRangeOfJooqMeta(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(JooqTagUserMeta.TAG_USER_META.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTagUserMeta> fetchByJooqMeta(JSONB... values) {
        return fetch(JooqTagUserMeta.TAG_USER_META.META, values);
    }
}
