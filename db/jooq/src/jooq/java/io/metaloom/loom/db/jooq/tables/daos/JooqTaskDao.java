/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.enums.JooqTaskStatus;
import io.metaloom.loom.db.jooq.tables.JooqTask;
import io.metaloom.loom.db.jooq.tables.records.JooqTaskRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqTaskDao extends DAOImpl<JooqTaskRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqTask, UUID> {

    /**
     * Create a new JooqTaskDao without any configuration
     */
    public JooqTaskDao() {
        super(JooqTask.TASK, io.metaloom.loom.db.jooq.tables.pojos.JooqTask.class);
    }

    /**
     * Create a new JooqTaskDao with an attached configuration
     */
    public JooqTaskDao(Configuration configuration) {
        super(JooqTask.TASK, io.metaloom.loom.db.jooq.tables.pojos.JooqTask.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.JooqTask object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchRangeOfJooqUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqTask.TASK.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchByJooqUuid(UUID... values) {
        return fetch(JooqTask.TASK.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.JooqTask fetchOneByJooqUuid(UUID value) {
        return fetchOne(JooqTask.TASK.UUID, value);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchOptionalByJooqUuid(UUID value) {
        return fetchOptional(JooqTask.TASK.UUID, value);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchRangeOfJooqTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqTask.TASK.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchByJooqTitle(String... values) {
        return fetch(JooqTask.TASK.TITLE, values);
    }

    /**
     * Fetch records that have <code>content BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchRangeOfJooqContent(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqTask.TASK.CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchByJooqContent(String... values) {
        return fetch(JooqTask.TASK.CONTENT, values);
    }

    /**
     * Fetch records that have <code>due_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchRangeOfJooqDueDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqTask.TASK.DUE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>due_date IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchByJooqDueDate(LocalDateTime... values) {
        return fetch(JooqTask.TASK.DUE_DATE, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchRangeOfJooqStatus(JooqTaskStatus lowerInclusive, JooqTaskStatus upperInclusive) {
        return fetchRange(JooqTask.TASK.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchByJooqStatus(JooqTaskStatus... values) {
        return fetch(JooqTask.TASK.STATUS, values);
    }

    /**
     * Fetch records that have <code>priority BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchRangeOfJooqPriority(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JooqTask.TASK.PRIORITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>priority IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchByJooqPriority(Integer... values) {
        return fetch(JooqTask.TASK.PRIORITY, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchRangeOfJooqCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqTask.TASK.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchByJooqCreated(LocalDateTime... values) {
        return fetch(JooqTask.TASK.CREATED, values);
    }

    /**
     * Fetch records that have <code>creator_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchRangeOfJooqCreatorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqTask.TASK.CREATOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchByJooqCreatorUuid(UUID... values) {
        return fetch(JooqTask.TASK.CREATOR_UUID, values);
    }

    /**
     * Fetch records that have <code>edited BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchRangeOfJooqEdited(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqTask.TASK.EDITED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edited IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchByJooqEdited(LocalDateTime... values) {
        return fetch(JooqTask.TASK.EDITED, values);
    }

    /**
     * Fetch records that have <code>editor_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchRangeOfJooqEditorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqTask.TASK.EDITOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>editor_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTask> fetchByJooqEditorUuid(UUID... values) {
        return fetch(JooqTask.TASK.EDITOR_UUID, values);
    }
}
