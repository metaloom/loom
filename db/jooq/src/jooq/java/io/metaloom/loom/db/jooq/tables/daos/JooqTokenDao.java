/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.JooqToken;
import io.metaloom.loom.db.jooq.tables.records.JooqTokenRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqTokenDao extends DAOImpl<JooqTokenRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqToken, UUID> {

    /**
     * Create a new JooqTokenDao without any configuration
     */
    public JooqTokenDao() {
        super(JooqToken.TOKEN, io.metaloom.loom.db.jooq.tables.pojos.JooqToken.class);
    }

    /**
     * Create a new JooqTokenDao with an attached configuration
     */
    public JooqTokenDao(Configuration configuration) {
        super(JooqToken.TOKEN, io.metaloom.loom.db.jooq.tables.pojos.JooqToken.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.JooqToken object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqToken> fetchRangeOfJooqUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqToken.TOKEN.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqToken> fetchByJooqUuid(UUID... values) {
        return fetch(JooqToken.TOKEN.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.JooqToken fetchOneByJooqUuid(UUID value) {
        return fetchOne(JooqToken.TOKEN.UUID, value);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.JooqToken> fetchOptionalByJooqUuid(UUID value) {
        return fetchOptional(JooqToken.TOKEN.UUID, value);
    }

    /**
     * Fetch records that have <code>user_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqToken> fetchRangeOfJooqUserUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqToken.TOKEN.USER_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqToken> fetchByJooqUserUuid(UUID... values) {
        return fetch(JooqToken.TOKEN.USER_UUID, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqToken> fetchRangeOfJooqDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqToken.TOKEN.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqToken> fetchByJooqDescription(String... values) {
        return fetch(JooqToken.TOKEN.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>token BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqToken> fetchRangeOfJooqToken(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqToken.TOKEN.TOKEN_, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>token IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqToken> fetchByJooqToken(String... values) {
        return fetch(JooqToken.TOKEN.TOKEN_, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqToken> fetchRangeOfJooqCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqToken.TOKEN.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqToken> fetchByJooqCreated(LocalDateTime... values) {
        return fetch(JooqToken.TOKEN.CREATED, values);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqToken> fetchRangeOfJooqMeta(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(JooqToken.TOKEN.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqToken> fetchByJooqMeta(JSONB... values) {
        return fetch(JooqToken.TOKEN.META, values);
    }
}
