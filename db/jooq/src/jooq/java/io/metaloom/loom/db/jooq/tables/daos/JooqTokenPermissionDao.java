/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.enums.JooqLoomPermission;
import io.metaloom.loom.db.jooq.tables.JooqTokenPermission;
import io.metaloom.loom.db.jooq.tables.records.JooqTokenPermissionRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqTokenPermissionDao extends DAOImpl<JooqTokenPermissionRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqTokenPermission, Record2<UUID, String>> {

    /**
     * Create a new JooqTokenPermissionDao without any configuration
     */
    public JooqTokenPermissionDao() {
        super(JooqTokenPermission.TOKEN_PERMISSION, io.metaloom.loom.db.jooq.tables.pojos.JooqTokenPermission.class);
    }

    /**
     * Create a new JooqTokenPermissionDao with an attached configuration
     */
    public JooqTokenPermissionDao(Configuration configuration) {
        super(JooqTokenPermission.TOKEN_PERMISSION, io.metaloom.loom.db.jooq.tables.pojos.JooqTokenPermission.class, configuration);
    }

    @Override
    public Record2<UUID, String> getId(io.metaloom.loom.db.jooq.tables.pojos.JooqTokenPermission object) {
        return compositeKeyRecord(object.getTokenUuid(), object.getResource());
    }

    /**
     * Fetch records that have <code>token_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTokenPermission> fetchRangeOfJooqTokenUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqTokenPermission.TOKEN_PERMISSION.TOKEN_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>token_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTokenPermission> fetchByJooqTokenUuid(UUID... values) {
        return fetch(JooqTokenPermission.TOKEN_PERMISSION.TOKEN_UUID, values);
    }

    /**
     * Fetch records that have <code>resource BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTokenPermission> fetchRangeOfJooqResource(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqTokenPermission.TOKEN_PERMISSION.RESOURCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>resource IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTokenPermission> fetchByJooqResource(String... values) {
        return fetch(JooqTokenPermission.TOKEN_PERMISSION.RESOURCE, values);
    }

    /**
     * Fetch records that have <code>permission BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTokenPermission> fetchRangeOfJooqPermission(JooqLoomPermission lowerInclusive, JooqLoomPermission upperInclusive) {
        return fetchRange(JooqTokenPermission.TOKEN_PERMISSION.PERMISSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>permission IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqTokenPermission> fetchByJooqPermission(JooqLoomPermission... values) {
        return fetch(JooqTokenPermission.TOKEN_PERMISSION.PERMISSION, values);
    }
}
