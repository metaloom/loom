/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.enums.JooqLoomEvents;
import io.metaloom.loom.db.jooq.tables.JooqWebhook;
import io.metaloom.loom.db.jooq.tables.records.JooqWebhookRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;


/**
 * Table which stores the registered webhooks
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqWebhookDao extends DAOImpl<JooqWebhookRecord, io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook, UUID> {

    /**
     * Create a new JooqWebhookDao without any configuration
     */
    public JooqWebhookDao() {
        super(JooqWebhook.WEBHOOK, io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook.class);
    }

    /**
     * Create a new JooqWebhookDao with an attached configuration
     */
    public JooqWebhookDao(Configuration configuration) {
        super(JooqWebhook.WEBHOOK, io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchRangeOfJooqUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqWebhook.WEBHOOK.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchByJooqUuid(UUID... values) {
        return fetch(JooqWebhook.WEBHOOK.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook fetchOneByJooqUuid(UUID value) {
        return fetchOne(JooqWebhook.WEBHOOK.UUID, value);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchOptionalByJooqUuid(UUID value) {
        return fetchOptional(JooqWebhook.WEBHOOK.UUID, value);
    }

    /**
     * Fetch records that have <code>url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchRangeOfJooqUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqWebhook.WEBHOOK.URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchByJooqUrl(String... values) {
        return fetch(JooqWebhook.WEBHOOK.URL, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchRangeOfJooqStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqWebhook.WEBHOOK.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchByJooqStatus(String... values) {
        return fetch(JooqWebhook.WEBHOOK.STATUS, values);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchRangeOfJooqActive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(JooqWebhook.WEBHOOK.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchByJooqActive(Boolean... values) {
        return fetch(JooqWebhook.WEBHOOK.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>triggers BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchRangeOfJooqTriggers(JooqLoomEvents lowerInclusive, JooqLoomEvents upperInclusive) {
        return fetchRange(JooqWebhook.WEBHOOK.TRIGGERS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>triggers IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchByJooqTriggers(JooqLoomEvents... values) {
        return fetch(JooqWebhook.WEBHOOK.TRIGGERS, values);
    }

    /**
     * Fetch records that have <code>secretToken BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchRangeOfJooqSecrettoken(String lowerInclusive, String upperInclusive) {
        return fetchRange(JooqWebhook.WEBHOOK.SECRETTOKEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>secretToken IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchByJooqSecrettoken(String... values) {
        return fetch(JooqWebhook.WEBHOOK.SECRETTOKEN, values);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchRangeOfJooqMeta(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(JooqWebhook.WEBHOOK.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchByJooqMeta(JSONB... values) {
        return fetch(JooqWebhook.WEBHOOK.META, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchRangeOfJooqCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqWebhook.WEBHOOK.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchByJooqCreated(LocalDateTime... values) {
        return fetch(JooqWebhook.WEBHOOK.CREATED, values);
    }

    /**
     * Fetch records that have <code>creator_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchRangeOfJooqCreatorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqWebhook.WEBHOOK.CREATOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchByJooqCreatorUuid(UUID... values) {
        return fetch(JooqWebhook.WEBHOOK.CREATOR_UUID, values);
    }

    /**
     * Fetch records that have <code>edited BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchRangeOfJooqEdited(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JooqWebhook.WEBHOOK.EDITED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edited IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchByJooqEdited(LocalDateTime... values) {
        return fetch(JooqWebhook.WEBHOOK.EDITED, values);
    }

    /**
     * Fetch records that have <code>editor_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchRangeOfJooqEditorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(JooqWebhook.WEBHOOK.EDITOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>editor_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.JooqWebhook> fetchByJooqEditorUuid(UUID... values) {
        return fetch(JooqWebhook.WEBHOOK.EDITOR_UUID, values);
    }
}
