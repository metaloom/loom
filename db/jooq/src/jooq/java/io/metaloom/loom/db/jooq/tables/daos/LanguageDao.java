/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.Language;
import io.metaloom.loom.db.jooq.tables.records.LanguageRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;


/**
 * Table which stores the languages for loom
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LanguageDao extends DAOImpl<LanguageRecord, io.metaloom.loom.db.jooq.tables.pojos.Language, UUID> {

    /**
     * Create a new LanguageDao without any configuration
     */
    public LanguageDao() {
        super(Language.LANGUAGE, io.metaloom.loom.db.jooq.tables.pojos.Language.class);
    }

    /**
     * Create a new LanguageDao with an attached configuration
     */
    public LanguageDao(Configuration configuration) {
        super(Language.LANGUAGE, io.metaloom.loom.db.jooq.tables.pojos.Language.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.Language object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Language> fetchRangeOfUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Language.LANGUAGE.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Language> fetchByUuid(UUID... values) {
        return fetch(Language.LANGUAGE.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.Language fetchOneByUuid(UUID value) {
        return fetchOne(Language.LANGUAGE.UUID, value);
    }

    /**
     * Fetch records that have <code>native_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Language> fetchRangeOfNativeName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Language.LANGUAGE.NATIVE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>native_name IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Language> fetchByNativeName(String... values) {
        return fetch(Language.LANGUAGE.NATIVE_NAME, values);
    }

    /**
     * Fetch records that have <code>tag BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Language> fetchRangeOfTag(String lowerInclusive, String upperInclusive) {
        return fetchRange(Language.LANGUAGE.TAG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tag IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Language> fetchByTag(String... values) {
        return fetch(Language.LANGUAGE.TAG, values);
    }

    /**
     * Fetch a unique record that has <code>tag = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.Language fetchOneByTag(String value) {
        return fetchOne(Language.LANGUAGE.TAG, value);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Language> fetchRangeOfMeta(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(Language.LANGUAGE.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Language> fetchByMeta(JSONB... values) {
        return fetch(Language.LANGUAGE.META, values);
    }
}
