/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.Model;
import io.metaloom.loom.db.jooq.tables.records.ModelRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModelDao extends DAOImpl<ModelRecord, io.metaloom.loom.db.jooq.tables.pojos.Model, UUID> {

    /**
     * Create a new ModelDao without any configuration
     */
    public ModelDao() {
        super(Model.MODEL, io.metaloom.loom.db.jooq.tables.pojos.Model.class);
    }

    /**
     * Create a new ModelDao with an attached configuration
     */
    public ModelDao(Configuration configuration) {
        super(Model.MODEL, io.metaloom.loom.db.jooq.tables.pojos.Model.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.Model object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchRangeOfUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Model.MODEL.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchByUuid(UUID... values) {
        return fetch(Model.MODEL.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.Model fetchOneByUuid(UUID value) {
        return fetchOne(Model.MODEL.UUID, value);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchOptionalByUuid(UUID value) {
        return fetchOptional(Model.MODEL.UUID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Model.MODEL.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchByName(String... values) {
        return fetch(Model.MODEL.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.Model fetchOneByName(String value) {
        return fetchOne(Model.MODEL.NAME, value);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchOptionalByName(String value) {
        return fetchOptional(Model.MODEL.NAME, value);
    }

    /**
     * Fetch records that have <code>latest_version_uuid BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchRangeOfLatestVersionUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Model.MODEL.LATEST_VERSION_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>latest_version_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchByLatestVersionUuid(UUID... values) {
        return fetch(Model.MODEL.LATEST_VERSION_UUID, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchRangeOfCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Model.MODEL.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchByCreated(LocalDateTime... values) {
        return fetch(Model.MODEL.CREATED, values);
    }

    /**
     * Fetch records that have <code>creator_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchRangeOfCreatorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Model.MODEL.CREATOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchByCreatorUuid(UUID... values) {
        return fetch(Model.MODEL.CREATOR_UUID, values);
    }

    /**
     * Fetch records that have <code>edited BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchRangeOfEdited(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Model.MODEL.EDITED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edited IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchByEdited(LocalDateTime... values) {
        return fetch(Model.MODEL.EDITED, values);
    }

    /**
     * Fetch records that have <code>editor_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchRangeOfEditorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Model.MODEL.EDITOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>editor_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Model> fetchByEditorUuid(UUID... values) {
        return fetch(Model.MODEL.EDITOR_UUID, values);
    }
}
