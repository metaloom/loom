/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.tables.Namespace;
import io.metaloom.loom.db.jooq.tables.records.NamespaceRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NamespaceDao extends DAOImpl<NamespaceRecord, io.metaloom.loom.db.jooq.tables.pojos.Namespace, UUID> {

    /**
     * Create a new NamespaceDao without any configuration
     */
    public NamespaceDao() {
        super(Namespace.NAMESPACE, io.metaloom.loom.db.jooq.tables.pojos.Namespace.class);
    }

    /**
     * Create a new NamespaceDao with an attached configuration
     */
    public NamespaceDao(Configuration configuration) {
        super(Namespace.NAMESPACE, io.metaloom.loom.db.jooq.tables.pojos.Namespace.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.Namespace object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchRangeOfUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchByUuid(UUID... values) {
        return fetch(Namespace.NAMESPACE.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.Namespace fetchOneByUuid(UUID value) {
        return fetchOne(Namespace.NAMESPACE.UUID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchByName(String... values) {
        return fetch(Namespace.NAMESPACE.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.Namespace fetchOneByName(String value) {
        return fetchOne(Namespace.NAMESPACE.NAME, value);
    }

    /**
     * Fetch records that have <code>root_content_uuid BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchRangeOfRootContentUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.ROOT_CONTENT_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>root_content_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchByRootContentUuid(UUID... values) {
        return fetch(Namespace.NAMESPACE.ROOT_CONTENT_UUID, values);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchRangeOfMeta(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchByMeta(JSONB... values) {
        return fetch(Namespace.NAMESPACE.META, values);
    }

    /**
     * Fetch records that have <code>path_prefix BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchRangeOfPathPrefix(String lowerInclusive, String upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.PATH_PREFIX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>path_prefix IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchByPathPrefix(String... values) {
        return fetch(Namespace.NAMESPACE.PATH_PREFIX, values);
    }

    /**
     * Fetch records that have <code>model_filter BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchRangeOfModelFilter(String lowerInclusive, String upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.MODEL_FILTER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model_filter IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchByModelFilter(String... values) {
        return fetch(Namespace.NAMESPACE.MODEL_FILTER, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchRangeOfCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchByCreated(LocalDateTime... values) {
        return fetch(Namespace.NAMESPACE.CREATED, values);
    }

    /**
     * Fetch records that have <code>creator_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchRangeOfCreatorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.CREATOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchByCreatorUuid(UUID... values) {
        return fetch(Namespace.NAMESPACE.CREATOR_UUID, values);
    }

    /**
     * Fetch records that have <code>edited BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchRangeOfEdited(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.EDITED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edited IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchByEdited(LocalDateTime... values) {
        return fetch(Namespace.NAMESPACE.EDITED, values);
    }

    /**
     * Fetch records that have <code>editor_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchRangeOfEditorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Namespace.NAMESPACE.EDITOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>editor_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Namespace> fetchByEditorUuid(UUID... values) {
        return fetch(Namespace.NAMESPACE.EDITOR_UUID, values);
    }
}
