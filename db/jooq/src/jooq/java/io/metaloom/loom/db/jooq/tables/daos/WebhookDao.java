/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.daos;


import io.metaloom.loom.db.jooq.enums.LoomEvent;
import io.metaloom.loom.db.jooq.tables.Webhook;
import io.metaloom.loom.db.jooq.tables.records.WebhookRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;


/**
 * Table which stores the registered webhooks
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WebhookDao extends DAOImpl<WebhookRecord, io.metaloom.loom.db.jooq.tables.pojos.Webhook, UUID> {

    /**
     * Create a new WebhookDao without any configuration
     */
    public WebhookDao() {
        super(Webhook.WEBHOOK, io.metaloom.loom.db.jooq.tables.pojos.Webhook.class);
    }

    /**
     * Create a new WebhookDao with an attached configuration
     */
    public WebhookDao(Configuration configuration) {
        super(Webhook.WEBHOOK, io.metaloom.loom.db.jooq.tables.pojos.Webhook.class, configuration);
    }

    @Override
    public UUID getId(io.metaloom.loom.db.jooq.tables.pojos.Webhook object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchRangeOfUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Webhook.WEBHOOK.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchByUuid(UUID... values) {
        return fetch(Webhook.WEBHOOK.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public io.metaloom.loom.db.jooq.tables.pojos.Webhook fetchOneByUuid(UUID value) {
        return fetchOne(Webhook.WEBHOOK.UUID, value);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public Optional<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchOptionalByUuid(UUID value) {
        return fetchOptional(Webhook.WEBHOOK.UUID, value);
    }

    /**
     * Fetch records that have <code>url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchRangeOfUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(Webhook.WEBHOOK.URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchByUrl(String... values) {
        return fetch(Webhook.WEBHOOK.URL, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Webhook.WEBHOOK.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchByStatus(String... values) {
        return fetch(Webhook.WEBHOOK.STATUS, values);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchRangeOfActive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Webhook.WEBHOOK.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchByActive(Boolean... values) {
        return fetch(Webhook.WEBHOOK.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>trigger BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchRangeOfTrigger(LoomEvent lowerInclusive, LoomEvent upperInclusive) {
        return fetchRange(Webhook.WEBHOOK.TRIGGER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>trigger IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchByTrigger(LoomEvent... values) {
        return fetch(Webhook.WEBHOOK.TRIGGER, values);
    }

    /**
     * Fetch records that have <code>secretToken BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchRangeOfSecrettoken(String lowerInclusive, String upperInclusive) {
        return fetchRange(Webhook.WEBHOOK.SECRETTOKEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>secretToken IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchBySecrettoken(String... values) {
        return fetch(Webhook.WEBHOOK.SECRETTOKEN, values);
    }

    /**
     * Fetch records that have <code>meta BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchRangeOfMeta(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(Webhook.WEBHOOK.META, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meta IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchByMeta(JSONB... values) {
        return fetch(Webhook.WEBHOOK.META, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchRangeOfCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Webhook.WEBHOOK.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchByCreated(LocalDateTime... values) {
        return fetch(Webhook.WEBHOOK.CREATED, values);
    }

    /**
     * Fetch records that have <code>creator_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchRangeOfCreatorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Webhook.WEBHOOK.CREATOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>creator_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchByCreatorUuid(UUID... values) {
        return fetch(Webhook.WEBHOOK.CREATOR_UUID, values);
    }

    /**
     * Fetch records that have <code>edited BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchRangeOfEdited(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Webhook.WEBHOOK.EDITED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>edited IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchByEdited(LocalDateTime... values) {
        return fetch(Webhook.WEBHOOK.EDITED, values);
    }

    /**
     * Fetch records that have <code>editor_uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchRangeOfEditorUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Webhook.WEBHOOK.EDITOR_UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>editor_uuid IN (values)</code>
     */
    public List<io.metaloom.loom.db.jooq.tables.pojos.Webhook> fetchByEditorUuid(UUID... values) {
        return fetch(Webhook.WEBHOOK.EDITOR_UUID, values);
    }
}
