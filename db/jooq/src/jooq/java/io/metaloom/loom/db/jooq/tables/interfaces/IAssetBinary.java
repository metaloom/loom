/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.util.UUID;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This table stores the immutable asset information
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IAssetBinary extends VertxPojo, Serializable {

    /**
     * Setter for <code>public.asset_binary.uuid</code>.
     */
    public IAssetBinary setUuid(UUID value);

    /**
     * Getter for <code>public.asset_binary.uuid</code>.
     */
    public UUID getUuid();

    /**
     * Setter for <code>public.asset_binary.sha512sum</code>.
     */
    public IAssetBinary setSha512sum(String value);

    /**
     * Getter for <code>public.asset_binary.sha512sum</code>.
     */
    public String getSha512sum();

    /**
     * Setter for <code>public.asset_binary.size</code>.
     */
    public IAssetBinary setSize(Integer value);

    /**
     * Getter for <code>public.asset_binary.size</code>.
     */
    public Integer getSize();

    /**
     * Setter for <code>public.asset_binary.sha256sum</code>.
     */
    public IAssetBinary setSha256sum(String value);

    /**
     * Getter for <code>public.asset_binary.sha256sum</code>.
     */
    public String getSha256sum();

    /**
     * Setter for <code>public.asset_binary.md5sum</code>.
     */
    public IAssetBinary setMd5sum(String value);

    /**
     * Getter for <code>public.asset_binary.md5sum</code>.
     */
    public String getMd5sum();

    /**
     * Setter for <code>public.asset_binary.media_width</code>. Only set for images
     */
    public IAssetBinary setMediaWidth(Integer value);

    /**
     * Getter for <code>public.asset_binary.media_width</code>. Only set for images
     */
    public Integer getMediaWidth();

    /**
     * Setter for <code>public.asset_binary.media_height</code>. Only set for images
     */
    public IAssetBinary setMediaHeight(Integer value);

    /**
     * Getter for <code>public.asset_binary.media_height</code>. Only set for images
     */
    public Integer getMediaHeight();

    /**
     * Setter for <code>public.asset_binary.fingerprint</code>. Media fingerprint information
     */
    public IAssetBinary setFingerprint(String value);

    /**
     * Getter for <code>public.asset_binary.fingerprint</code>. Media fingerprint information
     */
    public String getFingerprint();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IAssetBinary
     */
    public void from(IAssetBinary from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IAssetBinary
     */
    public <E extends IAssetBinary> E into(E into);

        @Override
        public default IAssetBinary fromJson(io.vertx.core.json.JsonObject json) {
                // Omitting unrecognized type java.util.UUID for column uuid!
                setOrThrow(this::setSha512sum,json::getString,"sha512sum","java.lang.String");
                setOrThrow(this::setSize,json::getInteger,"size","java.lang.Integer");
                setOrThrow(this::setSha256sum,json::getString,"sha256sum","java.lang.String");
                setOrThrow(this::setMd5sum,json::getString,"md5sum","java.lang.String");
                setOrThrow(this::setMediaWidth,json::getInteger,"media_width","java.lang.Integer");
                setOrThrow(this::setMediaHeight,json::getInteger,"media_height","java.lang.Integer");
                setOrThrow(this::setFingerprint,json::getString,"fingerprint","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                // Omitting unrecognized type java.util.UUID for column uuid!
                json.put("sha512sum",getSha512sum());
                json.put("size",getSize());
                json.put("sha256sum",getSha256sum());
                json.put("md5sum",getMd5sum());
                json.put("media_width",getMediaWidth());
                json.put("media_height",getMediaHeight());
                json.put("fingerprint",getFingerprint());
                return json;
        }

}
