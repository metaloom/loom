/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.metaloom.loom.db.jooq.enums.LoomExtensionType;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * Table which lists the registered extensions
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IExtension extends VertxPojo, Serializable {

    /**
     * Setter for <code>public.extension.uuid</code>.
     */
    public IExtension setUuid(UUID value);

    /**
     * Getter for <code>public.extension.uuid</code>.
     */
    public UUID getUuid();

    /**
     * Setter for <code>public.extension.url</code>.
     */
    public IExtension setUrl(String value);

    /**
     * Getter for <code>public.extension.url</code>.
     */
    public String getUrl();

    /**
     * Setter for <code>public.extension.kind</code>. Defines the type of the extension service
     */
    public IExtension setKind(LoomExtensionType value);

    /**
     * Getter for <code>public.extension.kind</code>. Defines the type of the extension service
     */
    public LoomExtensionType getKind();

    /**
     * Setter for <code>public.extension.status</code>.
     */
    public IExtension setStatus(String value);

    /**
     * Getter for <code>public.extension.status</code>.
     */
    public String getStatus();

    /**
     * Setter for <code>public.extension.meta</code>. Custom meta properties to the element
     */
    public IExtension setMeta(String value);

    /**
     * Getter for <code>public.extension.meta</code>. Custom meta properties to the element
     */
    public String getMeta();

    /**
     * Setter for <code>public.extension.created</code>.
     */
    public IExtension setCreated(LocalDateTime value);

    /**
     * Getter for <code>public.extension.created</code>.
     */
    public LocalDateTime getCreated();

    /**
     * Setter for <code>public.extension.creator_uuid</code>.
     */
    public IExtension setCreatorUuid(UUID value);

    /**
     * Getter for <code>public.extension.creator_uuid</code>.
     */
    public UUID getCreatorUuid();

    /**
     * Setter for <code>public.extension.edited</code>.
     */
    public IExtension setEdited(LocalDateTime value);

    /**
     * Getter for <code>public.extension.edited</code>.
     */
    public LocalDateTime getEdited();

    /**
     * Setter for <code>public.extension.editor_uuid</code>.
     */
    public IExtension setEditorUuid(UUID value);

    /**
     * Getter for <code>public.extension.editor_uuid</code>.
     */
    public UUID getEditorUuid();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IExtension
     */
    public void from(IExtension from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IExtension
     */
    public <E extends IExtension> E into(E into);

        @Override
        public default IExtension fromJson(io.vertx.core.json.JsonObject json) {
                // Omitting unrecognized type java.util.UUID for column uuid!
                setOrThrow(this::setUrl,json::getString,"url","java.lang.String");
                setOrThrow(this::setKind,key -> java.util.Arrays.stream(io.metaloom.loom.db.jooq.enums.LoomExtensionType.values()).filter(td -> td.getLiteral().equals(json.getString(key))).findFirst().orElse(null),"kind","io.metaloom.loom.db.jooq.enums.LoomExtensionType");
                setOrThrow(this::setStatus,json::getString,"status","java.lang.String");
                setOrThrow(this::setMeta,json::getString,"meta","java.lang.String");
                setOrThrow(this::setCreated,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"created","java.time.LocalDateTime");
                // Omitting unrecognized type java.util.UUID for column creator_uuid!
                setOrThrow(this::setEdited,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"edited","java.time.LocalDateTime");
                // Omitting unrecognized type java.util.UUID for column editor_uuid!
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                // Omitting unrecognized type java.util.UUID for column uuid!
                json.put("url",getUrl());
                json.put("kind",getKind()==null?null:getKind().getLiteral());
                json.put("status",getStatus());
                json.put("meta",getMeta());
                json.put("created",getCreated()==null?null:getCreated().toString());
                // Omitting unrecognized type java.util.UUID for column creator_uuid!
                json.put("edited",getEdited()==null?null:getEdited().toString());
                // Omitting unrecognized type java.util.UUID for column editor_uuid!
                return json;
        }

}
