/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.util.UUID;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This table is mainly used to lookup foreign references to contents
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IFieldReference extends VertxPojo, Serializable {

    /**
     * Setter for <code>public.field_reference.source_uuid</code>.
     */
    public IFieldReference setSourceUuid(UUID value);

    /**
     * Getter for <code>public.field_reference.source_uuid</code>.
     */
    public UUID getSourceUuid();

    /**
     * Setter for <code>public.field_reference.target_uuid</code>.
     */
    public IFieldReference setTargetUuid(UUID value);

    /**
     * Getter for <code>public.field_reference.target_uuid</code>.
     */
    public UUID getTargetUuid();

    /**
     * Setter for <code>public.field_reference.field_name</code>. Name of the field in which the content reference was listed.
     */
    public IFieldReference setFieldName(String value);

    /**
     * Getter for <code>public.field_reference.field_name</code>. Name of the field in which the content reference was listed.
     */
    public String getFieldName();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IFieldReference
     */
    public void from(IFieldReference from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IFieldReference
     */
    public <E extends IFieldReference> E into(E into);

        @Override
        public default IFieldReference fromJson(io.vertx.core.json.JsonObject json) {
                // Omitting unrecognized type java.util.UUID for column source_uuid!
                // Omitting unrecognized type java.util.UUID for column target_uuid!
                setOrThrow(this::setFieldName,json::getString,"field_name","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                // Omitting unrecognized type java.util.UUID for column source_uuid!
                // Omitting unrecognized type java.util.UUID for column target_uuid!
                json.put("field_name",getFieldName());
                return json;
        }

}
