/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.metaloom.loom.db.jooq.tables.interfaces.IAssetBinary;

import java.util.UUID;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This table stores the immutable asset information
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssetBinary implements VertxPojo, IAssetBinary {

    private static final long serialVersionUID = 1L;

    private UUID    uuid;
    private String  sha512sum;
    private Integer size;
    private String  sha256sum;
    private String  md5sum;
    private Integer mediaWidth;
    private Integer mediaHeight;
    private String  fingerprint;

    public AssetBinary() {}

    public AssetBinary(IAssetBinary value) {
        this.uuid = value.getUuid();
        this.sha512sum = value.getSha512sum();
        this.size = value.getSize();
        this.sha256sum = value.getSha256sum();
        this.md5sum = value.getMd5sum();
        this.mediaWidth = value.getMediaWidth();
        this.mediaHeight = value.getMediaHeight();
        this.fingerprint = value.getFingerprint();
    }

    public AssetBinary(
        UUID    uuid,
        String  sha512sum,
        Integer size,
        String  sha256sum,
        String  md5sum,
        Integer mediaWidth,
        Integer mediaHeight,
        String  fingerprint
    ) {
        this.uuid = uuid;
        this.sha512sum = sha512sum;
        this.size = size;
        this.sha256sum = sha256sum;
        this.md5sum = md5sum;
        this.mediaWidth = mediaWidth;
        this.mediaHeight = mediaHeight;
        this.fingerprint = fingerprint;
    }

        public AssetBinary(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>public.asset_binary.uuid</code>.
     */
    @Override
    public UUID getUuid() {
        return this.uuid;
    }

    /**
     * Setter for <code>public.asset_binary.uuid</code>.
     */
    @Override
    public AssetBinary setUuid(UUID uuid) {
        this.uuid = uuid;
        return this;
    }

    /**
     * Getter for <code>public.asset_binary.sha512sum</code>.
     */
    @Override
    public String getSha512sum() {
        return this.sha512sum;
    }

    /**
     * Setter for <code>public.asset_binary.sha512sum</code>.
     */
    @Override
    public AssetBinary setSha512sum(String sha512sum) {
        this.sha512sum = sha512sum;
        return this;
    }

    /**
     * Getter for <code>public.asset_binary.size</code>.
     */
    @Override
    public Integer getSize() {
        return this.size;
    }

    /**
     * Setter for <code>public.asset_binary.size</code>.
     */
    @Override
    public AssetBinary setSize(Integer size) {
        this.size = size;
        return this;
    }

    /**
     * Getter for <code>public.asset_binary.sha256sum</code>.
     */
    @Override
    public String getSha256sum() {
        return this.sha256sum;
    }

    /**
     * Setter for <code>public.asset_binary.sha256sum</code>.
     */
    @Override
    public AssetBinary setSha256sum(String sha256sum) {
        this.sha256sum = sha256sum;
        return this;
    }

    /**
     * Getter for <code>public.asset_binary.md5sum</code>.
     */
    @Override
    public String getMd5sum() {
        return this.md5sum;
    }

    /**
     * Setter for <code>public.asset_binary.md5sum</code>.
     */
    @Override
    public AssetBinary setMd5sum(String md5sum) {
        this.md5sum = md5sum;
        return this;
    }

    /**
     * Getter for <code>public.asset_binary.media_width</code>. Only set for images
     */
    @Override
    public Integer getMediaWidth() {
        return this.mediaWidth;
    }

    /**
     * Setter for <code>public.asset_binary.media_width</code>. Only set for images
     */
    @Override
    public AssetBinary setMediaWidth(Integer mediaWidth) {
        this.mediaWidth = mediaWidth;
        return this;
    }

    /**
     * Getter for <code>public.asset_binary.media_height</code>. Only set for images
     */
    @Override
    public Integer getMediaHeight() {
        return this.mediaHeight;
    }

    /**
     * Setter for <code>public.asset_binary.media_height</code>. Only set for images
     */
    @Override
    public AssetBinary setMediaHeight(Integer mediaHeight) {
        this.mediaHeight = mediaHeight;
        return this;
    }

    /**
     * Getter for <code>public.asset_binary.fingerprint</code>. Media fingerprint information
     */
    @Override
    public String getFingerprint() {
        return this.fingerprint;
    }

    /**
     * Setter for <code>public.asset_binary.fingerprint</code>. Media fingerprint information
     */
    @Override
    public AssetBinary setFingerprint(String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AssetBinary (");

        sb.append(uuid);
        sb.append(", ").append(sha512sum);
        sb.append(", ").append(size);
        sb.append(", ").append(sha256sum);
        sb.append(", ").append(md5sum);
        sb.append(", ").append(mediaWidth);
        sb.append(", ").append(mediaHeight);
        sb.append(", ").append(fingerprint);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IAssetBinary from) {
        setUuid(from.getUuid());
        setSha512sum(from.getSha512sum());
        setSize(from.getSize());
        setSha256sum(from.getSha256sum());
        setMd5sum(from.getMd5sum());
        setMediaWidth(from.getMediaWidth());
        setMediaHeight(from.getMediaHeight());
        setFingerprint(from.getFingerprint());
    }

    @Override
    public <E extends IAssetBinary> E into(E into) {
        into.from(this);
        return into;
    }
}
