/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import java.io.Serializable;
import java.util.UUID;


/**
 * This table is mainly used to lookup foreign references to contents
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FieldReference implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID sourceUuid;
    private UUID targetUuid;
    private String fieldName;

    public FieldReference() {}

    public FieldReference(FieldReference value) {
        this.sourceUuid = value.sourceUuid;
        this.targetUuid = value.targetUuid;
        this.fieldName = value.fieldName;
    }

    public FieldReference(
        UUID sourceUuid,
        UUID targetUuid,
        String fieldName
    ) {
        this.sourceUuid = sourceUuid;
        this.targetUuid = targetUuid;
        this.fieldName = fieldName;
    }

    /**
     * Getter for <code>public.field_reference.source_uuid</code>.
     */
    public UUID getSourceUuid() {
        return this.sourceUuid;
    }

    /**
     * Setter for <code>public.field_reference.source_uuid</code>.
     */
    public void setSourceUuid(UUID sourceUuid) {
        this.sourceUuid = sourceUuid;
    }

    /**
     * Getter for <code>public.field_reference.target_uuid</code>.
     */
    public UUID getTargetUuid() {
        return this.targetUuid;
    }

    /**
     * Setter for <code>public.field_reference.target_uuid</code>.
     */
    public void setTargetUuid(UUID targetUuid) {
        this.targetUuid = targetUuid;
    }

    /**
     * Getter for <code>public.field_reference.field_name</code>. Name of the
     * field in which the content reference was listed.
     */
    public String getFieldName() {
        return this.fieldName;
    }

    /**
     * Setter for <code>public.field_reference.field_name</code>. Name of the
     * field in which the content reference was listed.
     */
    public void setFieldName(String fieldName) {
        this.fieldName = fieldName;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FieldReference other = (FieldReference) obj;
        if (this.sourceUuid == null) {
            if (other.sourceUuid != null)
                return false;
        }
        else if (!this.sourceUuid.equals(other.sourceUuid))
            return false;
        if (this.targetUuid == null) {
            if (other.targetUuid != null)
                return false;
        }
        else if (!this.targetUuid.equals(other.targetUuid))
            return false;
        if (this.fieldName == null) {
            if (other.fieldName != null)
                return false;
        }
        else if (!this.fieldName.equals(other.fieldName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.sourceUuid == null) ? 0 : this.sourceUuid.hashCode());
        result = prime * result + ((this.targetUuid == null) ? 0 : this.targetUuid.hashCode());
        result = prime * result + ((this.fieldName == null) ? 0 : this.fieldName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FieldReference (");

        sb.append(sourceUuid);
        sb.append(", ").append(targetUuid);
        sb.append(", ").append(fieldName);

        sb.append(")");
        return sb.toString();
    }
}
