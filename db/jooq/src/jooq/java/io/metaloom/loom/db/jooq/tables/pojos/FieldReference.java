/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.metaloom.loom.db.jooq.tables.interfaces.IFieldReference;

import java.util.UUID;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This table is mainly used to lookup foreign references to contents
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FieldReference implements VertxPojo, IFieldReference {

    private static final long serialVersionUID = 1L;

    private UUID   sourceUuid;
    private UUID   targetUuid;
    private String fieldName;

    public FieldReference() {}

    public FieldReference(IFieldReference value) {
        this.sourceUuid = value.getSourceUuid();
        this.targetUuid = value.getTargetUuid();
        this.fieldName = value.getFieldName();
    }

    public FieldReference(
        UUID   sourceUuid,
        UUID   targetUuid,
        String fieldName
    ) {
        this.sourceUuid = sourceUuid;
        this.targetUuid = targetUuid;
        this.fieldName = fieldName;
    }

        public FieldReference(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>public.field_reference.source_uuid</code>.
     */
    @Override
    public UUID getSourceUuid() {
        return this.sourceUuid;
    }

    /**
     * Setter for <code>public.field_reference.source_uuid</code>.
     */
    @Override
    public FieldReference setSourceUuid(UUID sourceUuid) {
        this.sourceUuid = sourceUuid;
        return this;
    }

    /**
     * Getter for <code>public.field_reference.target_uuid</code>.
     */
    @Override
    public UUID getTargetUuid() {
        return this.targetUuid;
    }

    /**
     * Setter for <code>public.field_reference.target_uuid</code>.
     */
    @Override
    public FieldReference setTargetUuid(UUID targetUuid) {
        this.targetUuid = targetUuid;
        return this;
    }

    /**
     * Getter for <code>public.field_reference.field_name</code>. Name of the field in which the content reference was listed.
     */
    @Override
    public String getFieldName() {
        return this.fieldName;
    }

    /**
     * Setter for <code>public.field_reference.field_name</code>. Name of the field in which the content reference was listed.
     */
    @Override
    public FieldReference setFieldName(String fieldName) {
        this.fieldName = fieldName;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FieldReference (");

        sb.append(sourceUuid);
        sb.append(", ").append(targetUuid);
        sb.append(", ").append(fieldName);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFieldReference from) {
        setSourceUuid(from.getSourceUuid());
        setTargetUuid(from.getTargetUuid());
        setFieldName(from.getFieldName());
    }

    @Override
    public <E extends IFieldReference> E into(E into) {
        into.from(this);
        return into;
    }
}
