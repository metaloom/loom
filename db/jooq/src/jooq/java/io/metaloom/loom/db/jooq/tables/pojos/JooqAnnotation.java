/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import io.metaloom.loom.db.jooq.enums.JooqAnnotationType;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.JSONB;


/**
 * This table contains asset annotation entries which can be used to create
 * chapters or sections to assign tasks to.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqAnnotation implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID uuid;
    private JooqAnnotationType type;
    private UUID assetUuid;
    private UUID creatorUuid;
    private LocalDateTime created;
    private String title;
    private String description;
    private Integer timeFrom;
    private Integer timeTo;
    private Integer areastartx;
    private Integer areastarty;
    private Integer areawidth;
    private Integer areaheight;
    private JSONB meta;
    private String thumbail;

    public JooqAnnotation() {}

    public JooqAnnotation(JooqAnnotation value) {
        this.uuid = value.uuid;
        this.type = value.type;
        this.assetUuid = value.assetUuid;
        this.creatorUuid = value.creatorUuid;
        this.created = value.created;
        this.title = value.title;
        this.description = value.description;
        this.timeFrom = value.timeFrom;
        this.timeTo = value.timeTo;
        this.areastartx = value.areastartx;
        this.areastarty = value.areastarty;
        this.areawidth = value.areawidth;
        this.areaheight = value.areaheight;
        this.meta = value.meta;
        this.thumbail = value.thumbail;
    }

    public JooqAnnotation(
        UUID uuid,
        JooqAnnotationType type,
        UUID assetUuid,
        UUID creatorUuid,
        LocalDateTime created,
        String title,
        String description,
        Integer timeFrom,
        Integer timeTo,
        Integer areastartx,
        Integer areastarty,
        Integer areawidth,
        Integer areaheight,
        JSONB meta,
        String thumbail
    ) {
        this.uuid = uuid;
        this.type = type;
        this.assetUuid = assetUuid;
        this.creatorUuid = creatorUuid;
        this.created = created;
        this.title = title;
        this.description = description;
        this.timeFrom = timeFrom;
        this.timeTo = timeTo;
        this.areastartx = areastartx;
        this.areastarty = areastarty;
        this.areawidth = areawidth;
        this.areaheight = areaheight;
        this.meta = meta;
        this.thumbail = thumbail;
    }

    /**
     * Getter for <code>public.annotation.uuid</code>.
     */
    public UUID getUuid() {
        return this.uuid;
    }

    /**
     * Setter for <code>public.annotation.uuid</code>.
     */
    public void setUuid(UUID uuid) {
        this.uuid = uuid;
    }

    /**
     * Getter for <code>public.annotation.type</code>.
     */
    public JooqAnnotationType getType() {
        return this.type;
    }

    /**
     * Setter for <code>public.annotation.type</code>.
     */
    public void setType(JooqAnnotationType type) {
        this.type = type;
    }

    /**
     * Getter for <code>public.annotation.asset_uuid</code>.
     */
    public UUID getAssetUuid() {
        return this.assetUuid;
    }

    /**
     * Setter for <code>public.annotation.asset_uuid</code>.
     */
    public void setAssetUuid(UUID assetUuid) {
        this.assetUuid = assetUuid;
    }

    /**
     * Getter for <code>public.annotation.creator_uuid</code>.
     */
    public UUID getCreatorUuid() {
        return this.creatorUuid;
    }

    /**
     * Setter for <code>public.annotation.creator_uuid</code>.
     */
    public void setCreatorUuid(UUID creatorUuid) {
        this.creatorUuid = creatorUuid;
    }

    /**
     * Getter for <code>public.annotation.created</code>. Creation timestamp
     */
    public LocalDateTime getCreated() {
        return this.created;
    }

    /**
     * Setter for <code>public.annotation.created</code>. Creation timestamp
     */
    public void setCreated(LocalDateTime created) {
        this.created = created;
    }

    /**
     * Getter for <code>public.annotation.title</code>.
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Setter for <code>public.annotation.title</code>.
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for <code>public.annotation.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>public.annotation.description</code>.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>public.annotation.time_from</code>.
     */
    public Integer getTimeFrom() {
        return this.timeFrom;
    }

    /**
     * Setter for <code>public.annotation.time_from</code>.
     */
    public void setTimeFrom(Integer timeFrom) {
        this.timeFrom = timeFrom;
    }

    /**
     * Getter for <code>public.annotation.time_to</code>.
     */
    public Integer getTimeTo() {
        return this.timeTo;
    }

    /**
     * Setter for <code>public.annotation.time_to</code>.
     */
    public void setTimeTo(Integer timeTo) {
        this.timeTo = timeTo;
    }

    /**
     * Getter for <code>public.annotation.areaStartX</code>.
     */
    public Integer getAreastartx() {
        return this.areastartx;
    }

    /**
     * Setter for <code>public.annotation.areaStartX</code>.
     */
    public void setAreastartx(Integer areastartx) {
        this.areastartx = areastartx;
    }

    /**
     * Getter for <code>public.annotation.areaStartY</code>.
     */
    public Integer getAreastarty() {
        return this.areastarty;
    }

    /**
     * Setter for <code>public.annotation.areaStartY</code>.
     */
    public void setAreastarty(Integer areastarty) {
        this.areastarty = areastarty;
    }

    /**
     * Getter for <code>public.annotation.areaWidth</code>.
     */
    public Integer getAreawidth() {
        return this.areawidth;
    }

    /**
     * Setter for <code>public.annotation.areaWidth</code>.
     */
    public void setAreawidth(Integer areawidth) {
        this.areawidth = areawidth;
    }

    /**
     * Getter for <code>public.annotation.areaHeight</code>.
     */
    public Integer getAreaheight() {
        return this.areaheight;
    }

    /**
     * Setter for <code>public.annotation.areaHeight</code>.
     */
    public void setAreaheight(Integer areaheight) {
        this.areaheight = areaheight;
    }

    /**
     * Getter for <code>public.annotation.meta</code>. Custom meta properties
     */
    public JSONB getMeta() {
        return this.meta;
    }

    /**
     * Setter for <code>public.annotation.meta</code>. Custom meta properties
     */
    public void setMeta(JSONB meta) {
        this.meta = meta;
    }

    /**
     * Getter for <code>public.annotation.thumbail</code>. Reference to the
     * thumbnail that depics the annotated element/area
     */
    public String getThumbail() {
        return this.thumbail;
    }

    /**
     * Setter for <code>public.annotation.thumbail</code>. Reference to the
     * thumbnail that depics the annotated element/area
     */
    public void setThumbail(String thumbail) {
        this.thumbail = thumbail;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JooqAnnotation other = (JooqAnnotation) obj;
        if (this.uuid == null) {
            if (other.uuid != null)
                return false;
        }
        else if (!this.uuid.equals(other.uuid))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        if (this.assetUuid == null) {
            if (other.assetUuid != null)
                return false;
        }
        else if (!this.assetUuid.equals(other.assetUuid))
            return false;
        if (this.creatorUuid == null) {
            if (other.creatorUuid != null)
                return false;
        }
        else if (!this.creatorUuid.equals(other.creatorUuid))
            return false;
        if (this.created == null) {
            if (other.created != null)
                return false;
        }
        else if (!this.created.equals(other.created))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.timeFrom == null) {
            if (other.timeFrom != null)
                return false;
        }
        else if (!this.timeFrom.equals(other.timeFrom))
            return false;
        if (this.timeTo == null) {
            if (other.timeTo != null)
                return false;
        }
        else if (!this.timeTo.equals(other.timeTo))
            return false;
        if (this.areastartx == null) {
            if (other.areastartx != null)
                return false;
        }
        else if (!this.areastartx.equals(other.areastartx))
            return false;
        if (this.areastarty == null) {
            if (other.areastarty != null)
                return false;
        }
        else if (!this.areastarty.equals(other.areastarty))
            return false;
        if (this.areawidth == null) {
            if (other.areawidth != null)
                return false;
        }
        else if (!this.areawidth.equals(other.areawidth))
            return false;
        if (this.areaheight == null) {
            if (other.areaheight != null)
                return false;
        }
        else if (!this.areaheight.equals(other.areaheight))
            return false;
        if (this.meta == null) {
            if (other.meta != null)
                return false;
        }
        else if (!this.meta.equals(other.meta))
            return false;
        if (this.thumbail == null) {
            if (other.thumbail != null)
                return false;
        }
        else if (!this.thumbail.equals(other.thumbail))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.uuid == null) ? 0 : this.uuid.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.assetUuid == null) ? 0 : this.assetUuid.hashCode());
        result = prime * result + ((this.creatorUuid == null) ? 0 : this.creatorUuid.hashCode());
        result = prime * result + ((this.created == null) ? 0 : this.created.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.timeFrom == null) ? 0 : this.timeFrom.hashCode());
        result = prime * result + ((this.timeTo == null) ? 0 : this.timeTo.hashCode());
        result = prime * result + ((this.areastartx == null) ? 0 : this.areastartx.hashCode());
        result = prime * result + ((this.areastarty == null) ? 0 : this.areastarty.hashCode());
        result = prime * result + ((this.areawidth == null) ? 0 : this.areawidth.hashCode());
        result = prime * result + ((this.areaheight == null) ? 0 : this.areaheight.hashCode());
        result = prime * result + ((this.meta == null) ? 0 : this.meta.hashCode());
        result = prime * result + ((this.thumbail == null) ? 0 : this.thumbail.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JooqAnnotation (");

        sb.append(uuid);
        sb.append(", ").append(type);
        sb.append(", ").append(assetUuid);
        sb.append(", ").append(creatorUuid);
        sb.append(", ").append(created);
        sb.append(", ").append(title);
        sb.append(", ").append(description);
        sb.append(", ").append(timeFrom);
        sb.append(", ").append(timeTo);
        sb.append(", ").append(areastartx);
        sb.append(", ").append(areastarty);
        sb.append(", ").append(areawidth);
        sb.append(", ").append(areaheight);
        sb.append(", ").append(meta);
        sb.append(", ").append(thumbail);

        sb.append(")");
        return sb.toString();
    }
}
