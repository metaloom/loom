/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * Assets keep track of media that has been found by the scanner. Multiple
 * assets may share the same binary thus the properties will be decoupled from
 * binary.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqAsset implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID uuid;
    private UUID binaryUuid;
    private String path;
    private Integer filekeyInode;
    private Integer filekeyStdev;
    private Integer filekeyEdateNano;
    private Integer filekeyEdate;
    private String meta;
    private String mimeType;
    private String license;
    private String state;
    private UUID lockedByUuid;
    private LocalDateTime created;
    private UUID creatorUuid;
    private LocalDateTime edited;
    private UUID editorUuid;

    public JooqAsset() {}

    public JooqAsset(JooqAsset value) {
        this.uuid = value.uuid;
        this.binaryUuid = value.binaryUuid;
        this.path = value.path;
        this.filekeyInode = value.filekeyInode;
        this.filekeyStdev = value.filekeyStdev;
        this.filekeyEdateNano = value.filekeyEdateNano;
        this.filekeyEdate = value.filekeyEdate;
        this.meta = value.meta;
        this.mimeType = value.mimeType;
        this.license = value.license;
        this.state = value.state;
        this.lockedByUuid = value.lockedByUuid;
        this.created = value.created;
        this.creatorUuid = value.creatorUuid;
        this.edited = value.edited;
        this.editorUuid = value.editorUuid;
    }

    public JooqAsset(
        UUID uuid,
        UUID binaryUuid,
        String path,
        Integer filekeyInode,
        Integer filekeyStdev,
        Integer filekeyEdateNano,
        Integer filekeyEdate,
        String meta,
        String mimeType,
        String license,
        String state,
        UUID lockedByUuid,
        LocalDateTime created,
        UUID creatorUuid,
        LocalDateTime edited,
        UUID editorUuid
    ) {
        this.uuid = uuid;
        this.binaryUuid = binaryUuid;
        this.path = path;
        this.filekeyInode = filekeyInode;
        this.filekeyStdev = filekeyStdev;
        this.filekeyEdateNano = filekeyEdateNano;
        this.filekeyEdate = filekeyEdate;
        this.meta = meta;
        this.mimeType = mimeType;
        this.license = license;
        this.state = state;
        this.lockedByUuid = lockedByUuid;
        this.created = created;
        this.creatorUuid = creatorUuid;
        this.edited = edited;
        this.editorUuid = editorUuid;
    }

    /**
     * Getter for <code>public.asset.uuid</code>.
     */
    public UUID getUuid() {
        return this.uuid;
    }

    /**
     * Setter for <code>public.asset.uuid</code>.
     */
    public void setUuid(UUID uuid) {
        this.uuid = uuid;
    }

    /**
     * Getter for <code>public.asset.binary_uuid</code>. Reference to the media
     * binary that contains the actual data for the asset.
     */
    public UUID getBinaryUuid() {
        return this.binaryUuid;
    }

    /**
     * Setter for <code>public.asset.binary_uuid</code>. Reference to the media
     * binary that contains the actual data for the asset.
     */
    public void setBinaryUuid(UUID binaryUuid) {
        this.binaryUuid = binaryUuid;
    }

    /**
     * Getter for <code>public.asset.path</code>. Currently known path to the
     * asset in the filesystem
     */
    public String getPath() {
        return this.path;
    }

    /**
     * Setter for <code>public.asset.path</code>. Currently known path to the
     * asset in the filesystem
     */
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * Getter for <code>public.asset.filekey_inode</code>.
     */
    public Integer getFilekeyInode() {
        return this.filekeyInode;
    }

    /**
     * Setter for <code>public.asset.filekey_inode</code>.
     */
    public void setFilekeyInode(Integer filekeyInode) {
        this.filekeyInode = filekeyInode;
    }

    /**
     * Getter for <code>public.asset.filekey_stdev</code>.
     */
    public Integer getFilekeyStdev() {
        return this.filekeyStdev;
    }

    /**
     * Setter for <code>public.asset.filekey_stdev</code>.
     */
    public void setFilekeyStdev(Integer filekeyStdev) {
        this.filekeyStdev = filekeyStdev;
    }

    /**
     * Getter for <code>public.asset.filekey_edate_nano</code>.
     */
    public Integer getFilekeyEdateNano() {
        return this.filekeyEdateNano;
    }

    /**
     * Setter for <code>public.asset.filekey_edate_nano</code>.
     */
    public void setFilekeyEdateNano(Integer filekeyEdateNano) {
        this.filekeyEdateNano = filekeyEdateNano;
    }

    /**
     * Getter for <code>public.asset.filekey_edate</code>.
     */
    public Integer getFilekeyEdate() {
        return this.filekeyEdate;
    }

    /**
     * Setter for <code>public.asset.filekey_edate</code>.
     */
    public void setFilekeyEdate(Integer filekeyEdate) {
        this.filekeyEdate = filekeyEdate;
    }

    /**
     * Getter for <code>public.asset.meta</code>. Custom meta properties to the
     * asset
     */
    public String getMeta() {
        return this.meta;
    }

    /**
     * Setter for <code>public.asset.meta</code>. Custom meta properties to the
     * asset
     */
    public void setMeta(String meta) {
        this.meta = meta;
    }

    /**
     * Getter for <code>public.asset.mime_type</code>.
     */
    public String getMimeType() {
        return this.mimeType;
    }

    /**
     * Setter for <code>public.asset.mime_type</code>.
     */
    public void setMimeType(String mimeType) {
        this.mimeType = mimeType;
    }

    /**
     * Getter for <code>public.asset.license</code>.
     */
    public String getLicense() {
        return this.license;
    }

    /**
     * Setter for <code>public.asset.license</code>.
     */
    public void setLicense(String license) {
        this.license = license;
    }

    /**
     * Getter for <code>public.asset.state</code>.
     */
    public String getState() {
        return this.state;
    }

    /**
     * Setter for <code>public.asset.state</code>.
     */
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for <code>public.asset.locked_by_uuid</code>.
     */
    public UUID getLockedByUuid() {
        return this.lockedByUuid;
    }

    /**
     * Setter for <code>public.asset.locked_by_uuid</code>.
     */
    public void setLockedByUuid(UUID lockedByUuid) {
        this.lockedByUuid = lockedByUuid;
    }

    /**
     * Getter for <code>public.asset.created</code>.
     */
    public LocalDateTime getCreated() {
        return this.created;
    }

    /**
     * Setter for <code>public.asset.created</code>.
     */
    public void setCreated(LocalDateTime created) {
        this.created = created;
    }

    /**
     * Getter for <code>public.asset.creator_uuid</code>.
     */
    public UUID getCreatorUuid() {
        return this.creatorUuid;
    }

    /**
     * Setter for <code>public.asset.creator_uuid</code>.
     */
    public void setCreatorUuid(UUID creatorUuid) {
        this.creatorUuid = creatorUuid;
    }

    /**
     * Getter for <code>public.asset.edited</code>.
     */
    public LocalDateTime getEdited() {
        return this.edited;
    }

    /**
     * Setter for <code>public.asset.edited</code>.
     */
    public void setEdited(LocalDateTime edited) {
        this.edited = edited;
    }

    /**
     * Getter for <code>public.asset.editor_uuid</code>.
     */
    public UUID getEditorUuid() {
        return this.editorUuid;
    }

    /**
     * Setter for <code>public.asset.editor_uuid</code>.
     */
    public void setEditorUuid(UUID editorUuid) {
        this.editorUuid = editorUuid;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JooqAsset other = (JooqAsset) obj;
        if (this.uuid == null) {
            if (other.uuid != null)
                return false;
        }
        else if (!this.uuid.equals(other.uuid))
            return false;
        if (this.binaryUuid == null) {
            if (other.binaryUuid != null)
                return false;
        }
        else if (!this.binaryUuid.equals(other.binaryUuid))
            return false;
        if (this.path == null) {
            if (other.path != null)
                return false;
        }
        else if (!this.path.equals(other.path))
            return false;
        if (this.filekeyInode == null) {
            if (other.filekeyInode != null)
                return false;
        }
        else if (!this.filekeyInode.equals(other.filekeyInode))
            return false;
        if (this.filekeyStdev == null) {
            if (other.filekeyStdev != null)
                return false;
        }
        else if (!this.filekeyStdev.equals(other.filekeyStdev))
            return false;
        if (this.filekeyEdateNano == null) {
            if (other.filekeyEdateNano != null)
                return false;
        }
        else if (!this.filekeyEdateNano.equals(other.filekeyEdateNano))
            return false;
        if (this.filekeyEdate == null) {
            if (other.filekeyEdate != null)
                return false;
        }
        else if (!this.filekeyEdate.equals(other.filekeyEdate))
            return false;
        if (this.meta == null) {
            if (other.meta != null)
                return false;
        }
        else if (!this.meta.equals(other.meta))
            return false;
        if (this.mimeType == null) {
            if (other.mimeType != null)
                return false;
        }
        else if (!this.mimeType.equals(other.mimeType))
            return false;
        if (this.license == null) {
            if (other.license != null)
                return false;
        }
        else if (!this.license.equals(other.license))
            return false;
        if (this.state == null) {
            if (other.state != null)
                return false;
        }
        else if (!this.state.equals(other.state))
            return false;
        if (this.lockedByUuid == null) {
            if (other.lockedByUuid != null)
                return false;
        }
        else if (!this.lockedByUuid.equals(other.lockedByUuid))
            return false;
        if (this.created == null) {
            if (other.created != null)
                return false;
        }
        else if (!this.created.equals(other.created))
            return false;
        if (this.creatorUuid == null) {
            if (other.creatorUuid != null)
                return false;
        }
        else if (!this.creatorUuid.equals(other.creatorUuid))
            return false;
        if (this.edited == null) {
            if (other.edited != null)
                return false;
        }
        else if (!this.edited.equals(other.edited))
            return false;
        if (this.editorUuid == null) {
            if (other.editorUuid != null)
                return false;
        }
        else if (!this.editorUuid.equals(other.editorUuid))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.uuid == null) ? 0 : this.uuid.hashCode());
        result = prime * result + ((this.binaryUuid == null) ? 0 : this.binaryUuid.hashCode());
        result = prime * result + ((this.path == null) ? 0 : this.path.hashCode());
        result = prime * result + ((this.filekeyInode == null) ? 0 : this.filekeyInode.hashCode());
        result = prime * result + ((this.filekeyStdev == null) ? 0 : this.filekeyStdev.hashCode());
        result = prime * result + ((this.filekeyEdateNano == null) ? 0 : this.filekeyEdateNano.hashCode());
        result = prime * result + ((this.filekeyEdate == null) ? 0 : this.filekeyEdate.hashCode());
        result = prime * result + ((this.meta == null) ? 0 : this.meta.hashCode());
        result = prime * result + ((this.mimeType == null) ? 0 : this.mimeType.hashCode());
        result = prime * result + ((this.license == null) ? 0 : this.license.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.lockedByUuid == null) ? 0 : this.lockedByUuid.hashCode());
        result = prime * result + ((this.created == null) ? 0 : this.created.hashCode());
        result = prime * result + ((this.creatorUuid == null) ? 0 : this.creatorUuid.hashCode());
        result = prime * result + ((this.edited == null) ? 0 : this.edited.hashCode());
        result = prime * result + ((this.editorUuid == null) ? 0 : this.editorUuid.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JooqAsset (");

        sb.append(uuid);
        sb.append(", ").append(binaryUuid);
        sb.append(", ").append(path);
        sb.append(", ").append(filekeyInode);
        sb.append(", ").append(filekeyStdev);
        sb.append(", ").append(filekeyEdateNano);
        sb.append(", ").append(filekeyEdate);
        sb.append(", ").append(meta);
        sb.append(", ").append(mimeType);
        sb.append(", ").append(license);
        sb.append(", ").append(state);
        sb.append(", ").append(lockedByUuid);
        sb.append(", ").append(created);
        sb.append(", ").append(creatorUuid);
        sb.append(", ").append(edited);
        sb.append(", ").append(editorUuid);

        sb.append(")");
        return sb.toString();
    }
}
