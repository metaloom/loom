/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import java.io.Serializable;
import java.util.UUID;


/**
 * Stores comments on tasks, annotations..
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqComment implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID uuid;
    private String title;
    private String content;
    private UUID userUuid;
    private String created;
    private String edited;
    private UUID parentUuid;

    public JooqComment() {}

    public JooqComment(JooqComment value) {
        this.uuid = value.uuid;
        this.title = value.title;
        this.content = value.content;
        this.userUuid = value.userUuid;
        this.created = value.created;
        this.edited = value.edited;
        this.parentUuid = value.parentUuid;
    }

    public JooqComment(
        UUID uuid,
        String title,
        String content,
        UUID userUuid,
        String created,
        String edited,
        UUID parentUuid
    ) {
        this.uuid = uuid;
        this.title = title;
        this.content = content;
        this.userUuid = userUuid;
        this.created = created;
        this.edited = edited;
        this.parentUuid = parentUuid;
    }

    /**
     * Getter for <code>public.comment.uuid</code>.
     */
    public UUID getUuid() {
        return this.uuid;
    }

    /**
     * Setter for <code>public.comment.uuid</code>.
     */
    public void setUuid(UUID uuid) {
        this.uuid = uuid;
    }

    /**
     * Getter for <code>public.comment.title</code>. Comment title
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Setter for <code>public.comment.title</code>. Comment title
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for <code>public.comment.content</code>. Comment text
     */
    public String getContent() {
        return this.content;
    }

    /**
     * Setter for <code>public.comment.content</code>. Comment text
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * Getter for <code>public.comment.user_uuid</code>.
     */
    public UUID getUserUuid() {
        return this.userUuid;
    }

    /**
     * Setter for <code>public.comment.user_uuid</code>.
     */
    public void setUserUuid(UUID userUuid) {
        this.userUuid = userUuid;
    }

    /**
     * Getter for <code>public.comment.created</code>. Creation timestamp
     */
    public String getCreated() {
        return this.created;
    }

    /**
     * Setter for <code>public.comment.created</code>. Creation timestamp
     */
    public void setCreated(String created) {
        this.created = created;
    }

    /**
     * Getter for <code>public.comment.edited</code>. Edit timestamp
     */
    public String getEdited() {
        return this.edited;
    }

    /**
     * Setter for <code>public.comment.edited</code>. Edit timestamp
     */
    public void setEdited(String edited) {
        this.edited = edited;
    }

    /**
     * Getter for <code>public.comment.parent_uuid</code>.
     */
    public UUID getParentUuid() {
        return this.parentUuid;
    }

    /**
     * Setter for <code>public.comment.parent_uuid</code>.
     */
    public void setParentUuid(UUID parentUuid) {
        this.parentUuid = parentUuid;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JooqComment other = (JooqComment) obj;
        if (this.uuid == null) {
            if (other.uuid != null)
                return false;
        }
        else if (!this.uuid.equals(other.uuid))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.content == null) {
            if (other.content != null)
                return false;
        }
        else if (!this.content.equals(other.content))
            return false;
        if (this.userUuid == null) {
            if (other.userUuid != null)
                return false;
        }
        else if (!this.userUuid.equals(other.userUuid))
            return false;
        if (this.created == null) {
            if (other.created != null)
                return false;
        }
        else if (!this.created.equals(other.created))
            return false;
        if (this.edited == null) {
            if (other.edited != null)
                return false;
        }
        else if (!this.edited.equals(other.edited))
            return false;
        if (this.parentUuid == null) {
            if (other.parentUuid != null)
                return false;
        }
        else if (!this.parentUuid.equals(other.parentUuid))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.uuid == null) ? 0 : this.uuid.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.content == null) ? 0 : this.content.hashCode());
        result = prime * result + ((this.userUuid == null) ? 0 : this.userUuid.hashCode());
        result = prime * result + ((this.created == null) ? 0 : this.created.hashCode());
        result = prime * result + ((this.edited == null) ? 0 : this.edited.hashCode());
        result = prime * result + ((this.parentUuid == null) ? 0 : this.parentUuid.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JooqComment (");

        sb.append(uuid);
        sb.append(", ").append(title);
        sb.append(", ").append(content);
        sb.append(", ").append(userUuid);
        sb.append(", ").append(created);
        sb.append(", ").append(edited);
        sb.append(", ").append(parentUuid);

        sb.append(")");
        return sb.toString();
    }
}
