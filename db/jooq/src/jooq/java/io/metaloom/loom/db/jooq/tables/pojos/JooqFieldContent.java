/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import io.metaloom.loom.db.jooq.enums.LoomContentType;

import java.io.Serializable;
import java.util.UUID;


/**
 * Crosstable that tracks all fields for a content
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqFieldContent implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID fieldsUuid;
    private UUID contentUuid;
    private String webrootPathInfo;
    private LoomContentType contentType;

    public JooqFieldContent() {}

    public JooqFieldContent(JooqFieldContent value) {
        this.fieldsUuid = value.fieldsUuid;
        this.contentUuid = value.contentUuid;
        this.webrootPathInfo = value.webrootPathInfo;
        this.contentType = value.contentType;
    }

    public JooqFieldContent(
        UUID fieldsUuid,
        UUID contentUuid,
        String webrootPathInfo,
        LoomContentType contentType
    ) {
        this.fieldsUuid = fieldsUuid;
        this.contentUuid = contentUuid;
        this.webrootPathInfo = webrootPathInfo;
        this.contentType = contentType;
    }

    /**
     * Getter for <code>public.field_content.fields_uuid</code>.
     */
    public UUID getFieldsUuid() {
        return this.fieldsUuid;
    }

    /**
     * Setter for <code>public.field_content.fields_uuid</code>.
     */
    public void setFieldsUuid(UUID fieldsUuid) {
        this.fieldsUuid = fieldsUuid;
    }

    /**
     * Getter for <code>public.field_content.content_uuid</code>.
     */
    public UUID getContentUuid() {
        return this.contentUuid;
    }

    /**
     * Setter for <code>public.field_content.content_uuid</code>.
     */
    public void setContentUuid(UUID contentUuid) {
        this.contentUuid = contentUuid;
    }

    /**
     * Getter for <code>public.field_content.webroot_path_info</code>. prefixed
     * with branch
     */
    public String getWebrootPathInfo() {
        return this.webrootPathInfo;
    }

    /**
     * Setter for <code>public.field_content.webroot_path_info</code>. prefixed
     * with branch
     */
    public void setWebrootPathInfo(String webrootPathInfo) {
        this.webrootPathInfo = webrootPathInfo;
    }

    /**
     * Getter for <code>public.field_content.content_type</code>. D or P for
     * draft and published
     */
    public LoomContentType getContentType() {
        return this.contentType;
    }

    /**
     * Setter for <code>public.field_content.content_type</code>. D or P for
     * draft and published
     */
    public void setContentType(LoomContentType contentType) {
        this.contentType = contentType;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JooqFieldContent other = (JooqFieldContent) obj;
        if (this.fieldsUuid == null) {
            if (other.fieldsUuid != null)
                return false;
        }
        else if (!this.fieldsUuid.equals(other.fieldsUuid))
            return false;
        if (this.contentUuid == null) {
            if (other.contentUuid != null)
                return false;
        }
        else if (!this.contentUuid.equals(other.contentUuid))
            return false;
        if (this.webrootPathInfo == null) {
            if (other.webrootPathInfo != null)
                return false;
        }
        else if (!this.webrootPathInfo.equals(other.webrootPathInfo))
            return false;
        if (this.contentType == null) {
            if (other.contentType != null)
                return false;
        }
        else if (!this.contentType.equals(other.contentType))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.fieldsUuid == null) ? 0 : this.fieldsUuid.hashCode());
        result = prime * result + ((this.contentUuid == null) ? 0 : this.contentUuid.hashCode());
        result = prime * result + ((this.webrootPathInfo == null) ? 0 : this.webrootPathInfo.hashCode());
        result = prime * result + ((this.contentType == null) ? 0 : this.contentType.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JooqFieldContent (");

        sb.append(fieldsUuid);
        sb.append(", ").append(contentUuid);
        sb.append(", ").append(webrootPathInfo);
        sb.append(", ").append(contentType);

        sb.append(")");
        return sb.toString();
    }
}
