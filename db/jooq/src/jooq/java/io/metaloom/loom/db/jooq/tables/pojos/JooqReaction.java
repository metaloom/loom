/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.JSONB;


/**
 * Stores social reactions on multiple elements
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqReaction implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID uuid;
    private String type;
    private Integer rating;
    private JSONB meta;
    private LocalDateTime created;
    private UUID creatorUuid;
    private LocalDateTime edited;
    private UUID editorUuid;
    private UUID assetUuid;
    private UUID commentUuid;
    private UUID annotationUuid;

    public JooqReaction() {}

    public JooqReaction(JooqReaction value) {
        this.uuid = value.uuid;
        this.type = value.type;
        this.rating = value.rating;
        this.meta = value.meta;
        this.created = value.created;
        this.creatorUuid = value.creatorUuid;
        this.edited = value.edited;
        this.editorUuid = value.editorUuid;
        this.assetUuid = value.assetUuid;
        this.commentUuid = value.commentUuid;
        this.annotationUuid = value.annotationUuid;
    }

    public JooqReaction(
        UUID uuid,
        String type,
        Integer rating,
        JSONB meta,
        LocalDateTime created,
        UUID creatorUuid,
        LocalDateTime edited,
        UUID editorUuid,
        UUID assetUuid,
        UUID commentUuid,
        UUID annotationUuid
    ) {
        this.uuid = uuid;
        this.type = type;
        this.rating = rating;
        this.meta = meta;
        this.created = created;
        this.creatorUuid = creatorUuid;
        this.edited = edited;
        this.editorUuid = editorUuid;
        this.assetUuid = assetUuid;
        this.commentUuid = commentUuid;
        this.annotationUuid = annotationUuid;
    }

    /**
     * Getter for <code>public.reaction.uuid</code>.
     */
    public UUID getUuid() {
        return this.uuid;
    }

    /**
     * Setter for <code>public.reaction.uuid</code>.
     */
    public void setUuid(UUID uuid) {
        this.uuid = uuid;
    }

    /**
     * Getter for <code>public.reaction.type</code>. Type of the reaction (e.g.
     * thumbsup)
     */
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>public.reaction.type</code>. Type of the reaction (e.g.
     * thumbsup)
     */
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for <code>public.reaction.rating</code>. Rating by the user
     */
    public Integer getRating() {
        return this.rating;
    }

    /**
     * Setter for <code>public.reaction.rating</code>. Rating by the user
     */
    public void setRating(Integer rating) {
        this.rating = rating;
    }

    /**
     * Getter for <code>public.reaction.meta</code>. Custom meta properties to
     * the reaction.
     */
    public JSONB getMeta() {
        return this.meta;
    }

    /**
     * Setter for <code>public.reaction.meta</code>. Custom meta properties to
     * the reaction.
     */
    public void setMeta(JSONB meta) {
        this.meta = meta;
    }

    /**
     * Getter for <code>public.reaction.created</code>. Creation timestamp
     */
    public LocalDateTime getCreated() {
        return this.created;
    }

    /**
     * Setter for <code>public.reaction.created</code>. Creation timestamp
     */
    public void setCreated(LocalDateTime created) {
        this.created = created;
    }

    /**
     * Getter for <code>public.reaction.creator_uuid</code>. Creator of the
     * reaction
     */
    public UUID getCreatorUuid() {
        return this.creatorUuid;
    }

    /**
     * Setter for <code>public.reaction.creator_uuid</code>. Creator of the
     * reaction
     */
    public void setCreatorUuid(UUID creatorUuid) {
        this.creatorUuid = creatorUuid;
    }

    /**
     * Getter for <code>public.reaction.edited</code>.
     */
    public LocalDateTime getEdited() {
        return this.edited;
    }

    /**
     * Setter for <code>public.reaction.edited</code>.
     */
    public void setEdited(LocalDateTime edited) {
        this.edited = edited;
    }

    /**
     * Getter for <code>public.reaction.editor_uuid</code>.
     */
    public UUID getEditorUuid() {
        return this.editorUuid;
    }

    /**
     * Setter for <code>public.reaction.editor_uuid</code>.
     */
    public void setEditorUuid(UUID editorUuid) {
        this.editorUuid = editorUuid;
    }

    /**
     * Getter for <code>public.reaction.asset_uuid</code>.
     */
    public UUID getAssetUuid() {
        return this.assetUuid;
    }

    /**
     * Setter for <code>public.reaction.asset_uuid</code>.
     */
    public void setAssetUuid(UUID assetUuid) {
        this.assetUuid = assetUuid;
    }

    /**
     * Getter for <code>public.reaction.comment_uuid</code>.
     */
    public UUID getCommentUuid() {
        return this.commentUuid;
    }

    /**
     * Setter for <code>public.reaction.comment_uuid</code>.
     */
    public void setCommentUuid(UUID commentUuid) {
        this.commentUuid = commentUuid;
    }

    /**
     * Getter for <code>public.reaction.annotation_uuid</code>.
     */
    public UUID getAnnotationUuid() {
        return this.annotationUuid;
    }

    /**
     * Setter for <code>public.reaction.annotation_uuid</code>.
     */
    public void setAnnotationUuid(UUID annotationUuid) {
        this.annotationUuid = annotationUuid;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JooqReaction other = (JooqReaction) obj;
        if (this.uuid == null) {
            if (other.uuid != null)
                return false;
        }
        else if (!this.uuid.equals(other.uuid))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        if (this.rating == null) {
            if (other.rating != null)
                return false;
        }
        else if (!this.rating.equals(other.rating))
            return false;
        if (this.meta == null) {
            if (other.meta != null)
                return false;
        }
        else if (!this.meta.equals(other.meta))
            return false;
        if (this.created == null) {
            if (other.created != null)
                return false;
        }
        else if (!this.created.equals(other.created))
            return false;
        if (this.creatorUuid == null) {
            if (other.creatorUuid != null)
                return false;
        }
        else if (!this.creatorUuid.equals(other.creatorUuid))
            return false;
        if (this.edited == null) {
            if (other.edited != null)
                return false;
        }
        else if (!this.edited.equals(other.edited))
            return false;
        if (this.editorUuid == null) {
            if (other.editorUuid != null)
                return false;
        }
        else if (!this.editorUuid.equals(other.editorUuid))
            return false;
        if (this.assetUuid == null) {
            if (other.assetUuid != null)
                return false;
        }
        else if (!this.assetUuid.equals(other.assetUuid))
            return false;
        if (this.commentUuid == null) {
            if (other.commentUuid != null)
                return false;
        }
        else if (!this.commentUuid.equals(other.commentUuid))
            return false;
        if (this.annotationUuid == null) {
            if (other.annotationUuid != null)
                return false;
        }
        else if (!this.annotationUuid.equals(other.annotationUuid))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.uuid == null) ? 0 : this.uuid.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.rating == null) ? 0 : this.rating.hashCode());
        result = prime * result + ((this.meta == null) ? 0 : this.meta.hashCode());
        result = prime * result + ((this.created == null) ? 0 : this.created.hashCode());
        result = prime * result + ((this.creatorUuid == null) ? 0 : this.creatorUuid.hashCode());
        result = prime * result + ((this.edited == null) ? 0 : this.edited.hashCode());
        result = prime * result + ((this.editorUuid == null) ? 0 : this.editorUuid.hashCode());
        result = prime * result + ((this.assetUuid == null) ? 0 : this.assetUuid.hashCode());
        result = prime * result + ((this.commentUuid == null) ? 0 : this.commentUuid.hashCode());
        result = prime * result + ((this.annotationUuid == null) ? 0 : this.annotationUuid.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JooqReaction (");

        sb.append(uuid);
        sb.append(", ").append(type);
        sb.append(", ").append(rating);
        sb.append(", ").append(meta);
        sb.append(", ").append(created);
        sb.append(", ").append(creatorUuid);
        sb.append(", ").append(edited);
        sb.append(", ").append(editorUuid);
        sb.append(", ").append(assetUuid);
        sb.append(", ").append(commentUuid);
        sb.append(", ").append(annotationUuid);

        sb.append(")");
        return sb.toString();
    }
}
