/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import io.metaloom.loom.db.jooq.enums.JooqTaskStatus;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqTask implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID uuid;
    private String title;
    private String content;
    private LocalDateTime dueDate;
    private JooqTaskStatus status;
    private Integer priority;
    private LocalDateTime created;
    private UUID creatorUuid;
    private LocalDateTime edited;
    private UUID editorUuid;

    public JooqTask() {}

    public JooqTask(JooqTask value) {
        this.uuid = value.uuid;
        this.title = value.title;
        this.content = value.content;
        this.dueDate = value.dueDate;
        this.status = value.status;
        this.priority = value.priority;
        this.created = value.created;
        this.creatorUuid = value.creatorUuid;
        this.edited = value.edited;
        this.editorUuid = value.editorUuid;
    }

    public JooqTask(
        UUID uuid,
        String title,
        String content,
        LocalDateTime dueDate,
        JooqTaskStatus status,
        Integer priority,
        LocalDateTime created,
        UUID creatorUuid,
        LocalDateTime edited,
        UUID editorUuid
    ) {
        this.uuid = uuid;
        this.title = title;
        this.content = content;
        this.dueDate = dueDate;
        this.status = status;
        this.priority = priority;
        this.created = created;
        this.creatorUuid = creatorUuid;
        this.edited = edited;
        this.editorUuid = editorUuid;
    }

    /**
     * Getter for <code>public.task.uuid</code>.
     */
    public UUID getUuid() {
        return this.uuid;
    }

    /**
     * Setter for <code>public.task.uuid</code>.
     */
    public void setUuid(UUID uuid) {
        this.uuid = uuid;
    }

    /**
     * Getter for <code>public.task.title</code>. Title of the task
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Setter for <code>public.task.title</code>. Title of the task
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for <code>public.task.content</code>. Description of the task
     */
    public String getContent() {
        return this.content;
    }

    /**
     * Setter for <code>public.task.content</code>. Description of the task
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * Getter for <code>public.task.due_date</code>.
     */
    public LocalDateTime getDueDate() {
        return this.dueDate;
    }

    /**
     * Setter for <code>public.task.due_date</code>.
     */
    public void setDueDate(LocalDateTime dueDate) {
        this.dueDate = dueDate;
    }

    /**
     * Getter for <code>public.task.status</code>. Current status of the task
     * (e.g. PENDING, REJECTED)
     */
    public JooqTaskStatus getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>public.task.status</code>. Current status of the task
     * (e.g. PENDING, REJECTED)
     */
    public void setStatus(JooqTaskStatus status) {
        this.status = status;
    }

    /**
     * Getter for <code>public.task.priority</code>.
     */
    public Integer getPriority() {
        return this.priority;
    }

    /**
     * Setter for <code>public.task.priority</code>.
     */
    public void setPriority(Integer priority) {
        this.priority = priority;
    }

    /**
     * Getter for <code>public.task.created</code>.
     */
    public LocalDateTime getCreated() {
        return this.created;
    }

    /**
     * Setter for <code>public.task.created</code>.
     */
    public void setCreated(LocalDateTime created) {
        this.created = created;
    }

    /**
     * Getter for <code>public.task.creator_uuid</code>.
     */
    public UUID getCreatorUuid() {
        return this.creatorUuid;
    }

    /**
     * Setter for <code>public.task.creator_uuid</code>.
     */
    public void setCreatorUuid(UUID creatorUuid) {
        this.creatorUuid = creatorUuid;
    }

    /**
     * Getter for <code>public.task.edited</code>.
     */
    public LocalDateTime getEdited() {
        return this.edited;
    }

    /**
     * Setter for <code>public.task.edited</code>.
     */
    public void setEdited(LocalDateTime edited) {
        this.edited = edited;
    }

    /**
     * Getter for <code>public.task.editor_uuid</code>.
     */
    public UUID getEditorUuid() {
        return this.editorUuid;
    }

    /**
     * Setter for <code>public.task.editor_uuid</code>.
     */
    public void setEditorUuid(UUID editorUuid) {
        this.editorUuid = editorUuid;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JooqTask other = (JooqTask) obj;
        if (this.uuid == null) {
            if (other.uuid != null)
                return false;
        }
        else if (!this.uuid.equals(other.uuid))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.content == null) {
            if (other.content != null)
                return false;
        }
        else if (!this.content.equals(other.content))
            return false;
        if (this.dueDate == null) {
            if (other.dueDate != null)
                return false;
        }
        else if (!this.dueDate.equals(other.dueDate))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.priority == null) {
            if (other.priority != null)
                return false;
        }
        else if (!this.priority.equals(other.priority))
            return false;
        if (this.created == null) {
            if (other.created != null)
                return false;
        }
        else if (!this.created.equals(other.created))
            return false;
        if (this.creatorUuid == null) {
            if (other.creatorUuid != null)
                return false;
        }
        else if (!this.creatorUuid.equals(other.creatorUuid))
            return false;
        if (this.edited == null) {
            if (other.edited != null)
                return false;
        }
        else if (!this.edited.equals(other.edited))
            return false;
        if (this.editorUuid == null) {
            if (other.editorUuid != null)
                return false;
        }
        else if (!this.editorUuid.equals(other.editorUuid))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.uuid == null) ? 0 : this.uuid.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.content == null) ? 0 : this.content.hashCode());
        result = prime * result + ((this.dueDate == null) ? 0 : this.dueDate.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.priority == null) ? 0 : this.priority.hashCode());
        result = prime * result + ((this.created == null) ? 0 : this.created.hashCode());
        result = prime * result + ((this.creatorUuid == null) ? 0 : this.creatorUuid.hashCode());
        result = prime * result + ((this.edited == null) ? 0 : this.edited.hashCode());
        result = prime * result + ((this.editorUuid == null) ? 0 : this.editorUuid.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JooqTask (");

        sb.append(uuid);
        sb.append(", ").append(title);
        sb.append(", ").append(content);
        sb.append(", ").append(dueDate);
        sb.append(", ").append(status);
        sb.append(", ").append(priority);
        sb.append(", ").append(created);
        sb.append(", ").append(creatorUuid);
        sb.append(", ").append(edited);
        sb.append(", ").append(editorUuid);

        sb.append(")");
        return sb.toString();
    }
}
