/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import java.io.Serializable;
import java.util.UUID;

import org.jooq.JSONB;


/**
 * This table stores the custom index definition that will be used when creating
 * custom indices in a vector database that list specific aspects of loom data.
 * 
 * A custom configuration may define that a specific meta property should be
 * added to the index when generating the vector.
 * This feature can be used to generate a custom recommendation feature by
 * including and ranking and encoding specific properties as vectors.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqVectorConfig implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID uuid;
    private String name;
    private JSONB weights;

    public JooqVectorConfig() {}

    public JooqVectorConfig(JooqVectorConfig value) {
        this.uuid = value.uuid;
        this.name = value.name;
        this.weights = value.weights;
    }

    public JooqVectorConfig(
        UUID uuid,
        String name,
        JSONB weights
    ) {
        this.uuid = uuid;
        this.name = name;
        this.weights = weights;
    }

    /**
     * Getter for <code>public.vector_config.uuid</code>.
     */
    public UUID getUuid() {
        return this.uuid;
    }

    /**
     * Setter for <code>public.vector_config.uuid</code>.
     */
    public void setUuid(UUID uuid) {
        this.uuid = uuid;
    }

    /**
     * Getter for <code>public.vector_config.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.vector_config.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.vector_config.weights</code>. Index definition
     * which lists the weights for each component that should be included in the
     * index
     */
    public JSONB getWeights() {
        return this.weights;
    }

    /**
     * Setter for <code>public.vector_config.weights</code>. Index definition
     * which lists the weights for each component that should be included in the
     * index
     */
    public void setWeights(JSONB weights) {
        this.weights = weights;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JooqVectorConfig other = (JooqVectorConfig) obj;
        if (this.uuid == null) {
            if (other.uuid != null)
                return false;
        }
        else if (!this.uuid.equals(other.uuid))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.weights == null) {
            if (other.weights != null)
                return false;
        }
        else if (!this.weights.equals(other.weights))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.uuid == null) ? 0 : this.uuid.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.weights == null) ? 0 : this.weights.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JooqVectorConfig (");

        sb.append(uuid);
        sb.append(", ").append(name);
        sb.append(", ").append(weights);

        sb.append(")");
        return sb.toString();
    }
}
