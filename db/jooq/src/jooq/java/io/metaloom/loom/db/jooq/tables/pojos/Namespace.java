/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.JSONB;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Namespace implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID          uuid;
    private String        name;
    private UUID          rootContentUuid;
    private JSONB         meta;
    private String        pathPrefix;
    private String        modelFilter;
    private LocalDateTime created;
    private UUID          creatorUuid;
    private LocalDateTime edited;
    private UUID          editorUuid;

    public Namespace() {}

    public Namespace(Namespace value) {
        this.uuid = value.uuid;
        this.name = value.name;
        this.rootContentUuid = value.rootContentUuid;
        this.meta = value.meta;
        this.pathPrefix = value.pathPrefix;
        this.modelFilter = value.modelFilter;
        this.created = value.created;
        this.creatorUuid = value.creatorUuid;
        this.edited = value.edited;
        this.editorUuid = value.editorUuid;
    }

    public Namespace(
        UUID          uuid,
        String        name,
        UUID          rootContentUuid,
        JSONB         meta,
        String        pathPrefix,
        String        modelFilter,
        LocalDateTime created,
        UUID          creatorUuid,
        LocalDateTime edited,
        UUID          editorUuid
    ) {
        this.uuid = uuid;
        this.name = name;
        this.rootContentUuid = rootContentUuid;
        this.meta = meta;
        this.pathPrefix = pathPrefix;
        this.modelFilter = modelFilter;
        this.created = created;
        this.creatorUuid = creatorUuid;
        this.edited = edited;
        this.editorUuid = editorUuid;
    }

    /**
     * Getter for <code>public.namespace.uuid</code>.
     */
    public UUID getUuid() {
        return this.uuid;
    }

    /**
     * Setter for <code>public.namespace.uuid</code>.
     */
    public void setUuid(UUID uuid) {
        this.uuid = uuid;
    }

    /**
     * Getter for <code>public.namespace.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.namespace.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.namespace.root_content_uuid</code>.
     */
    public UUID getRootContentUuid() {
        return this.rootContentUuid;
    }

    /**
     * Setter for <code>public.namespace.root_content_uuid</code>.
     */
    public void setRootContentUuid(UUID rootContentUuid) {
        this.rootContentUuid = rootContentUuid;
    }

    /**
     * Getter for <code>public.namespace.meta</code>. Custom meta properties to
     * the element
     */
    public JSONB getMeta() {
        return this.meta;
    }

    /**
     * Setter for <code>public.namespace.meta</code>. Custom meta properties to
     * the element
     */
    public void setMeta(JSONB meta) {
        this.meta = meta;
    }

    /**
     * Getter for <code>public.namespace.path_prefix</code>. Prefix for webroot
     * paths
     */
    public String getPathPrefix() {
        return this.pathPrefix;
    }

    /**
     * Setter for <code>public.namespace.path_prefix</code>. Prefix for webroot
     * paths
     */
    public void setPathPrefix(String pathPrefix) {
        this.pathPrefix = pathPrefix;
    }

    /**
     * Getter for <code>public.namespace.model_filter</code>. filter for models
     * that can be used in the namespace
     */
    public String getModelFilter() {
        return this.modelFilter;
    }

    /**
     * Setter for <code>public.namespace.model_filter</code>. filter for models
     * that can be used in the namespace
     */
    public void setModelFilter(String modelFilter) {
        this.modelFilter = modelFilter;
    }

    /**
     * Getter for <code>public.namespace.created</code>.
     */
    public LocalDateTime getCreated() {
        return this.created;
    }

    /**
     * Setter for <code>public.namespace.created</code>.
     */
    public void setCreated(LocalDateTime created) {
        this.created = created;
    }

    /**
     * Getter for <code>public.namespace.creator_uuid</code>.
     */
    public UUID getCreatorUuid() {
        return this.creatorUuid;
    }

    /**
     * Setter for <code>public.namespace.creator_uuid</code>.
     */
    public void setCreatorUuid(UUID creatorUuid) {
        this.creatorUuid = creatorUuid;
    }

    /**
     * Getter for <code>public.namespace.edited</code>.
     */
    public LocalDateTime getEdited() {
        return this.edited;
    }

    /**
     * Setter for <code>public.namespace.edited</code>.
     */
    public void setEdited(LocalDateTime edited) {
        this.edited = edited;
    }

    /**
     * Getter for <code>public.namespace.editor_uuid</code>.
     */
    public UUID getEditorUuid() {
        return this.editorUuid;
    }

    /**
     * Setter for <code>public.namespace.editor_uuid</code>.
     */
    public void setEditorUuid(UUID editorUuid) {
        this.editorUuid = editorUuid;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Namespace (");

        sb.append(uuid);
        sb.append(", ").append(name);
        sb.append(", ").append(rootContentUuid);
        sb.append(", ").append(meta);
        sb.append(", ").append(pathPrefix);
        sb.append(", ").append(modelFilter);
        sb.append(", ").append(created);
        sb.append(", ").append(creatorUuid);
        sb.append(", ").append(edited);
        sb.append(", ").append(editorUuid);

        sb.append(")");
        return sb.toString();
    }
}
