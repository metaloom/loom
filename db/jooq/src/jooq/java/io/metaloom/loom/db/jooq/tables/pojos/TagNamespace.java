/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import java.io.Serializable;
import java.util.UUID;


/**
 * Table used to taggings on namespaces
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TagNamespace implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID tagUuid;
    private UUID namespaceUuid;

    public TagNamespace() {}

    public TagNamespace(TagNamespace value) {
        this.tagUuid = value.tagUuid;
        this.namespaceUuid = value.namespaceUuid;
    }

    public TagNamespace(
        UUID tagUuid,
        UUID namespaceUuid
    ) {
        this.tagUuid = tagUuid;
        this.namespaceUuid = namespaceUuid;
    }

    /**
     * Getter for <code>public.tag_namespace.tag_uuid</code>.
     */
    public UUID getTagUuid() {
        return this.tagUuid;
    }

    /**
     * Setter for <code>public.tag_namespace.tag_uuid</code>.
     */
    public void setTagUuid(UUID tagUuid) {
        this.tagUuid = tagUuid;
    }

    /**
     * Getter for <code>public.tag_namespace.namespace_uuid</code>.
     */
    public UUID getNamespaceUuid() {
        return this.namespaceUuid;
    }

    /**
     * Setter for <code>public.tag_namespace.namespace_uuid</code>.
     */
    public void setNamespaceUuid(UUID namespaceUuid) {
        this.namespaceUuid = namespaceUuid;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TagNamespace other = (TagNamespace) obj;
        if (this.tagUuid == null) {
            if (other.tagUuid != null)
                return false;
        }
        else if (!this.tagUuid.equals(other.tagUuid))
            return false;
        if (this.namespaceUuid == null) {
            if (other.namespaceUuid != null)
                return false;
        }
        else if (!this.namespaceUuid.equals(other.namespaceUuid))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.tagUuid == null) ? 0 : this.tagUuid.hashCode());
        result = prime * result + ((this.namespaceUuid == null) ? 0 : this.namespaceUuid.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TagNamespace (");

        sb.append(tagUuid);
        sb.append(", ").append(namespaceUuid);

        sb.append(")");
        return sb.toString();
    }
}
