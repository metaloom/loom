/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import io.metaloom.loom.db.jooq.enums.LoomPermissionFlag;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.JSONB;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID               uuid;
    private String             username;
    private String             firstname;
    private String             lastname;
    private String             passwordhash;
    private String             email;
    private Boolean            enabled;
    private Boolean            sso;
    private JSONB              meta;
    private LoomPermissionFlag permissions;
    private LocalDateTime      created;
    private UUID               creatorUuid;
    private LocalDateTime      edited;
    private UUID               editorUuid;

    public User() {}

    public User(User value) {
        this.uuid = value.uuid;
        this.username = value.username;
        this.firstname = value.firstname;
        this.lastname = value.lastname;
        this.passwordhash = value.passwordhash;
        this.email = value.email;
        this.enabled = value.enabled;
        this.sso = value.sso;
        this.meta = value.meta;
        this.permissions = value.permissions;
        this.created = value.created;
        this.creatorUuid = value.creatorUuid;
        this.edited = value.edited;
        this.editorUuid = value.editorUuid;
    }

    public User(
        UUID               uuid,
        String             username,
        String             firstname,
        String             lastname,
        String             passwordhash,
        String             email,
        Boolean            enabled,
        Boolean            sso,
        JSONB              meta,
        LoomPermissionFlag permissions,
        LocalDateTime      created,
        UUID               creatorUuid,
        LocalDateTime      edited,
        UUID               editorUuid
    ) {
        this.uuid = uuid;
        this.username = username;
        this.firstname = firstname;
        this.lastname = lastname;
        this.passwordhash = passwordhash;
        this.email = email;
        this.enabled = enabled;
        this.sso = sso;
        this.meta = meta;
        this.permissions = permissions;
        this.created = created;
        this.creatorUuid = creatorUuid;
        this.edited = edited;
        this.editorUuid = editorUuid;
    }

    /**
     * Getter for <code>public.user.uuid</code>.
     */
    public UUID getUuid() {
        return this.uuid;
    }

    /**
     * Setter for <code>public.user.uuid</code>.
     */
    public void setUuid(UUID uuid) {
        this.uuid = uuid;
    }

    /**
     * Getter for <code>public.user.username</code>.
     */
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for <code>public.user.username</code>.
     */
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Getter for <code>public.user.firstname</code>.
     */
    public String getFirstname() {
        return this.firstname;
    }

    /**
     * Setter for <code>public.user.firstname</code>.
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Getter for <code>public.user.lastname</code>.
     */
    public String getLastname() {
        return this.lastname;
    }

    /**
     * Setter for <code>public.user.lastname</code>.
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Getter for <code>public.user.passwordhash</code>.
     */
    public String getPasswordhash() {
        return this.passwordhash;
    }

    /**
     * Setter for <code>public.user.passwordhash</code>.
     */
    public void setPasswordhash(String passwordhash) {
        this.passwordhash = passwordhash;
    }

    /**
     * Getter for <code>public.user.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>public.user.email</code>.
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for <code>public.user.enabled</code>. Flag to enable or disable
     * the user.
     */
    public Boolean getEnabled() {
        return this.enabled;
    }

    /**
     * Setter for <code>public.user.enabled</code>. Flag to enable or disable
     * the user.
     */
    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    /**
     * Getter for <code>public.user.sso</code>. Flag that indicates that the
     * user was created via SSO mappings
     */
    public Boolean getSso() {
        return this.sso;
    }

    /**
     * Setter for <code>public.user.sso</code>. Flag that indicates that the
     * user was created via SSO mappings
     */
    public void setSso(Boolean sso) {
        this.sso = sso;
    }

    /**
     * Getter for <code>public.user.meta</code>. Custom meta properties to the
     * element
     */
    public JSONB getMeta() {
        return this.meta;
    }

    /**
     * Setter for <code>public.user.meta</code>. Custom meta properties to the
     * element
     */
    public void setMeta(JSONB meta) {
        this.meta = meta;
    }

    /**
     * Getter for <code>public.user.permissions</code>.
     */
    public LoomPermissionFlag getPermissions() {
        return this.permissions;
    }

    /**
     * Setter for <code>public.user.permissions</code>.
     */
    public void setPermissions(LoomPermissionFlag permissions) {
        this.permissions = permissions;
    }

    /**
     * Getter for <code>public.user.created</code>.
     */
    public LocalDateTime getCreated() {
        return this.created;
    }

    /**
     * Setter for <code>public.user.created</code>.
     */
    public void setCreated(LocalDateTime created) {
        this.created = created;
    }

    /**
     * Getter for <code>public.user.creator_uuid</code>.
     */
    public UUID getCreatorUuid() {
        return this.creatorUuid;
    }

    /**
     * Setter for <code>public.user.creator_uuid</code>.
     */
    public void setCreatorUuid(UUID creatorUuid) {
        this.creatorUuid = creatorUuid;
    }

    /**
     * Getter for <code>public.user.edited</code>.
     */
    public LocalDateTime getEdited() {
        return this.edited;
    }

    /**
     * Setter for <code>public.user.edited</code>.
     */
    public void setEdited(LocalDateTime edited) {
        this.edited = edited;
    }

    /**
     * Getter for <code>public.user.editor_uuid</code>.
     */
    public UUID getEditorUuid() {
        return this.editorUuid;
    }

    /**
     * Setter for <code>public.user.editor_uuid</code>.
     */
    public void setEditorUuid(UUID editorUuid) {
        this.editorUuid = editorUuid;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("User (");

        sb.append(uuid);
        sb.append(", ").append(username);
        sb.append(", ").append(firstname);
        sb.append(", ").append(lastname);
        sb.append(", ").append(passwordhash);
        sb.append(", ").append(email);
        sb.append(", ").append(enabled);
        sb.append(", ").append(sso);
        sb.append(", ").append(meta);
        sb.append(", ").append(permissions);
        sb.append(", ").append(created);
        sb.append(", ").append(creatorUuid);
        sb.append(", ").append(edited);
        sb.append(", ").append(editorUuid);

        sb.append(")");
        return sb.toString();
    }
}
