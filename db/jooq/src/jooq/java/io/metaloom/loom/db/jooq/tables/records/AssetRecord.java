/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.metaloom.loom.db.jooq.tables.Asset;
import io.metaloom.loom.db.jooq.tables.interfaces.IAsset;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssetRecord extends UpdatableRecordImpl<AssetRecord> implements VertxPojo, Record17<UUID, UUID, UUID, String, String, String, Integer, String, String, BigDecimal, BigDecimal, String, String, LocalDateTime, UUID, LocalDateTime, UUID>, IAsset {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.asset.uuid</code>.
     */
    @Override
    public AssetRecord setUuid(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.uuid</code>.
     */
    @Override
    public UUID getUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.asset.asset_binary_uuid</code>.
     */
    @Override
    public AssetRecord setAssetBinaryUuid(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.asset_binary_uuid</code>.
     */
    @Override
    public UUID getAssetBinaryUuid() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.asset.namespace_uuid</code>.
     */
    @Override
    public AssetRecord setNamespaceUuid(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.namespace_uuid</code>.
     */
    @Override
    public UUID getNamespaceUuid() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.asset.filename</code>.
     */
    @Override
    public AssetRecord setFilename(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.filename</code>.
     */
    @Override
    public String getFilename() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.asset.localPath</code>. Local path to the asset (when using the local path feature)
     */
    @Override
    public AssetRecord setLocalpath(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.localPath</code>. Local path to the asset (when using the local path feature)
     */
    @Override
    public String getLocalpath() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.asset.meta</code>. Custom meta properties to the element
     */
    @Override
    public AssetRecord setMeta(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.meta</code>. Custom meta properties to the element
     */
    @Override
    public String getMeta() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.asset.rating</code>. Absolute or computed asset rating
     */
    @Override
    public AssetRecord setRating(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.rating</code>. Absolute or computed asset rating
     */
    @Override
    public Integer getRating() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.asset.dominantColor</code>.
     */
    @Override
    public AssetRecord setDominantcolor(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.dominantColor</code>.
     */
    @Override
    public String getDominantcolor() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.asset.mimeType</code>.
     */
    @Override
    public AssetRecord setMimetype(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.mimeType</code>.
     */
    @Override
    public String getMimetype() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.asset.gps_lon</code>.
     */
    @Override
    public AssetRecord setGpsLon(BigDecimal value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.gps_lon</code>.
     */
    @Override
    public BigDecimal getGpsLon() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for <code>public.asset.gps_lat</code>.
     */
    @Override
    public AssetRecord setGpsLat(BigDecimal value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.gps_lat</code>.
     */
    @Override
    public BigDecimal getGpsLat() {
        return (BigDecimal) get(10);
    }

    /**
     * Setter for <code>public.asset.s3_bucket_name</code>.
     */
    @Override
    public AssetRecord setS3BucketName(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.s3_bucket_name</code>.
     */
    @Override
    public String getS3BucketName() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.asset.s3_object_path</code>.
     */
    @Override
    public AssetRecord setS3ObjectPath(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.s3_object_path</code>.
     */
    @Override
    public String getS3ObjectPath() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.asset.created</code>.
     */
    @Override
    public AssetRecord setCreated(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.created</code>.
     */
    @Override
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>public.asset.creator_uuid</code>.
     */
    @Override
    public AssetRecord setCreatorUuid(UUID value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.creator_uuid</code>.
     */
    @Override
    public UUID getCreatorUuid() {
        return (UUID) get(14);
    }

    /**
     * Setter for <code>public.asset.edited</code>.
     */
    @Override
    public AssetRecord setEdited(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.edited</code>.
     */
    @Override
    public LocalDateTime getEdited() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>public.asset.editor_uuid</code>.
     */
    @Override
    public AssetRecord setEditorUuid(UUID value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>public.asset.editor_uuid</code>.
     */
    @Override
    public UUID getEditorUuid() {
        return (UUID) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<UUID, UUID, UUID, String, String, String, Integer, String, String, BigDecimal, BigDecimal, String, String, LocalDateTime, UUID, LocalDateTime, UUID> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<UUID, UUID, UUID, String, String, String, Integer, String, String, BigDecimal, BigDecimal, String, String, LocalDateTime, UUID, LocalDateTime, UUID> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Asset.ASSET.UUID;
    }

    @Override
    public Field<UUID> field2() {
        return Asset.ASSET.ASSET_BINARY_UUID;
    }

    @Override
    public Field<UUID> field3() {
        return Asset.ASSET.NAMESPACE_UUID;
    }

    @Override
    public Field<String> field4() {
        return Asset.ASSET.FILENAME;
    }

    @Override
    public Field<String> field5() {
        return Asset.ASSET.LOCALPATH;
    }

    @Override
    public Field<String> field6() {
        return Asset.ASSET.META;
    }

    @Override
    public Field<Integer> field7() {
        return Asset.ASSET.RATING;
    }

    @Override
    public Field<String> field8() {
        return Asset.ASSET.DOMINANTCOLOR;
    }

    @Override
    public Field<String> field9() {
        return Asset.ASSET.MIMETYPE;
    }

    @Override
    public Field<BigDecimal> field10() {
        return Asset.ASSET.GPS_LON;
    }

    @Override
    public Field<BigDecimal> field11() {
        return Asset.ASSET.GPS_LAT;
    }

    @Override
    public Field<String> field12() {
        return Asset.ASSET.S3_BUCKET_NAME;
    }

    @Override
    public Field<String> field13() {
        return Asset.ASSET.S3_OBJECT_PATH;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return Asset.ASSET.CREATED;
    }

    @Override
    public Field<UUID> field15() {
        return Asset.ASSET.CREATOR_UUID;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return Asset.ASSET.EDITED;
    }

    @Override
    public Field<UUID> field17() {
        return Asset.ASSET.EDITOR_UUID;
    }

    @Override
    public UUID component1() {
        return getUuid();
    }

    @Override
    public UUID component2() {
        return getAssetBinaryUuid();
    }

    @Override
    public UUID component3() {
        return getNamespaceUuid();
    }

    @Override
    public String component4() {
        return getFilename();
    }

    @Override
    public String component5() {
        return getLocalpath();
    }

    @Override
    public String component6() {
        return getMeta();
    }

    @Override
    public Integer component7() {
        return getRating();
    }

    @Override
    public String component8() {
        return getDominantcolor();
    }

    @Override
    public String component9() {
        return getMimetype();
    }

    @Override
    public BigDecimal component10() {
        return getGpsLon();
    }

    @Override
    public BigDecimal component11() {
        return getGpsLat();
    }

    @Override
    public String component12() {
        return getS3BucketName();
    }

    @Override
    public String component13() {
        return getS3ObjectPath();
    }

    @Override
    public LocalDateTime component14() {
        return getCreated();
    }

    @Override
    public UUID component15() {
        return getCreatorUuid();
    }

    @Override
    public LocalDateTime component16() {
        return getEdited();
    }

    @Override
    public UUID component17() {
        return getEditorUuid();
    }

    @Override
    public UUID value1() {
        return getUuid();
    }

    @Override
    public UUID value2() {
        return getAssetBinaryUuid();
    }

    @Override
    public UUID value3() {
        return getNamespaceUuid();
    }

    @Override
    public String value4() {
        return getFilename();
    }

    @Override
    public String value5() {
        return getLocalpath();
    }

    @Override
    public String value6() {
        return getMeta();
    }

    @Override
    public Integer value7() {
        return getRating();
    }

    @Override
    public String value8() {
        return getDominantcolor();
    }

    @Override
    public String value9() {
        return getMimetype();
    }

    @Override
    public BigDecimal value10() {
        return getGpsLon();
    }

    @Override
    public BigDecimal value11() {
        return getGpsLat();
    }

    @Override
    public String value12() {
        return getS3BucketName();
    }

    @Override
    public String value13() {
        return getS3ObjectPath();
    }

    @Override
    public LocalDateTime value14() {
        return getCreated();
    }

    @Override
    public UUID value15() {
        return getCreatorUuid();
    }

    @Override
    public LocalDateTime value16() {
        return getEdited();
    }

    @Override
    public UUID value17() {
        return getEditorUuid();
    }

    @Override
    public AssetRecord value1(UUID value) {
        setUuid(value);
        return this;
    }

    @Override
    public AssetRecord value2(UUID value) {
        setAssetBinaryUuid(value);
        return this;
    }

    @Override
    public AssetRecord value3(UUID value) {
        setNamespaceUuid(value);
        return this;
    }

    @Override
    public AssetRecord value4(String value) {
        setFilename(value);
        return this;
    }

    @Override
    public AssetRecord value5(String value) {
        setLocalpath(value);
        return this;
    }

    @Override
    public AssetRecord value6(String value) {
        setMeta(value);
        return this;
    }

    @Override
    public AssetRecord value7(Integer value) {
        setRating(value);
        return this;
    }

    @Override
    public AssetRecord value8(String value) {
        setDominantcolor(value);
        return this;
    }

    @Override
    public AssetRecord value9(String value) {
        setMimetype(value);
        return this;
    }

    @Override
    public AssetRecord value10(BigDecimal value) {
        setGpsLon(value);
        return this;
    }

    @Override
    public AssetRecord value11(BigDecimal value) {
        setGpsLat(value);
        return this;
    }

    @Override
    public AssetRecord value12(String value) {
        setS3BucketName(value);
        return this;
    }

    @Override
    public AssetRecord value13(String value) {
        setS3ObjectPath(value);
        return this;
    }

    @Override
    public AssetRecord value14(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public AssetRecord value15(UUID value) {
        setCreatorUuid(value);
        return this;
    }

    @Override
    public AssetRecord value16(LocalDateTime value) {
        setEdited(value);
        return this;
    }

    @Override
    public AssetRecord value17(UUID value) {
        setEditorUuid(value);
        return this;
    }

    @Override
    public AssetRecord values(UUID value1, UUID value2, UUID value3, String value4, String value5, String value6, Integer value7, String value8, String value9, BigDecimal value10, BigDecimal value11, String value12, String value13, LocalDateTime value14, UUID value15, LocalDateTime value16, UUID value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IAsset from) {
        setUuid(from.getUuid());
        setAssetBinaryUuid(from.getAssetBinaryUuid());
        setNamespaceUuid(from.getNamespaceUuid());
        setFilename(from.getFilename());
        setLocalpath(from.getLocalpath());
        setMeta(from.getMeta());
        setRating(from.getRating());
        setDominantcolor(from.getDominantcolor());
        setMimetype(from.getMimetype());
        setGpsLon(from.getGpsLon());
        setGpsLat(from.getGpsLat());
        setS3BucketName(from.getS3BucketName());
        setS3ObjectPath(from.getS3ObjectPath());
        setCreated(from.getCreated());
        setCreatorUuid(from.getCreatorUuid());
        setEdited(from.getEdited());
        setEditorUuid(from.getEditorUuid());
    }

    @Override
    public <E extends IAsset> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssetRecord
     */
    public AssetRecord() {
        super(Asset.ASSET);
    }

    /**
     * Create a detached, initialised AssetRecord
     */
    public AssetRecord(UUID uuid, UUID assetBinaryUuid, UUID namespaceUuid, String filename, String localpath, String meta, Integer rating, String dominantcolor, String mimetype, BigDecimal gpsLon, BigDecimal gpsLat, String s3BucketName, String s3ObjectPath, LocalDateTime created, UUID creatorUuid, LocalDateTime edited, UUID editorUuid) {
        super(Asset.ASSET);

        setUuid(uuid);
        setAssetBinaryUuid(assetBinaryUuid);
        setNamespaceUuid(namespaceUuid);
        setFilename(filename);
        setLocalpath(localpath);
        setMeta(meta);
        setRating(rating);
        setDominantcolor(dominantcolor);
        setMimetype(mimetype);
        setGpsLon(gpsLon);
        setGpsLat(gpsLat);
        setS3BucketName(s3BucketName);
        setS3ObjectPath(s3ObjectPath);
        setCreated(created);
        setCreatorUuid(creatorUuid);
        setEdited(edited);
        setEditorUuid(editorUuid);
    }

        public AssetRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
