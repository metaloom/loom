/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.records;


import io.metaloom.loom.db.jooq.tables.JooqAssetReaction;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqAssetReactionRecord extends UpdatableRecordImpl<JooqAssetReactionRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.asset_reaction.asset_uuid</code>.
     */
    public void setAssetUuid(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.asset_reaction.asset_uuid</code>.
     */
    public UUID getAssetUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.asset_reaction.reaction_asset_uuid</code>.
     */
    public void setReactionAssetUuid(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.asset_reaction.reaction_asset_uuid</code>.
     */
    public UUID getReactionAssetUuid() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return JooqAssetReaction.ASSET_REACTION.ASSET_UUID;
    }

    @Override
    public Field<UUID> field2() {
        return JooqAssetReaction.ASSET_REACTION.REACTION_ASSET_UUID;
    }

    @Override
    public UUID component1() {
        return getAssetUuid();
    }

    @Override
    public UUID component2() {
        return getReactionAssetUuid();
    }

    @Override
    public UUID value1() {
        return getAssetUuid();
    }

    @Override
    public UUID value2() {
        return getReactionAssetUuid();
    }

    @Override
    public JooqAssetReactionRecord value1(UUID value) {
        setAssetUuid(value);
        return this;
    }

    @Override
    public JooqAssetReactionRecord value2(UUID value) {
        setReactionAssetUuid(value);
        return this;
    }

    @Override
    public JooqAssetReactionRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JooqAssetReactionRecord
     */
    public JooqAssetReactionRecord() {
        super(JooqAssetReaction.ASSET_REACTION);
    }

    /**
     * Create a detached, initialised JooqAssetReactionRecord
     */
    public JooqAssetReactionRecord(UUID assetUuid, UUID reactionAssetUuid) {
        super(JooqAssetReaction.ASSET_REACTION);

        setAssetUuid(assetUuid);
        setReactionAssetUuid(reactionAssetUuid);
    }

    /**
     * Create a detached, initialised JooqAssetReactionRecord
     */
    public JooqAssetReactionRecord(io.metaloom.loom.db.jooq.tables.pojos.JooqAssetReaction value) {
        super(JooqAssetReaction.ASSET_REACTION);

        if (value != null) {
            setAssetUuid(value.getAssetUuid());
            setReactionAssetUuid(value.getReactionAssetUuid());
        }
    }
}
