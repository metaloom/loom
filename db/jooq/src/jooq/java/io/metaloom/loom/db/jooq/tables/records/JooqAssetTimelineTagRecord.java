/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.records;


import io.metaloom.loom.db.jooq.tables.JooqAssetTimelineTag;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqAssetTimelineTagRecord extends TableRecordImpl<JooqAssetTimelineTagRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.asset_timeline_tag.assettimeline_uuid</code>.
     */
    public void setAssettimelineUuid(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.asset_timeline_tag.assettimeline_uuid</code>.
     */
    public UUID getAssettimelineUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.asset_timeline_tag.tag_uuid</code>.
     */
    public void setTagUuid(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.asset_timeline_tag.tag_uuid</code>.
     */
    public UUID getTagUuid() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return JooqAssetTimelineTag.ASSET_TIMELINE_TAG.ASSETTIMELINE_UUID;
    }

    @Override
    public Field<UUID> field2() {
        return JooqAssetTimelineTag.ASSET_TIMELINE_TAG.TAG_UUID;
    }

    @Override
    public UUID component1() {
        return getAssettimelineUuid();
    }

    @Override
    public UUID component2() {
        return getTagUuid();
    }

    @Override
    public UUID value1() {
        return getAssettimelineUuid();
    }

    @Override
    public UUID value2() {
        return getTagUuid();
    }

    @Override
    public JooqAssetTimelineTagRecord value1(UUID value) {
        setAssettimelineUuid(value);
        return this;
    }

    @Override
    public JooqAssetTimelineTagRecord value2(UUID value) {
        setTagUuid(value);
        return this;
    }

    @Override
    public JooqAssetTimelineTagRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JooqAssetTimelineTagRecord
     */
    public JooqAssetTimelineTagRecord() {
        super(JooqAssetTimelineTag.ASSET_TIMELINE_TAG);
    }

    /**
     * Create a detached, initialised JooqAssetTimelineTagRecord
     */
    public JooqAssetTimelineTagRecord(UUID assettimelineUuid, UUID tagUuid) {
        super(JooqAssetTimelineTag.ASSET_TIMELINE_TAG);

        setAssettimelineUuid(assettimelineUuid);
        setTagUuid(tagUuid);
    }

    /**
     * Create a detached, initialised JooqAssetTimelineTagRecord
     */
    public JooqAssetTimelineTagRecord(io.metaloom.loom.db.jooq.tables.pojos.JooqAssetTimelineTag value) {
        super(JooqAssetTimelineTag.ASSET_TIMELINE_TAG);

        if (value != null) {
            setAssettimelineUuid(value.getAssettimelineUuid());
            setTagUuid(value.getTagUuid());
        }
    }
}
