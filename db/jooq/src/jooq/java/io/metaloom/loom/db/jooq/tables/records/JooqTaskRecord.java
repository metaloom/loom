/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.records;


import io.metaloom.loom.db.jooq.enums.JooqTaskStatus;
import io.metaloom.loom.db.jooq.tables.JooqTask;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqTaskRecord extends UpdatableRecordImpl<JooqTaskRecord> implements Record10<UUID, String, String, LocalDateTime, JooqTaskStatus, Integer, LocalDateTime, UUID, LocalDateTime, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.task.uuid</code>.
     */
    public void setUuid(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.task.uuid</code>.
     */
    public UUID getUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.task.title</code>. Title of the task
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.task.title</code>. Title of the task
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.task.content</code>. Description of the task
     */
    public void setContent(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.task.content</code>. Description of the task
     */
    public String getContent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.task.due_date</code>.
     */
    public void setDueDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.task.due_date</code>.
     */
    public LocalDateTime getDueDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.task.status</code>. Current status of the task
     * (e.g. PENDING, REJECTED)
     */
    public void setStatus(JooqTaskStatus value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.task.status</code>. Current status of the task
     * (e.g. PENDING, REJECTED)
     */
    public JooqTaskStatus getStatus() {
        return (JooqTaskStatus) get(4);
    }

    /**
     * Setter for <code>public.task.priority</code>.
     */
    public void setPriority(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.task.priority</code>.
     */
    public Integer getPriority() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.task.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.task.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.task.creator_uuid</code>.
     */
    public void setCreatorUuid(UUID value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.task.creator_uuid</code>.
     */
    public UUID getCreatorUuid() {
        return (UUID) get(7);
    }

    /**
     * Setter for <code>public.task.edited</code>.
     */
    public void setEdited(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.task.edited</code>.
     */
    public LocalDateTime getEdited() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>public.task.editor_uuid</code>.
     */
    public void setEditorUuid(UUID value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.task.editor_uuid</code>.
     */
    public UUID getEditorUuid() {
        return (UUID) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<UUID, String, String, LocalDateTime, JooqTaskStatus, Integer, LocalDateTime, UUID, LocalDateTime, UUID> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<UUID, String, String, LocalDateTime, JooqTaskStatus, Integer, LocalDateTime, UUID, LocalDateTime, UUID> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return JooqTask.TASK.UUID;
    }

    @Override
    public Field<String> field2() {
        return JooqTask.TASK.TITLE;
    }

    @Override
    public Field<String> field3() {
        return JooqTask.TASK.CONTENT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return JooqTask.TASK.DUE_DATE;
    }

    @Override
    public Field<JooqTaskStatus> field5() {
        return JooqTask.TASK.STATUS;
    }

    @Override
    public Field<Integer> field6() {
        return JooqTask.TASK.PRIORITY;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return JooqTask.TASK.CREATED;
    }

    @Override
    public Field<UUID> field8() {
        return JooqTask.TASK.CREATOR_UUID;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return JooqTask.TASK.EDITED;
    }

    @Override
    public Field<UUID> field10() {
        return JooqTask.TASK.EDITOR_UUID;
    }

    @Override
    public UUID component1() {
        return getUuid();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getContent();
    }

    @Override
    public LocalDateTime component4() {
        return getDueDate();
    }

    @Override
    public JooqTaskStatus component5() {
        return getStatus();
    }

    @Override
    public Integer component6() {
        return getPriority();
    }

    @Override
    public LocalDateTime component7() {
        return getCreated();
    }

    @Override
    public UUID component8() {
        return getCreatorUuid();
    }

    @Override
    public LocalDateTime component9() {
        return getEdited();
    }

    @Override
    public UUID component10() {
        return getEditorUuid();
    }

    @Override
    public UUID value1() {
        return getUuid();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getContent();
    }

    @Override
    public LocalDateTime value4() {
        return getDueDate();
    }

    @Override
    public JooqTaskStatus value5() {
        return getStatus();
    }

    @Override
    public Integer value6() {
        return getPriority();
    }

    @Override
    public LocalDateTime value7() {
        return getCreated();
    }

    @Override
    public UUID value8() {
        return getCreatorUuid();
    }

    @Override
    public LocalDateTime value9() {
        return getEdited();
    }

    @Override
    public UUID value10() {
        return getEditorUuid();
    }

    @Override
    public JooqTaskRecord value1(UUID value) {
        setUuid(value);
        return this;
    }

    @Override
    public JooqTaskRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public JooqTaskRecord value3(String value) {
        setContent(value);
        return this;
    }

    @Override
    public JooqTaskRecord value4(LocalDateTime value) {
        setDueDate(value);
        return this;
    }

    @Override
    public JooqTaskRecord value5(JooqTaskStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public JooqTaskRecord value6(Integer value) {
        setPriority(value);
        return this;
    }

    @Override
    public JooqTaskRecord value7(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public JooqTaskRecord value8(UUID value) {
        setCreatorUuid(value);
        return this;
    }

    @Override
    public JooqTaskRecord value9(LocalDateTime value) {
        setEdited(value);
        return this;
    }

    @Override
    public JooqTaskRecord value10(UUID value) {
        setEditorUuid(value);
        return this;
    }

    @Override
    public JooqTaskRecord values(UUID value1, String value2, String value3, LocalDateTime value4, JooqTaskStatus value5, Integer value6, LocalDateTime value7, UUID value8, LocalDateTime value9, UUID value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JooqTaskRecord
     */
    public JooqTaskRecord() {
        super(JooqTask.TASK);
    }

    /**
     * Create a detached, initialised JooqTaskRecord
     */
    public JooqTaskRecord(UUID uuid, String title, String content, LocalDateTime dueDate, JooqTaskStatus status, Integer priority, LocalDateTime created, UUID creatorUuid, LocalDateTime edited, UUID editorUuid) {
        super(JooqTask.TASK);

        setUuid(uuid);
        setTitle(title);
        setContent(content);
        setDueDate(dueDate);
        setStatus(status);
        setPriority(priority);
        setCreated(created);
        setCreatorUuid(creatorUuid);
        setEdited(edited);
        setEditorUuid(editorUuid);
    }
}
