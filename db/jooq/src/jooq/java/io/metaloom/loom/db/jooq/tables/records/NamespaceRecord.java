/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.metaloom.loom.db.jooq.tables.Namespace;
import io.metaloom.loom.db.jooq.tables.interfaces.INamespace;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NamespaceRecord extends UpdatableRecordImpl<NamespaceRecord> implements VertxPojo, Record10<UUID, String, UUID, String, String, String, LocalDateTime, UUID, LocalDateTime, UUID>, INamespace {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.namespace.uuid</code>.
     */
    @Override
    public NamespaceRecord setUuid(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.namespace.uuid</code>.
     */
    @Override
    public UUID getUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.namespace.name</code>.
     */
    @Override
    public NamespaceRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.namespace.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.namespace.root_content_uuid</code>.
     */
    @Override
    public NamespaceRecord setRootContentUuid(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.namespace.root_content_uuid</code>.
     */
    @Override
    public UUID getRootContentUuid() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.namespace.meta</code>. Custom meta properties to the element
     */
    @Override
    public NamespaceRecord setMeta(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.namespace.meta</code>. Custom meta properties to the element
     */
    @Override
    public String getMeta() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.namespace.path_prefix</code>. Prefix for webroot paths
     */
    @Override
    public NamespaceRecord setPathPrefix(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.namespace.path_prefix</code>. Prefix for webroot paths
     */
    @Override
    public String getPathPrefix() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.namespace.model_filters</code>. filter for models that can be used in the namespace
     */
    @Override
    public NamespaceRecord setModelFilters(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.namespace.model_filters</code>. filter for models that can be used in the namespace
     */
    @Override
    public String getModelFilters() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.namespace.created</code>.
     */
    @Override
    public NamespaceRecord setCreated(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.namespace.created</code>.
     */
    @Override
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.namespace.creator_uuid</code>.
     */
    @Override
    public NamespaceRecord setCreatorUuid(UUID value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.namespace.creator_uuid</code>.
     */
    @Override
    public UUID getCreatorUuid() {
        return (UUID) get(7);
    }

    /**
     * Setter for <code>public.namespace.edited</code>.
     */
    @Override
    public NamespaceRecord setEdited(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.namespace.edited</code>.
     */
    @Override
    public LocalDateTime getEdited() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>public.namespace.editor_uuid</code>.
     */
    @Override
    public NamespaceRecord setEditorUuid(UUID value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.namespace.editor_uuid</code>.
     */
    @Override
    public UUID getEditorUuid() {
        return (UUID) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<UUID, String, UUID, String, String, String, LocalDateTime, UUID, LocalDateTime, UUID> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<UUID, String, UUID, String, String, String, LocalDateTime, UUID, LocalDateTime, UUID> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Namespace.NAMESPACE.UUID;
    }

    @Override
    public Field<String> field2() {
        return Namespace.NAMESPACE.NAME;
    }

    @Override
    public Field<UUID> field3() {
        return Namespace.NAMESPACE.ROOT_CONTENT_UUID;
    }

    @Override
    public Field<String> field4() {
        return Namespace.NAMESPACE.META;
    }

    @Override
    public Field<String> field5() {
        return Namespace.NAMESPACE.PATH_PREFIX;
    }

    @Override
    public Field<String> field6() {
        return Namespace.NAMESPACE.MODEL_FILTERS;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Namespace.NAMESPACE.CREATED;
    }

    @Override
    public Field<UUID> field8() {
        return Namespace.NAMESPACE.CREATOR_UUID;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return Namespace.NAMESPACE.EDITED;
    }

    @Override
    public Field<UUID> field10() {
        return Namespace.NAMESPACE.EDITOR_UUID;
    }

    @Override
    public UUID component1() {
        return getUuid();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public UUID component3() {
        return getRootContentUuid();
    }

    @Override
    public String component4() {
        return getMeta();
    }

    @Override
    public String component5() {
        return getPathPrefix();
    }

    @Override
    public String component6() {
        return getModelFilters();
    }

    @Override
    public LocalDateTime component7() {
        return getCreated();
    }

    @Override
    public UUID component8() {
        return getCreatorUuid();
    }

    @Override
    public LocalDateTime component9() {
        return getEdited();
    }

    @Override
    public UUID component10() {
        return getEditorUuid();
    }

    @Override
    public UUID value1() {
        return getUuid();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public UUID value3() {
        return getRootContentUuid();
    }

    @Override
    public String value4() {
        return getMeta();
    }

    @Override
    public String value5() {
        return getPathPrefix();
    }

    @Override
    public String value6() {
        return getModelFilters();
    }

    @Override
    public LocalDateTime value7() {
        return getCreated();
    }

    @Override
    public UUID value8() {
        return getCreatorUuid();
    }

    @Override
    public LocalDateTime value9() {
        return getEdited();
    }

    @Override
    public UUID value10() {
        return getEditorUuid();
    }

    @Override
    public NamespaceRecord value1(UUID value) {
        setUuid(value);
        return this;
    }

    @Override
    public NamespaceRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public NamespaceRecord value3(UUID value) {
        setRootContentUuid(value);
        return this;
    }

    @Override
    public NamespaceRecord value4(String value) {
        setMeta(value);
        return this;
    }

    @Override
    public NamespaceRecord value5(String value) {
        setPathPrefix(value);
        return this;
    }

    @Override
    public NamespaceRecord value6(String value) {
        setModelFilters(value);
        return this;
    }

    @Override
    public NamespaceRecord value7(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public NamespaceRecord value8(UUID value) {
        setCreatorUuid(value);
        return this;
    }

    @Override
    public NamespaceRecord value9(LocalDateTime value) {
        setEdited(value);
        return this;
    }

    @Override
    public NamespaceRecord value10(UUID value) {
        setEditorUuid(value);
        return this;
    }

    @Override
    public NamespaceRecord values(UUID value1, String value2, UUID value3, String value4, String value5, String value6, LocalDateTime value7, UUID value8, LocalDateTime value9, UUID value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(INamespace from) {
        setUuid(from.getUuid());
        setName(from.getName());
        setRootContentUuid(from.getRootContentUuid());
        setMeta(from.getMeta());
        setPathPrefix(from.getPathPrefix());
        setModelFilters(from.getModelFilters());
        setCreated(from.getCreated());
        setCreatorUuid(from.getCreatorUuid());
        setEdited(from.getEdited());
        setEditorUuid(from.getEditorUuid());
    }

    @Override
    public <E extends INamespace> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NamespaceRecord
     */
    public NamespaceRecord() {
        super(Namespace.NAMESPACE);
    }

    /**
     * Create a detached, initialised NamespaceRecord
     */
    public NamespaceRecord(UUID uuid, String name, UUID rootContentUuid, String meta, String pathPrefix, String modelFilters, LocalDateTime created, UUID creatorUuid, LocalDateTime edited, UUID editorUuid) {
        super(Namespace.NAMESPACE);

        setUuid(uuid);
        setName(name);
        setRootContentUuid(rootContentUuid);
        setMeta(meta);
        setPathPrefix(pathPrefix);
        setModelFilters(modelFilters);
        setCreated(created);
        setCreatorUuid(creatorUuid);
        setEdited(edited);
        setEditorUuid(editorUuid);
    }

        public NamespaceRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
