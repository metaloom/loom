/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.records;


import io.metaloom.loom.db.jooq.tables.RolePermission;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolePermissionRecord extends UpdatableRecordImpl<RolePermissionRecord> implements Record8<UUID, UUID, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.role_permission.role_uuid</code>.
     */
    public void setRoleUuid(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.role_permission.role_uuid</code>.
     */
    public UUID getRoleUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.role_permission.element_uuid</code>.
     */
    public void setElementUuid(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.role_permission.element_uuid</code>.
     */
    public UUID getElementUuid() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.role_permission.create_perm</code>.
     */
    public void setCreatePerm(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.role_permission.create_perm</code>.
     */
    public Boolean getCreatePerm() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>public.role_permission.read_perm</code>.
     */
    public void setReadPerm(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.role_permission.read_perm</code>.
     */
    public Boolean getReadPerm() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>public.role_permission.delete_perm</code>.
     */
    public void setDeletePerm(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.role_permission.delete_perm</code>.
     */
    public Boolean getDeletePerm() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.role_permission.update_perm</code>.
     */
    public void setUpdatePerm(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.role_permission.update_perm</code>.
     */
    public Boolean getUpdatePerm() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.role_permission.read_publish_perm</code>.
     */
    public void setReadPublishPerm(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.role_permission.read_publish_perm</code>.
     */
    public Boolean getReadPublishPerm() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.role_permission.publish_perm</code>.
     */
    public void setPublishPerm(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.role_permission.publish_perm</code>.
     */
    public Boolean getPublishPerm() {
        return (Boolean) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, UUID, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, UUID, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return RolePermission.ROLE_PERMISSION.ROLE_UUID;
    }

    @Override
    public Field<UUID> field2() {
        return RolePermission.ROLE_PERMISSION.ELEMENT_UUID;
    }

    @Override
    public Field<Boolean> field3() {
        return RolePermission.ROLE_PERMISSION.CREATE_PERM;
    }

    @Override
    public Field<Boolean> field4() {
        return RolePermission.ROLE_PERMISSION.READ_PERM;
    }

    @Override
    public Field<Boolean> field5() {
        return RolePermission.ROLE_PERMISSION.DELETE_PERM;
    }

    @Override
    public Field<Boolean> field6() {
        return RolePermission.ROLE_PERMISSION.UPDATE_PERM;
    }

    @Override
    public Field<Boolean> field7() {
        return RolePermission.ROLE_PERMISSION.READ_PUBLISH_PERM;
    }

    @Override
    public Field<Boolean> field8() {
        return RolePermission.ROLE_PERMISSION.PUBLISH_PERM;
    }

    @Override
    public UUID component1() {
        return getRoleUuid();
    }

    @Override
    public UUID component2() {
        return getElementUuid();
    }

    @Override
    public Boolean component3() {
        return getCreatePerm();
    }

    @Override
    public Boolean component4() {
        return getReadPerm();
    }

    @Override
    public Boolean component5() {
        return getDeletePerm();
    }

    @Override
    public Boolean component6() {
        return getUpdatePerm();
    }

    @Override
    public Boolean component7() {
        return getReadPublishPerm();
    }

    @Override
    public Boolean component8() {
        return getPublishPerm();
    }

    @Override
    public UUID value1() {
        return getRoleUuid();
    }

    @Override
    public UUID value2() {
        return getElementUuid();
    }

    @Override
    public Boolean value3() {
        return getCreatePerm();
    }

    @Override
    public Boolean value4() {
        return getReadPerm();
    }

    @Override
    public Boolean value5() {
        return getDeletePerm();
    }

    @Override
    public Boolean value6() {
        return getUpdatePerm();
    }

    @Override
    public Boolean value7() {
        return getReadPublishPerm();
    }

    @Override
    public Boolean value8() {
        return getPublishPerm();
    }

    @Override
    public RolePermissionRecord value1(UUID value) {
        setRoleUuid(value);
        return this;
    }

    @Override
    public RolePermissionRecord value2(UUID value) {
        setElementUuid(value);
        return this;
    }

    @Override
    public RolePermissionRecord value3(Boolean value) {
        setCreatePerm(value);
        return this;
    }

    @Override
    public RolePermissionRecord value4(Boolean value) {
        setReadPerm(value);
        return this;
    }

    @Override
    public RolePermissionRecord value5(Boolean value) {
        setDeletePerm(value);
        return this;
    }

    @Override
    public RolePermissionRecord value6(Boolean value) {
        setUpdatePerm(value);
        return this;
    }

    @Override
    public RolePermissionRecord value7(Boolean value) {
        setReadPublishPerm(value);
        return this;
    }

    @Override
    public RolePermissionRecord value8(Boolean value) {
        setPublishPerm(value);
        return this;
    }

    @Override
    public RolePermissionRecord values(UUID value1, UUID value2, Boolean value3, Boolean value4, Boolean value5, Boolean value6, Boolean value7, Boolean value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RolePermissionRecord
     */
    public RolePermissionRecord() {
        super(RolePermission.ROLE_PERMISSION);
    }

    /**
     * Create a detached, initialised RolePermissionRecord
     */
    public RolePermissionRecord(UUID roleUuid, UUID elementUuid, Boolean createPerm, Boolean readPerm, Boolean deletePerm, Boolean updatePerm, Boolean readPublishPerm, Boolean publishPerm) {
        super(RolePermission.ROLE_PERMISSION);

        setRoleUuid(roleUuid);
        setElementUuid(elementUuid);
        setCreatePerm(createPerm);
        setReadPerm(readPerm);
        setDeletePerm(deletePerm);
        setUpdatePerm(updatePerm);
        setReadPublishPerm(readPublishPerm);
        setPublishPerm(publishPerm);
    }
}
