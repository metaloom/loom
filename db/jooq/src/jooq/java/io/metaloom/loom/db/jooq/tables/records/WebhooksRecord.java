/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.records;


import io.metaloom.loom.db.jooq.enums.LoomEvents;
import io.metaloom.loom.db.jooq.tables.Webhooks;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Table which stores the registered webhooks
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WebhooksRecord extends UpdatableRecordImpl<WebhooksRecord> implements Record11<UUID, String, String, Boolean, LoomEvents, String, JSONB, LocalDateTime, UUID, LocalDateTime, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.webhooks.uuid</code>.
     */
    public void setUuid(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.webhooks.uuid</code>.
     */
    public UUID getUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.webhooks.url</code>.
     */
    public void setUrl(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.webhooks.url</code>.
     */
    public String getUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.webhooks.status</code>.
     */
    public void setStatus(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.webhooks.status</code>.
     */
    public String getStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.webhooks.active</code>.
     */
    public void setActive(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.webhooks.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>public.webhooks.triggers</code>. List of triggers which
     * can invoke the webhook
     */
    public void setTriggers(LoomEvents value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.webhooks.triggers</code>. List of triggers which
     * can invoke the webhook
     */
    public LoomEvents getTriggers() {
        return (LoomEvents) get(4);
    }

    /**
     * Setter for <code>public.webhooks.secretToken</code>. Secret token which
     * webhook services can use to authenticate the request.
     */
    public void setSecrettoken(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.webhooks.secretToken</code>. Secret token which
     * webhook services can use to authenticate the request.
     */
    public String getSecrettoken() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.webhooks.meta</code>. Custom meta properties to
     * the element
     */
    public void setMeta(JSONB value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.webhooks.meta</code>. Custom meta properties to
     * the element
     */
    public JSONB getMeta() {
        return (JSONB) get(6);
    }

    /**
     * Setter for <code>public.webhooks.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.webhooks.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.webhooks.creator_uuid</code>.
     */
    public void setCreatorUuid(UUID value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.webhooks.creator_uuid</code>.
     */
    public UUID getCreatorUuid() {
        return (UUID) get(8);
    }

    /**
     * Setter for <code>public.webhooks.edited</code>.
     */
    public void setEdited(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.webhooks.edited</code>.
     */
    public LocalDateTime getEdited() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>public.webhooks.editor_uuid</code>.
     */
    public void setEditorUuid(UUID value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.webhooks.editor_uuid</code>.
     */
    public UUID getEditorUuid() {
        return (UUID) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<UUID, String, String, Boolean, LoomEvents, String, JSONB, LocalDateTime, UUID, LocalDateTime, UUID> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<UUID, String, String, Boolean, LoomEvents, String, JSONB, LocalDateTime, UUID, LocalDateTime, UUID> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Webhooks.WEBHOOKS.UUID;
    }

    @Override
    public Field<String> field2() {
        return Webhooks.WEBHOOKS.URL;
    }

    @Override
    public Field<String> field3() {
        return Webhooks.WEBHOOKS.STATUS;
    }

    @Override
    public Field<Boolean> field4() {
        return Webhooks.WEBHOOKS.ACTIVE;
    }

    @Override
    public Field<LoomEvents> field5() {
        return Webhooks.WEBHOOKS.TRIGGERS;
    }

    @Override
    public Field<String> field6() {
        return Webhooks.WEBHOOKS.SECRETTOKEN;
    }

    @Override
    public Field<JSONB> field7() {
        return Webhooks.WEBHOOKS.META;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Webhooks.WEBHOOKS.CREATED;
    }

    @Override
    public Field<UUID> field9() {
        return Webhooks.WEBHOOKS.CREATOR_UUID;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Webhooks.WEBHOOKS.EDITED;
    }

    @Override
    public Field<UUID> field11() {
        return Webhooks.WEBHOOKS.EDITOR_UUID;
    }

    @Override
    public UUID component1() {
        return getUuid();
    }

    @Override
    public String component2() {
        return getUrl();
    }

    @Override
    public String component3() {
        return getStatus();
    }

    @Override
    public Boolean component4() {
        return getActive();
    }

    @Override
    public LoomEvents component5() {
        return getTriggers();
    }

    @Override
    public String component6() {
        return getSecrettoken();
    }

    @Override
    public JSONB component7() {
        return getMeta();
    }

    @Override
    public LocalDateTime component8() {
        return getCreated();
    }

    @Override
    public UUID component9() {
        return getCreatorUuid();
    }

    @Override
    public LocalDateTime component10() {
        return getEdited();
    }

    @Override
    public UUID component11() {
        return getEditorUuid();
    }

    @Override
    public UUID value1() {
        return getUuid();
    }

    @Override
    public String value2() {
        return getUrl();
    }

    @Override
    public String value3() {
        return getStatus();
    }

    @Override
    public Boolean value4() {
        return getActive();
    }

    @Override
    public LoomEvents value5() {
        return getTriggers();
    }

    @Override
    public String value6() {
        return getSecrettoken();
    }

    @Override
    public JSONB value7() {
        return getMeta();
    }

    @Override
    public LocalDateTime value8() {
        return getCreated();
    }

    @Override
    public UUID value9() {
        return getCreatorUuid();
    }

    @Override
    public LocalDateTime value10() {
        return getEdited();
    }

    @Override
    public UUID value11() {
        return getEditorUuid();
    }

    @Override
    public WebhooksRecord value1(UUID value) {
        setUuid(value);
        return this;
    }

    @Override
    public WebhooksRecord value2(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public WebhooksRecord value3(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public WebhooksRecord value4(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public WebhooksRecord value5(LoomEvents value) {
        setTriggers(value);
        return this;
    }

    @Override
    public WebhooksRecord value6(String value) {
        setSecrettoken(value);
        return this;
    }

    @Override
    public WebhooksRecord value7(JSONB value) {
        setMeta(value);
        return this;
    }

    @Override
    public WebhooksRecord value8(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public WebhooksRecord value9(UUID value) {
        setCreatorUuid(value);
        return this;
    }

    @Override
    public WebhooksRecord value10(LocalDateTime value) {
        setEdited(value);
        return this;
    }

    @Override
    public WebhooksRecord value11(UUID value) {
        setEditorUuid(value);
        return this;
    }

    @Override
    public WebhooksRecord values(UUID value1, String value2, String value3, Boolean value4, LoomEvents value5, String value6, JSONB value7, LocalDateTime value8, UUID value9, LocalDateTime value10, UUID value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WebhooksRecord
     */
    public WebhooksRecord() {
        super(Webhooks.WEBHOOKS);
    }

    /**
     * Create a detached, initialised WebhooksRecord
     */
    public WebhooksRecord(UUID uuid, String url, String status, Boolean active, LoomEvents triggers, String secrettoken, JSONB meta, LocalDateTime created, UUID creatorUuid, LocalDateTime edited, UUID editorUuid) {
        super(Webhooks.WEBHOOKS);

        setUuid(uuid);
        setUrl(url);
        setStatus(status);
        setActive(active);
        setTriggers(triggers);
        setSecrettoken(secrettoken);
        setMeta(meta);
        setCreated(created);
        setCreatorUuid(creatorUuid);
        setEdited(edited);
        setEditorUuid(editorUuid);
    }
}
