/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IModel extends VertxPojo, Serializable {

    /**
     * Setter for <code>public.model.uuid</code>.
     */
    public IModel setUuid(UUID value);

    /**
     * Getter for <code>public.model.uuid</code>.
     */
    public UUID getUuid();

    /**
     * Setter for <code>public.model.name</code>. Human readable name of the content model
     */
    public IModel setName(String value);

    /**
     * Getter for <code>public.model.name</code>. Human readable name of the content model
     */
    public String getName();

    /**
     * Setter for <code>public.model.latest_version_uuid</code>.
     */
    public IModel setLatestVersionUuid(UUID value);

    /**
     * Getter for <code>public.model.latest_version_uuid</code>.
     */
    public UUID getLatestVersionUuid();

    /**
     * Setter for <code>public.model.created</code>.
     */
    public IModel setCreated(LocalDateTime value);

    /**
     * Getter for <code>public.model.created</code>.
     */
    public LocalDateTime getCreated();

    /**
     * Setter for <code>public.model.creator_uuid</code>.
     */
    public IModel setCreatorUuid(UUID value);

    /**
     * Getter for <code>public.model.creator_uuid</code>.
     */
    public UUID getCreatorUuid();

    /**
     * Setter for <code>public.model.edited</code>.
     */
    public IModel setEdited(LocalDateTime value);

    /**
     * Getter for <code>public.model.edited</code>.
     */
    public LocalDateTime getEdited();

    /**
     * Setter for <code>public.model.editor_uuid</code>.
     */
    public IModel setEditorUuid(UUID value);

    /**
     * Getter for <code>public.model.editor_uuid</code>.
     */
    public UUID getEditorUuid();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IModel
     */
    public void from(IModel from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IModel
     */
    public <E extends IModel> E into(E into);

        @Override
        public default IModel fromJson(io.vertx.core.json.JsonObject json) {
                // Omitting unrecognized type java.util.UUID for column uuid!
                setOrThrow(this::setName,json::getString,"name","java.lang.String");
                // Omitting unrecognized type java.util.UUID for column latest_version_uuid!
                setOrThrow(this::setCreated,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"created","java.time.LocalDateTime");
                // Omitting unrecognized type java.util.UUID for column creator_uuid!
                setOrThrow(this::setEdited,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"edited","java.time.LocalDateTime");
                // Omitting unrecognized type java.util.UUID for column editor_uuid!
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                // Omitting unrecognized type java.util.UUID for column uuid!
                json.put("name",getName());
                // Omitting unrecognized type java.util.UUID for column latest_version_uuid!
                json.put("created",getCreated()==null?null:getCreated().toString());
                // Omitting unrecognized type java.util.UUID for column creator_uuid!
                json.put("edited",getEdited()==null?null:getEdited().toString());
                // Omitting unrecognized type java.util.UUID for column editor_uuid!
                return json;
        }

}
