/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.metaloom.loom.db.jooq.enums.LoomPermissionFlag;

import java.io.Serializable;
import java.util.UUID;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IUserToken extends VertxPojo, Serializable {

    /**
     * Setter for <code>public.user_token.uuid</code>.
     */
    public IUserToken setUuid(UUID value);

    /**
     * Getter for <code>public.user_token.uuid</code>.
     */
    public UUID getUuid();

    /**
     * Setter for <code>public.user_token.user_uuid</code>.
     */
    public IUserToken setUserUuid(UUID value);

    /**
     * Getter for <code>public.user_token.user_uuid</code>.
     */
    public UUID getUserUuid();

    /**
     * Setter for <code>public.user_token.note</code>.
     */
    public IUserToken setNote(String value);

    /**
     * Getter for <code>public.user_token.note</code>.
     */
    public String getNote();

    /**
     * Setter for <code>public.user_token.token</code>.
     */
    public IUserToken setToken(String value);

    /**
     * Getter for <code>public.user_token.token</code>.
     */
    public String getToken();

    /**
     * Setter for <code>public.user_token.permissions</code>.
     */
    public IUserToken setPermissions(LoomPermissionFlag value);

    /**
     * Getter for <code>public.user_token.permissions</code>.
     */
    public LoomPermissionFlag getPermissions();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IUserToken
     */
    public void from(IUserToken from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IUserToken
     */
    public <E extends IUserToken> E into(E into);

        @Override
        public default IUserToken fromJson(io.vertx.core.json.JsonObject json) {
                // Omitting unrecognized type java.util.UUID for column uuid!
                // Omitting unrecognized type java.util.UUID for column user_uuid!
                setOrThrow(this::setNote,json::getString,"note","java.lang.String");
                setOrThrow(this::setToken,json::getString,"token","java.lang.String");
                setOrThrow(this::setPermissions,key -> java.util.Arrays.stream(io.metaloom.loom.db.jooq.enums.LoomPermissionFlag.values()).filter(td -> td.getLiteral().equals(json.getString(key))).findFirst().orElse(null),"permissions","io.metaloom.loom.db.jooq.enums.LoomPermissionFlag");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                // Omitting unrecognized type java.util.UUID for column uuid!
                // Omitting unrecognized type java.util.UUID for column user_uuid!
                json.put("note",getNote());
                json.put("token",getToken());
                json.put("permissions",getPermissions()==null?null:getPermissions().getLiteral());
                return json;
        }

}
