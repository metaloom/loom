/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.metaloom.loom.db.jooq.tables.interfaces.IField;

import java.time.LocalDateTime;
import java.util.UUID;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * Table which stores the actual fields content as JSON
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Field implements VertxPojo, IField {

    private static final long serialVersionUID = 1L;

    private UUID          uuid;
    private UUID          contentUuid;
    private String        fieldsJson;
    private UUID          languageUuid;
    private LocalDateTime edited;
    private UUID          editorUuid;
    private UUID          modelversionUuid;
    private Integer       version;

    public Field() {}

    public Field(IField value) {
        this.uuid = value.getUuid();
        this.contentUuid = value.getContentUuid();
        this.fieldsJson = value.getFieldsJson();
        this.languageUuid = value.getLanguageUuid();
        this.edited = value.getEdited();
        this.editorUuid = value.getEditorUuid();
        this.modelversionUuid = value.getModelversionUuid();
        this.version = value.getVersion();
    }

    public Field(
        UUID          uuid,
        UUID          contentUuid,
        String        fieldsJson,
        UUID          languageUuid,
        LocalDateTime edited,
        UUID          editorUuid,
        UUID          modelversionUuid,
        Integer       version
    ) {
        this.uuid = uuid;
        this.contentUuid = contentUuid;
        this.fieldsJson = fieldsJson;
        this.languageUuid = languageUuid;
        this.edited = edited;
        this.editorUuid = editorUuid;
        this.modelversionUuid = modelversionUuid;
        this.version = version;
    }

        public Field(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>public.field.uuid</code>.
     */
    @Override
    public UUID getUuid() {
        return this.uuid;
    }

    /**
     * Setter for <code>public.field.uuid</code>.
     */
    @Override
    public Field setUuid(UUID uuid) {
        this.uuid = uuid;
        return this;
    }

    /**
     * Getter for <code>public.field.content_uuid</code>. Reference to the content that uses this fields record
     */
    @Override
    public UUID getContentUuid() {
        return this.contentUuid;
    }

    /**
     * Setter for <code>public.field.content_uuid</code>. Reference to the content that uses this fields record
     */
    @Override
    public Field setContentUuid(UUID contentUuid) {
        this.contentUuid = contentUuid;
        return this;
    }

    /**
     * Getter for <code>public.field.fields_json</code>. JSON which contains the actual fields content
     */
    @Override
    public String getFieldsJson() {
        return this.fieldsJson;
    }

    /**
     * Setter for <code>public.field.fields_json</code>. JSON which contains the actual fields content
     */
    @Override
    public Field setFieldsJson(String fieldsJson) {
        this.fieldsJson = fieldsJson;
        return this;
    }

    /**
     * Getter for <code>public.field.language_uuid</code>.
     */
    @Override
    public UUID getLanguageUuid() {
        return this.languageUuid;
    }

    /**
     * Setter for <code>public.field.language_uuid</code>.
     */
    @Override
    public Field setLanguageUuid(UUID languageUuid) {
        this.languageUuid = languageUuid;
        return this;
    }

    /**
     * Getter for <code>public.field.edited</code>.
     */
    @Override
    public LocalDateTime getEdited() {
        return this.edited;
    }

    /**
     * Setter for <code>public.field.edited</code>.
     */
    @Override
    public Field setEdited(LocalDateTime edited) {
        this.edited = edited;
        return this;
    }

    /**
     * Getter for <code>public.field.editor_uuid</code>.
     */
    @Override
    public UUID getEditorUuid() {
        return this.editorUuid;
    }

    /**
     * Setter for <code>public.field.editor_uuid</code>.
     */
    @Override
    public Field setEditorUuid(UUID editorUuid) {
        this.editorUuid = editorUuid;
        return this;
    }

    /**
     * Getter for <code>public.field.modelversion_uuid</code>.
     */
    @Override
    public UUID getModelversionUuid() {
        return this.modelversionUuid;
    }

    /**
     * Setter for <code>public.field.modelversion_uuid</code>.
     */
    @Override
    public Field setModelversionUuid(UUID modelversionUuid) {
        this.modelversionUuid = modelversionUuid;
        return this;
    }

    /**
     * Getter for <code>public.field.version</code>.
     */
    @Override
    public Integer getVersion() {
        return this.version;
    }

    /**
     * Setter for <code>public.field.version</code>.
     */
    @Override
    public Field setVersion(Integer version) {
        this.version = version;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Field (");

        sb.append(uuid);
        sb.append(", ").append(contentUuid);
        sb.append(", ").append(fieldsJson);
        sb.append(", ").append(languageUuid);
        sb.append(", ").append(edited);
        sb.append(", ").append(editorUuid);
        sb.append(", ").append(modelversionUuid);
        sb.append(", ").append(version);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IField from) {
        setUuid(from.getUuid());
        setContentUuid(from.getContentUuid());
        setFieldsJson(from.getFieldsJson());
        setLanguageUuid(from.getLanguageUuid());
        setEdited(from.getEdited());
        setEditorUuid(from.getEditorUuid());
        setModelversionUuid(from.getModelversionUuid());
        setVersion(from.getVersion());
    }

    @Override
    public <E extends IField> E into(E into) {
        into.from(this);
        return into;
    }
}
