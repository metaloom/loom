/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.metaloom.loom.db.jooq.tables.interfaces.ILoom;

import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Loom implements VertxPojo, ILoom {

    private static final long serialVersionUID = 1L;

    private String        dbRev;
    private LocalDateTime lastUsedTimestamp;

    public Loom() {}

    public Loom(ILoom value) {
        this.dbRev = value.getDbRev();
        this.lastUsedTimestamp = value.getLastUsedTimestamp();
    }

    public Loom(
        String        dbRev,
        LocalDateTime lastUsedTimestamp
    ) {
        this.dbRev = dbRev;
        this.lastUsedTimestamp = lastUsedTimestamp;
    }

        public Loom(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>public.loom.db_rev</code>.
     */
    @Override
    public String getDbRev() {
        return this.dbRev;
    }

    /**
     * Setter for <code>public.loom.db_rev</code>.
     */
    @Override
    public Loom setDbRev(String dbRev) {
        this.dbRev = dbRev;
        return this;
    }

    /**
     * Getter for <code>public.loom.last_used_timestamp</code>.
     */
    @Override
    public LocalDateTime getLastUsedTimestamp() {
        return this.lastUsedTimestamp;
    }

    /**
     * Setter for <code>public.loom.last_used_timestamp</code>.
     */
    @Override
    public Loom setLastUsedTimestamp(LocalDateTime lastUsedTimestamp) {
        this.lastUsedTimestamp = lastUsedTimestamp;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Loom (");

        sb.append(dbRev);
        sb.append(", ").append(lastUsedTimestamp);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ILoom from) {
        setDbRev(from.getDbRev());
        setLastUsedTimestamp(from.getLastUsedTimestamp());
    }

    @Override
    public <E extends ILoom> E into(E into) {
        into.from(this);
        return into;
    }
}
