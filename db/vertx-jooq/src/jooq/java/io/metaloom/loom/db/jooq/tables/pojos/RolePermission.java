/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.pojos;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.metaloom.loom.db.jooq.tables.interfaces.IRolePermission;

import java.util.UUID;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolePermission implements VertxPojo, IRolePermission {

    private static final long serialVersionUID = 1L;

    private UUID    roleUuid;
    private UUID    elementUuid;
    private Boolean createPerm;
    private Boolean readPerm;
    private Boolean deletePerm;
    private Boolean updatePerm;
    private Boolean readPublishPerm;
    private Boolean publishPerm;

    public RolePermission() {}

    public RolePermission(IRolePermission value) {
        this.roleUuid = value.getRoleUuid();
        this.elementUuid = value.getElementUuid();
        this.createPerm = value.getCreatePerm();
        this.readPerm = value.getReadPerm();
        this.deletePerm = value.getDeletePerm();
        this.updatePerm = value.getUpdatePerm();
        this.readPublishPerm = value.getReadPublishPerm();
        this.publishPerm = value.getPublishPerm();
    }

    public RolePermission(
        UUID    roleUuid,
        UUID    elementUuid,
        Boolean createPerm,
        Boolean readPerm,
        Boolean deletePerm,
        Boolean updatePerm,
        Boolean readPublishPerm,
        Boolean publishPerm
    ) {
        this.roleUuid = roleUuid;
        this.elementUuid = elementUuid;
        this.createPerm = createPerm;
        this.readPerm = readPerm;
        this.deletePerm = deletePerm;
        this.updatePerm = updatePerm;
        this.readPublishPerm = readPublishPerm;
        this.publishPerm = publishPerm;
    }

        public RolePermission(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>public.role_permission.role_uuid</code>.
     */
    @Override
    public UUID getRoleUuid() {
        return this.roleUuid;
    }

    /**
     * Setter for <code>public.role_permission.role_uuid</code>.
     */
    @Override
    public RolePermission setRoleUuid(UUID roleUuid) {
        this.roleUuid = roleUuid;
        return this;
    }

    /**
     * Getter for <code>public.role_permission.element_uuid</code>.
     */
    @Override
    public UUID getElementUuid() {
        return this.elementUuid;
    }

    /**
     * Setter for <code>public.role_permission.element_uuid</code>.
     */
    @Override
    public RolePermission setElementUuid(UUID elementUuid) {
        this.elementUuid = elementUuid;
        return this;
    }

    /**
     * Getter for <code>public.role_permission.create_perm</code>.
     */
    @Override
    public Boolean getCreatePerm() {
        return this.createPerm;
    }

    /**
     * Setter for <code>public.role_permission.create_perm</code>.
     */
    @Override
    public RolePermission setCreatePerm(Boolean createPerm) {
        this.createPerm = createPerm;
        return this;
    }

    /**
     * Getter for <code>public.role_permission.read_perm</code>.
     */
    @Override
    public Boolean getReadPerm() {
        return this.readPerm;
    }

    /**
     * Setter for <code>public.role_permission.read_perm</code>.
     */
    @Override
    public RolePermission setReadPerm(Boolean readPerm) {
        this.readPerm = readPerm;
        return this;
    }

    /**
     * Getter for <code>public.role_permission.delete_perm</code>.
     */
    @Override
    public Boolean getDeletePerm() {
        return this.deletePerm;
    }

    /**
     * Setter for <code>public.role_permission.delete_perm</code>.
     */
    @Override
    public RolePermission setDeletePerm(Boolean deletePerm) {
        this.deletePerm = deletePerm;
        return this;
    }

    /**
     * Getter for <code>public.role_permission.update_perm</code>.
     */
    @Override
    public Boolean getUpdatePerm() {
        return this.updatePerm;
    }

    /**
     * Setter for <code>public.role_permission.update_perm</code>.
     */
    @Override
    public RolePermission setUpdatePerm(Boolean updatePerm) {
        this.updatePerm = updatePerm;
        return this;
    }

    /**
     * Getter for <code>public.role_permission.read_publish_perm</code>.
     */
    @Override
    public Boolean getReadPublishPerm() {
        return this.readPublishPerm;
    }

    /**
     * Setter for <code>public.role_permission.read_publish_perm</code>.
     */
    @Override
    public RolePermission setReadPublishPerm(Boolean readPublishPerm) {
        this.readPublishPerm = readPublishPerm;
        return this;
    }

    /**
     * Getter for <code>public.role_permission.publish_perm</code>.
     */
    @Override
    public Boolean getPublishPerm() {
        return this.publishPerm;
    }

    /**
     * Setter for <code>public.role_permission.publish_perm</code>.
     */
    @Override
    public RolePermission setPublishPerm(Boolean publishPerm) {
        this.publishPerm = publishPerm;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RolePermission (");

        sb.append(roleUuid);
        sb.append(", ").append(elementUuid);
        sb.append(", ").append(createPerm);
        sb.append(", ").append(readPerm);
        sb.append(", ").append(deletePerm);
        sb.append(", ").append(updatePerm);
        sb.append(", ").append(readPublishPerm);
        sb.append(", ").append(publishPerm);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRolePermission from) {
        setRoleUuid(from.getRoleUuid());
        setElementUuid(from.getElementUuid());
        setCreatePerm(from.getCreatePerm());
        setReadPerm(from.getReadPerm());
        setDeletePerm(from.getDeletePerm());
        setUpdatePerm(from.getUpdatePerm());
        setReadPublishPerm(from.getReadPublishPerm());
        setPublishPerm(from.getPublishPerm());
    }

    @Override
    public <E extends IRolePermission> E into(E into) {
        into.from(this);
        return into;
    }
}
