/*
 * This file is generated by jOOQ.
 */
package io.metaloom.loom.db.jooq.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.metaloom.loom.db.jooq.tables.Language;
import io.metaloom.loom.db.jooq.tables.interfaces.ILanguage;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * Table which stores the languages for loom
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LanguageRecord extends UpdatableRecordImpl<LanguageRecord> implements VertxPojo, Record4<UUID, String, String, String>, ILanguage {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.language.uuid</code>.
     */
    @Override
    public LanguageRecord setUuid(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.language.uuid</code>.
     */
    @Override
    public UUID getUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.language.native_name</code>.
     */
    @Override
    public LanguageRecord setNativeName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.language.native_name</code>.
     */
    @Override
    public String getNativeName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.language.tag</code>.
     */
    @Override
    public LanguageRecord setTag(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.language.tag</code>.
     */
    @Override
    public String getTag() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.language.meta</code>. Custom meta properties to the element
     */
    @Override
    public LanguageRecord setMeta(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.language.meta</code>. Custom meta properties to the element
     */
    @Override
    public String getMeta() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Language.LANGUAGE.UUID;
    }

    @Override
    public Field<String> field2() {
        return Language.LANGUAGE.NATIVE_NAME;
    }

    @Override
    public Field<String> field3() {
        return Language.LANGUAGE.TAG;
    }

    @Override
    public Field<String> field4() {
        return Language.LANGUAGE.META;
    }

    @Override
    public UUID component1() {
        return getUuid();
    }

    @Override
    public String component2() {
        return getNativeName();
    }

    @Override
    public String component3() {
        return getTag();
    }

    @Override
    public String component4() {
        return getMeta();
    }

    @Override
    public UUID value1() {
        return getUuid();
    }

    @Override
    public String value2() {
        return getNativeName();
    }

    @Override
    public String value3() {
        return getTag();
    }

    @Override
    public String value4() {
        return getMeta();
    }

    @Override
    public LanguageRecord value1(UUID value) {
        setUuid(value);
        return this;
    }

    @Override
    public LanguageRecord value2(String value) {
        setNativeName(value);
        return this;
    }

    @Override
    public LanguageRecord value3(String value) {
        setTag(value);
        return this;
    }

    @Override
    public LanguageRecord value4(String value) {
        setMeta(value);
        return this;
    }

    @Override
    public LanguageRecord values(UUID value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ILanguage from) {
        setUuid(from.getUuid());
        setNativeName(from.getNativeName());
        setTag(from.getTag());
        setMeta(from.getMeta());
    }

    @Override
    public <E extends ILanguage> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LanguageRecord
     */
    public LanguageRecord() {
        super(Language.LANGUAGE);
    }

    /**
     * Create a detached, initialised LanguageRecord
     */
    public LanguageRecord(UUID uuid, String nativeName, String tag, String meta) {
        super(Language.LANGUAGE);

        setUuid(uuid);
        setNativeName(nativeName);
        setTag(tag);
        setMeta(meta);
    }

        public LanguageRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
